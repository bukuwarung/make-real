{
  "components": [
    {
      "name": "Upload",
      "description": "The Upload component enables users to easily select and transfer files from their device to a server. It supports multiple file formats, offers drag-and-drop functionality, and provides visual feedback during the upload process, ensuring a seamless and efficient user experience.",
      "props": {
        "accept": {
          "type": "string",
          "description": "Specifies which file types can be selected for upload through the file input dialog.",
          "optional": true
        },
        "action": {
          "type": "union",
          "optional": true,
          "description": "Defines the URL endpoint where the file will be uploaded when the upload button is clicked.",
          "typeDefinition": {
            "typeString": "string | (file: RcFile) => string | (file: RcFile) => PromiseLike",
            "props": [
              {
                "key": "string",
                "type": "intrinsic"
              },
              {
                "key": "(file: RcFile) => string",
                "type": "reflection",
                "typeDefinition": {
                  "typeString": "(file: RcFile) => string",
                  "isFunction": true,
                  "props": [
                    {
                      "key": "file",
                      "type": "RcFile",
                      "isParam": true,
                      "optional": false,
                      "typeDefinition": {
                        "typeString": "RcFile"
                      }
                    },
                    {
                      "key": "string",
                      "type": "intrinsic",
                      "isReturn": true
                    }
                  ]
                }
              },
              {
                "key": "(file: RcFile) => PromiseLike",
                "type": "reflection",
                "typeDefinition": {
                  "typeString": "(file: RcFile) => PromiseLike",
                  "isFunction": true,
                  "props": [
                    {
                      "key": "file",
                      "type": "RcFile",
                      "isParam": true,
                      "optional": false,
                      "typeDefinition": {
                        "typeString": "RcFile"
                      }
                    },
                    {
                      "key": "PromiseLike",
                      "type": "reference",
                      "isReturn": true,
                      "typeDefinition": {
                        "typeString": "PromiseLike"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        "beforeUpload": {
          "type": "object",
          "optional": true,
          "description": "Provides a function that runs before the upload starts, allowing validation or file transformation before the actual upload process begins.",
          "typeDefinition": {
            "typeString": "(file: RcFile, FileList: RcFile[]) => BeforeUploadValueType | Promise",
            "isFunction": true,
            "props": [
              {
                "key": "file",
                "type": "RcFile",
                "isParam": true,
                "optional": false,
                "typeDefinition": {
                  "typeString": "RcFile"
                }
              },
              {
                "key": "FileList",
                "type": "RcFile[]",
                "isParam": true,
                "optional": false,
                "typeDefinition": {
                  "typeString": "RcFile[]",
                  "isArray": true,
                  "props": [
                    {
                      "key": "RcFile",
                      "type": "reference",
                      "typeDefinition": {
                        "typeString": "RcFile"
                      }
                    }
                  ]
                }
              },
              {
                "key": "BeforeUploadValueType | Promise",
                "type": "union",
                "isReturn": true,
                "typeDefinition": {
                  "typeString": "BeforeUploadValueType | Promise",
                  "props": [
                    {
                      "key": "BeforeUploadValueType",
                      "type": "reference",
                      "typeDefinition": {
                        "typeString": "BeforeUploadValueType"
                      }
                    },
                    {
                      "key": "Promise",
                      "type": "reference",
                      "typeDefinition": {
                        "typeString": "Promise"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        "customRequest": {
          "type": "object",
          "optional": true,
          "description": "Allows overriding the default upload behavior with a custom implementation for handling file uploads.",
          "typeDefinition": {
            "typeString": "(options: UploadRequestOption) => void",
            "isFunction": true,
            "props": [
              {
                "key": "options",
                "type": "UploadRequestOption",
                "isParam": true,
                "optional": false,
                "typeDefinition": {
                  "typeString": "UploadRequestOption"
                }
              },
              {
                "key": "void",
                "type": "intrinsic",
                "isReturn": true
              }
            ]
          }
        },
        "data": {
          "type": "union",
          "optional": true,
          "description": "Specifies additional form data that will be sent along with the file during the upload request.",
          "typeDefinition": {
            "typeString": "Record | (file: UploadFile) => Record | Promise",
            "props": [
              {
                "key": "Record",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "Record"
                }
              },
              {
                "key": "(file: UploadFile) => Record | Promise",
                "type": "reflection",
                "typeDefinition": {
                  "typeString": "(file: UploadFile) => Record | Promise",
                  "isFunction": true,
                  "props": [
                    {
                      "key": "file",
                      "type": "UploadFile",
                      "isParam": true,
                      "optional": false,
                      "typeDefinition": {
                        "typeString": "UploadFile"
                      }
                    },
                    {
                      "key": "Record | Promise",
                      "type": "union",
                      "isReturn": true,
                      "typeDefinition": {
                        "typeString": "Record | Promise",
                        "props": [
                          {
                            "key": "Record",
                            "type": "reference",
                            "typeDefinition": {
                              "typeString": "Record"
                            }
                          },
                          {
                            "key": "Promise",
                            "type": "reference",
                            "typeDefinition": {
                              "typeString": "Promise"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        "defaultFileList": {
          "type": "array",
          "optional": true,
          "description": "Sets the initial list of files that should appear as already uploaded when the component first renders.",
          "typeDefinition": {
            "typeString": "UploadFile[]",
            "isArray": true,
            "props": [
              {
                "key": "UploadFile",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "UploadFile"
                }
              }
            ]
          }
        },
        "directory": {
          "type": "boolean",
          "description": "Enables the selection and upload of entire directories instead of individual files when set to true.",
          "optional": true
        },
        "disabled": {
          "type": "boolean",
          "description": "Controls whether the upload functionality is active or inactive, preventing user interaction when set to true.",
          "optional": true
        },
        "fileList": {
          "type": "array",
          "optional": true,
          "description": "Provides a controlled way to manage the list of files that are currently uploaded or in the process of being uploaded.",
          "typeDefinition": {
            "typeString": "UploadFile[]",
            "isArray": true,
            "props": [
              {
                "key": "UploadFile",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "UploadFile"
                }
              }
            ]
          }
        },
        "headers": {
          "type": "HttpRequestHeader",
          "optional": true,
          "description": "Defines custom HTTP headers that will be included in the upload request to the server.",
          "typeDefinition": {
            "typeString": "HttpRequestHeader"
          }
        },
        "iconRender": {
          "type": "object",
          "optional": true,
          "description": "Provides a custom function to render the icon displayed for each file in the upload list.",
          "typeDefinition": {
            "typeString": "(file: UploadFile, listType: UploadListType) => ReactNode",
            "isFunction": true,
            "props": [
              {
                "key": "file",
                "type": "UploadFile",
                "isParam": true,
                "optional": false,
                "typeDefinition": {
                  "typeString": "UploadFile"
                }
              },
              {
                "key": "listType",
                "type": "UploadListType",
                "isParam": true,
                "optional": false,
                "typeDefinition": {
                  "typeString": "UploadListType"
                }
              },
              {
                "key": "ReactNode",
                "type": "reference",
                "isReturn": true,
                "typeDefinition": {
                  "typeString": "ReactNode"
                }
              }
            ]
          }
        },
        "isImageUrl": {
          "type": "object",
          "optional": true,
          "description": "Supplies a custom function to determine whether a file should be treated as an image for preview purposes.",
          "typeDefinition": {
            "typeString": "(file: UploadFile) => boolean",
            "isFunction": true,
            "props": [
              {
                "key": "file",
                "type": "UploadFile",
                "isParam": true,
                "optional": false,
                "typeDefinition": {
                  "typeString": "UploadFile"
                }
              },
              {
                "key": "boolean",
                "type": "intrinsic",
                "isReturn": true
              }
            ]
          }
        },
        "itemRender": {
          "type": "ItemRender",
          "optional": true,
          "description": "Allows customization of how each uploaded file item is displayed in the list through a custom render function.",
          "typeDefinition": {
            "typeString": "ItemRender"
          }
        },
        "listType": {
          "type": "UploadListType",
          "optional": true,
          "description": "Determines how the list of uploaded files is displayed, offering options like text, picture, or picture-card views.",
          "typeDefinition": {
            "typeString": "UploadListType"
          }
        },
        "maxCount": {
          "type": "number",
          "description": "Limits the total number of files that can be uploaded through the component at any given time.",
          "optional": true
        },
        "method": {
          "type": "union",
          "optional": true,
          "description": "Specifies which HTTP method (like POST or PUT) should be used when sending the upload request to the server.",
          "typeDefinition": {
            "typeString": "POST | PUT | PATCH | post | put | patch",
            "props": [
              {
                "key": "POST",
                "type": "string"
              },
              {
                "key": "PUT",
                "type": "string"
              },
              {
                "key": "PATCH",
                "type": "string"
              },
              {
                "key": "post",
                "type": "string"
              },
              {
                "key": "put",
                "type": "string"
              },
              {
                "key": "patch",
                "type": "string"
              }
            ]
          }
        },
        "multiple": {
          "type": "boolean",
          "description": "Enables users to select and upload multiple files simultaneously when set to true.",
          "optional": true
        },
        "name": {
          "type": "string",
          "description": "Sets the name of the file field that will be used in the upload request form data.",
          "optional": true
        },
        "onChange": {
          "type": "object",
          "optional": true,
          "description": "Fires whenever the file list changes, providing information about the current state of all files being uploaded.",
          "typeDefinition": {
            "typeString": "(info: UploadChangeParam) => void",
            "isFunction": true,
            "props": [
              {
                "key": "info",
                "type": "UploadChangeParam",
                "isParam": true,
                "optional": false,
                "typeDefinition": {
                  "typeString": "UploadChangeParam"
                }
              },
              {
                "key": "void",
                "type": "intrinsic",
                "isReturn": true
              }
            ]
          }
        },
        "onDownload": {
          "type": "object",
          "optional": true,
          "description": "Executes when a user clicks the download button for a file in the upload list.",
          "typeDefinition": {
            "typeString": "(file: UploadFile) => void",
            "isFunction": true,
            "props": [
              {
                "key": "file",
                "type": "UploadFile",
                "isParam": true,
                "optional": false,
                "typeDefinition": {
                  "typeString": "UploadFile"
                }
              },
              {
                "key": "void",
                "type": "intrinsic",
                "isReturn": true
              }
            ]
          }
        },
        "onDrop": {
          "type": "object",
          "optional": true,
          "description": "Triggers when files are dropped onto the upload component, providing access to the dropped file objects.",
          "typeDefinition": {
            "typeString": "(event: DragEvent) => void",
            "isFunction": true,
            "props": [
              {
                "key": "event",
                "type": "DragEvent",
                "isParam": true,
                "optional": false,
                "typeDefinition": {
                  "typeString": "DragEvent"
                }
              },
              {
                "key": "void",
                "type": "intrinsic",
                "isReturn": true
              }
            ]
          }
        },
        "onPreview": {
          "type": "object",
          "optional": true,
          "description": "Fires when a user clicks to preview a file, typically used for implementing custom preview behavior.",
          "typeDefinition": {
            "typeString": "(file: UploadFile) => void",
            "isFunction": true,
            "props": [
              {
                "key": "file",
                "type": "UploadFile",
                "isParam": true,
                "optional": false,
                "typeDefinition": {
                  "typeString": "UploadFile"
                }
              },
              {
                "key": "void",
                "type": "intrinsic",
                "isReturn": true
              }
            ]
          }
        },
        "onRemove": {
          "type": "object",
          "optional": true,
          "description": "Triggers when a user attempts to remove a file from the upload list, allowing custom removal handling.",
          "typeDefinition": {
            "typeString": "(file: UploadFile) => boolean | void | Promise",
            "isFunction": true,
            "props": [
              {
                "key": "file",
                "type": "UploadFile",
                "isParam": true,
                "optional": false,
                "typeDefinition": {
                  "typeString": "UploadFile"
                }
              },
              {
                "key": "boolean | void | Promise",
                "type": "union",
                "isReturn": true,
                "typeDefinition": {
                  "typeString": "boolean | void | Promise",
                  "props": [
                    {
                      "key": "boolean",
                      "type": "intrinsic"
                    },
                    {
                      "key": "void",
                      "type": "intrinsic"
                    },
                    {
                      "key": "Promise",
                      "type": "reference",
                      "typeDefinition": {
                        "typeString": "Promise"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        "openFileDialogOnClick": {
          "type": "boolean",
          "description": "Controls whether clicking the upload component opens the file selection dialog, which can be disabled for custom trigger implementations.",
          "optional": true
        },
        "previewFile": {
          "type": "PreviewFileHandler",
          "optional": true,
          "description": "Provides a custom function to generate preview data for files before they are uploaded.",
          "typeDefinition": {
            "typeString": "PreviewFileHandler"
          }
        },
        "progress": {
          "type": "UploadListProgressProps",
          "optional": true,
          "description": "Customizes the appearance and behavior of the progress indicator shown during file uploads.",
          "typeDefinition": {
            "typeString": "UploadListProgressProps"
          }
        },
        "showUploadList": {
          "type": "union",
          "optional": true,
          "description": "Controls the visibility and configuration of the list showing uploaded and pending files.",
          "typeDefinition": {
            "typeString": "boolean | ShowUploadListInterface",
            "props": [
              {
                "key": "boolean",
                "type": "intrinsic"
              },
              {
                "key": "ShowUploadListInterface",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "ShowUploadListInterface"
                }
              }
            ]
          }
        },
        "withCredentials": {
          "type": "boolean",
          "description": "Determines whether cookies should be included in the upload request when making cross-origin requests.",
          "optional": true
        }
      },
      "componentTypeName": "UploadProps"
    },
    {
      "name": "Typography",
      "description": "The Typography component enhances text presentation through customizable styles, including font size, weight, and color. It ensures readability and visual hierarchy, making it essential for creating engaging and accessible user interfaces. Ideal for headings, body text, and captions, it supports a cohesive design language.",
      "props": {
        "children": {
          "type": "string",
          "description": "The text content to be displayed in the typography component"
        },
        "className": {
          "type": "string",
          "description": "Additional CSS class name for custom styling",
          "optional": true
        },
        "color": {
          "type": "string",
          "description": "Custom text color using hex code (e.g. #FF0000), which will be overridden if fontColor prop is set",
          "optional": true
        },
        "fontColor": {
          "type": "union",
          "optional": true,
          "description": "Predefined text color from the theme's color options that takes precedence over the color prop",
          "typeDefinition": {
            "typeString": "colorTextPlaceholder | colorTextHeading | colorPrimary | colorWarning | colorInfo | colorTextSecondary | colorPrimaryHover | colorPrimaryActive | colorWarningHover | colorWarningActive | colorInfoHover | colorInfoActive | colorNegative | colorNegativeHover | colorNegativeActive | colorPositive | colorPositiveHover | colorPositiveActive | colorTextPrimary | colorTextPrimaryInverse | colorTextParagraph",
            "props": [
              {
                "key": "colorTextPlaceholder",
                "type": "string"
              },
              {
                "key": "colorTextHeading",
                "type": "string"
              },
              {
                "key": "colorPrimary",
                "type": "string"
              },
              {
                "key": "colorWarning",
                "type": "string"
              },
              {
                "key": "colorInfo",
                "type": "string"
              },
              {
                "key": "colorTextSecondary",
                "type": "string"
              },
              {
                "key": "colorPrimaryHover",
                "type": "string"
              },
              {
                "key": "colorPrimaryActive",
                "type": "string"
              },
              {
                "key": "colorWarningHover",
                "type": "string"
              },
              {
                "key": "colorWarningActive",
                "type": "string"
              },
              {
                "key": "colorInfoHover",
                "type": "string"
              },
              {
                "key": "colorInfoActive",
                "type": "string"
              },
              {
                "key": "colorNegative",
                "type": "string"
              },
              {
                "key": "colorNegativeHover",
                "type": "string"
              },
              {
                "key": "colorNegativeActive",
                "type": "string"
              },
              {
                "key": "colorPositive",
                "type": "string"
              },
              {
                "key": "colorPositiveHover",
                "type": "string"
              },
              {
                "key": "colorPositiveActive",
                "type": "string"
              },
              {
                "key": "colorTextPrimary",
                "type": "string"
              },
              {
                "key": "colorTextPrimaryInverse",
                "type": "string"
              },
              {
                "key": "colorTextParagraph",
                "type": "string"
              }
            ]
          }
        },
        "fontSize": {
          "type": "unknown",
          "optional": true,
          "description": "Font size value from predefined sizes in FONT_CONFIG like fontSizeBase or fontSizeH1"
        },
        "fontWeight": {
          "type": "union",
          "optional": true,
          "description": "Font weight value from predefined weights in FONT_CONFIG like fontWeightRegular or fontWeightBold",
          "typeDefinition": {
            "typeString": "fontWeightRegular | fontWeightStrong",
            "props": [
              {
                "key": "fontWeightRegular",
                "type": "string"
              },
              {
                "key": "fontWeightStrong",
                "type": "string"
              }
            ]
          }
        },
        "italic": {
          "type": "boolean",
          "description": "Toggles italic style for the text",
          "optional": true
        },
        "textAlign": {
          "type": "union",
          "optional": true,
          "description": "Controls the horizontal alignment of text within its container",
          "typeDefinition": {
            "typeString": "center | left | right",
            "props": [
              {
                "key": "center",
                "type": "string"
              },
              {
                "key": "left",
                "type": "string"
              },
              {
                "key": "right",
                "type": "string"
              }
            ]
          }
        },
        "textDecoration": {
          "type": "union",
          "optional": true,
          "description": "Adds decorative lines to the text like underline, overline, or line-through",
          "typeDefinition": {
            "typeString": "underline | overline | line-through | underline overline",
            "props": [
              {
                "key": "underline",
                "type": "string"
              },
              {
                "key": "overline",
                "type": "string"
              },
              {
                "key": "line-through",
                "type": "string"
              },
              {
                "key": "underline overline",
                "type": "string"
              }
            ]
          }
        },
        "textTransform": {
          "type": "union",
          "optional": true,
          "description": "Transforms text case to capitalize, uppercase, or lowercase",
          "typeDefinition": {
            "typeString": "capitalize | uppercase | lowercase",
            "props": [
              {
                "key": "capitalize",
                "type": "string"
              },
              {
                "key": "uppercase",
                "type": "string"
              },
              {
                "key": "lowercase",
                "type": "string"
              }
            ]
          }
        },
        "truncate": {
          "type": "boolean",
          "description": "Enables text truncation with ellipsis when content overflows",
          "optional": true
        },
        "variant": {
          "type": "union",
          "optional": true,
          "description": "Specifies the HTML tag (h1-h6, p, or span) to be used for the typography element",
          "typeDefinition": {
            "typeString": "h1 | h2 | h3 | h4 | h5 | h6 | p | span",
            "props": [
              {
                "key": "h1",
                "type": "string"
              },
              {
                "key": "h2",
                "type": "string"
              },
              {
                "key": "h3",
                "type": "string"
              },
              {
                "key": "h4",
                "type": "string"
              },
              {
                "key": "h5",
                "type": "string"
              },
              {
                "key": "h6",
                "type": "string"
              },
              {
                "key": "p",
                "type": "string"
              },
              {
                "key": "span",
                "type": "string"
              }
            ]
          }
        }
      },
      "componentTypeName": "TypographyProps"
    },
    {
      "name": "TreeSelect",
      "description": "The TreeSelect component allows users to select items from a hierarchical tree structure. It combines the functionality of a dropdown with a tree view, enabling easy navigation and selection of nested options. Ideal for managing complex data relationships in a user-friendly interface.",
      "props": {
        "allowClear": {
          "type": "union",
          "description": "Whether to allow clearing the selected value",
          "typeDefinition": {
            "typeString": "undefined | boolean | { clearIcon?: RenderNode }",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "boolean",
                "type": "intrinsic"
              },
              {
                "key": "{ clearIcon?: RenderNode }",
                "type": "reflection",
                "typeDefinition": {
                  "typeString": "{ clearIcon?: RenderNode }",
                  "props": [
                    {
                      "key": "clearIcon",
                      "type": "RenderNode",
                      "optional": true,
                      "typeDefinition": {
                        "typeString": "RenderNode"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        "autoClearSearchValue": {
          "type": "union",
          "description": "Whether to automatically clear the search input value when multiple select is selected/deselected",
          "typeDefinition": {
            "typeString": "undefined | boolean",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "boolean",
                "type": "intrinsic"
              }
            ]
          }
        },
        "defaultValue": {
          "type": "any",
          "description": "The initial selected treeNode(s)"
        },
        "disabled": {
          "type": "union",
          "description": "Whether the treeSelect is disabled",
          "typeDefinition": {
            "typeString": "undefined | boolean",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "boolean",
                "type": "intrinsic"
              }
            ]
          }
        },
        "dropdownRender": {
          "type": "union",
          "description": "Customize dropdown content",
          "typeDefinition": {
            "typeString": "undefined | (menu: ReactElement) => ReactElement",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "(menu: ReactElement) => ReactElement",
                "type": "reflection",
                "typeDefinition": {
                  "typeString": "(menu: ReactElement) => ReactElement",
                  "isFunction": true,
                  "props": [
                    {
                      "key": "menu",
                      "type": "ReactElement",
                      "isParam": true,
                      "optional": false,
                      "typeDefinition": {
                        "typeString": "ReactElement"
                      }
                    },
                    {
                      "key": "ReactElement",
                      "type": "reference",
                      "isReturn": true,
                      "typeDefinition": {
                        "typeString": "ReactElement"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        "dropdownStyle": {
          "type": "union",
          "description": "To set the style of the dropdown menu",
          "typeDefinition": {
            "typeString": "undefined | CSSProperties",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "CSSProperties",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "CSSProperties"
                }
              }
            ]
          }
        },
        "fieldNames": {
          "type": "union",
          "description": "Customize node label, value, children field name",
          "typeDefinition": {
            "typeString": "undefined | FieldNames",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "FieldNames",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "FieldNames"
                }
              }
            ]
          }
        },
        "filterTreeNode": {
          "type": "union",
          "description": "Whether to filter treeNodes by input value. The value of treeNodeFilterProp is used for filtering by default",
          "typeDefinition": {
            "typeString": "undefined | boolean | (inputValue: string, treeNode: DefaultOptionType) => boolean",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "boolean",
                "type": "intrinsic"
              },
              {
                "key": "(inputValue: string, treeNode: DefaultOptionType) => boolean",
                "type": "reflection",
                "typeDefinition": {
                  "typeString": "(inputValue: string, treeNode: DefaultOptionType) => boolean",
                  "isFunction": true,
                  "props": [
                    {
                      "key": "inputValue",
                      "type": "string",
                      "isParam": true,
                      "optional": false
                    },
                    {
                      "key": "treeNode",
                      "type": "DefaultOptionType",
                      "isParam": true,
                      "optional": false,
                      "typeDefinition": {
                        "typeString": "DefaultOptionType"
                      }
                    },
                    {
                      "key": "boolean",
                      "type": "intrinsic",
                      "isReturn": true
                    }
                  ]
                }
              }
            ]
          }
        },
        "getPopupContainer": {
          "type": "union",
          "description": "To set the container of the dropdown menu. The default is to create a div element in body, you can reset it to the scrolling area and make a relative reposition. example",
          "typeDefinition": {
            "typeString": "undefined | RenderDOMFunc",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "RenderDOMFunc",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "RenderDOMFunc"
                }
              }
            ]
          }
        },
        "labelInValue": {
          "type": "union",
          "description": "Whether to embed label in value, turn the format of value from string to {value: string, label: ReactNode, halfChecked: string[]}",
          "typeDefinition": {
            "typeString": "undefined | boolean",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "boolean",
                "type": "intrinsic"
              }
            ]
          }
        },
        "listHeight": {
          "type": "union",
          "description": "Config popup height",
          "typeDefinition": {
            "typeString": "undefined | number",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "number",
                "type": "intrinsic"
              }
            ]
          }
        },
        "loadData": {
          "type": "union",
          "description": "Load data asynchronously. Will not load when filtering. Check FAQ for more info",
          "typeDefinition": {
            "typeString": "undefined | (dataNode: LegacyDataNode) => Promise",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "(dataNode: LegacyDataNode) => Promise",
                "type": "reflection",
                "typeDefinition": {
                  "typeString": "(dataNode: LegacyDataNode) => Promise",
                  "isFunction": true,
                  "props": [
                    {
                      "key": "dataNode",
                      "type": "LegacyDataNode",
                      "isParam": true,
                      "optional": false,
                      "typeDefinition": {
                        "typeString": "LegacyDataNode"
                      }
                    },
                    {
                      "key": "Promise",
                      "type": "reference",
                      "isReturn": true,
                      "typeDefinition": {
                        "typeString": "Promise"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        "maxTagCount": {
          "type": "union",
          "description": "Max tag count to show. responsive will cost render performance",
          "typeDefinition": {
            "typeString": "undefined | number | responsive",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "number",
                "type": "intrinsic"
              },
              {
                "key": "responsive",
                "type": "string"
              }
            ]
          }
        },
        "maxTagPlaceholder": {
          "type": "union",
          "description": "Placeholder for not showing tags",
          "typeDefinition": {
            "typeString": "ReactNode | (omittedValues: DisplayValueType[]) => ReactNode",
            "props": [
              {
                "key": "ReactNode",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "ReactNode"
                }
              },
              {
                "key": "(omittedValues: DisplayValueType[]) => ReactNode",
                "type": "reflection",
                "typeDefinition": {
                  "typeString": "(omittedValues: DisplayValueType[]) => ReactNode",
                  "isFunction": true,
                  "props": [
                    {
                      "key": "omittedValues",
                      "type": "DisplayValueType[]",
                      "isParam": true,
                      "optional": false,
                      "typeDefinition": {
                        "typeString": "DisplayValueType[]",
                        "isArray": true,
                        "props": [
                          {
                            "key": "DisplayValueType",
                            "type": "reference",
                            "typeDefinition": {
                              "typeString": "DisplayValueType"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "key": "ReactNode",
                      "type": "reference",
                      "isReturn": true,
                      "typeDefinition": {
                        "typeString": "ReactNode"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        "maxTagTextLength": {
          "type": "union",
          "description": "Max tag text length to show",
          "typeDefinition": {
            "typeString": "undefined | number",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "number",
                "type": "intrinsic"
              }
            ]
          }
        },
        "multiple": {
          "type": "union",
          "description": "Support multiple or not, will be true when enable treeCheckable",
          "typeDefinition": {
            "typeString": "undefined | boolean",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "boolean",
                "type": "intrinsic"
              }
            ]
          }
        },
        "notFoundContent": {
          "type": "ReactNode",
          "description": "Specify content to show when no result matches",
          "typeDefinition": {
            "typeString": "ReactNode"
          }
        },
        "onChange": {
          "type": "union",
          "description": "A callback function, can be executed when selected treeNodes or input value change",
          "typeDefinition": {
            "typeString": "undefined | (value: any, labelList: ReactNode[], extra: ChangeEventExtra) => void",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "(value: any, labelList: ReactNode[], extra: ChangeEventExtra) => void",
                "type": "reflection",
                "typeDefinition": {
                  "typeString": "(value: any, labelList: ReactNode[], extra: ChangeEventExtra) => void",
                  "isFunction": true,
                  "props": [
                    {
                      "key": "value",
                      "type": "any",
                      "isParam": true,
                      "optional": false
                    },
                    {
                      "key": "labelList",
                      "type": "ReactNode[]",
                      "isParam": true,
                      "optional": false,
                      "typeDefinition": {
                        "typeString": "ReactNode[]",
                        "isArray": true,
                        "props": [
                          {
                            "key": "ReactNode",
                            "type": "reference",
                            "typeDefinition": {
                              "typeString": "ReactNode"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "key": "extra",
                      "type": "ChangeEventExtra",
                      "isParam": true,
                      "optional": false,
                      "typeDefinition": {
                        "typeString": "ChangeEventExtra"
                      }
                    },
                    {
                      "key": "void",
                      "type": "intrinsic",
                      "isReturn": true
                    }
                  ]
                }
              }
            ]
          }
        },
        "onDropdownVisibleChange": {
          "type": "union",
          "description": "Called when dropdown open",
          "typeDefinition": {
            "typeString": "undefined | (open: boolean) => void",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "(open: boolean) => void",
                "type": "reflection",
                "typeDefinition": {
                  "typeString": "(open: boolean) => void",
                  "isFunction": true,
                  "props": [
                    {
                      "key": "open",
                      "type": "boolean",
                      "isParam": true,
                      "optional": false
                    },
                    {
                      "key": "void",
                      "type": "intrinsic",
                      "isReturn": true
                    }
                  ]
                }
              }
            ]
          }
        },
        "onPopupScroll": {
          "type": "union",
          "description": "A callback function, can be executed when popup scroll",
          "typeDefinition": {
            "typeString": "undefined | UIEventHandler",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "UIEventHandler",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "UIEventHandler"
                }
              }
            ]
          }
        },
        "onSearch": {
          "type": "union",
          "description": "A callback function, can be executed when the search input changes",
          "typeDefinition": {
            "typeString": "undefined | (value: string) => void",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "(value: string) => void",
                "type": "reflection",
                "typeDefinition": {
                  "typeString": "(value: string) => void",
                  "isFunction": true,
                  "props": [
                    {
                      "key": "value",
                      "type": "string",
                      "isParam": true,
                      "optional": false
                    },
                    {
                      "key": "void",
                      "type": "intrinsic",
                      "isReturn": true
                    }
                  ]
                }
              }
            ]
          }
        },
        "onSelect": {
          "type": "union",
          "description": "A callback function, can be executed when you select a treeNode",
          "typeDefinition": {
            "typeString": "undefined | SelectHandler",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "SelectHandler",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "SelectHandler"
                }
              }
            ]
          }
        },
        "onTreeExpand": {
          "type": "union",
          "description": "A callback function, can be executed when treeNode expanded",
          "typeDefinition": {
            "typeString": "undefined | (expandedKeys: Key[]) => void",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "(expandedKeys: Key[]) => void",
                "type": "reflection",
                "typeDefinition": {
                  "typeString": "(expandedKeys: Key[]) => void",
                  "isFunction": true,
                  "props": [
                    {
                      "key": "expandedKeys",
                      "type": "Key[]",
                      "isParam": true,
                      "optional": false,
                      "typeDefinition": {
                        "typeString": "Key[]",
                        "isArray": true,
                        "props": [
                          {
                            "key": "Key",
                            "type": "reference",
                            "typeDefinition": {
                              "typeString": "Key"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "key": "void",
                      "type": "intrinsic",
                      "isReturn": true
                    }
                  ]
                }
              }
            ]
          }
        },
        "placeholder": {
          "type": "ReactNode",
          "description": "Placeholder of the select input",
          "typeDefinition": {
            "typeString": "ReactNode"
          }
        },
        "placement": {
          "type": "union",
          "description": "The position where the selection box pops up",
          "typeDefinition": {
            "typeString": "undefined | bottomLeft | bottomRight | topLeft | topRight",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "bottomLeft",
                "type": "string"
              },
              {
                "key": "bottomRight",
                "type": "string"
              },
              {
                "key": "topLeft",
                "type": "string"
              },
              {
                "key": "topRight",
                "type": "string"
              }
            ]
          }
        },
        "popupClassName": {
          "type": "union",
          "description": "The className of dropdown menu",
          "typeDefinition": {
            "typeString": "undefined | string",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "string",
                "type": "intrinsic"
              }
            ]
          }
        },
        "popupMatchSelectWidth": {
          "type": "union",
          "description": "Determine whether the popup menu and the select input are the same width. Default set min-width same as input. Will ignore when value less than select width. false will disable virtual scroll",
          "typeDefinition": {
            "typeString": "undefined | number | boolean",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "number",
                "type": "intrinsic"
              },
              {
                "key": "boolean",
                "type": "intrinsic"
              }
            ]
          }
        },
        "searchValue": {
          "type": "union",
          "description": "Work with onSearch to make search value controlled",
          "typeDefinition": {
            "typeString": "undefined | string",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "string",
                "type": "intrinsic"
              }
            ]
          }
        },
        "showCheckedStrategy": {
          "type": "union",
          "description": "The way show selected item in box when treeCheckable set. Default: just show child nodes. TreeSelect.SHOW_ALL: show all checked treeNodes (include parent treeNode). TreeSelect.SHOW_PARENT: show checked treeNodes (just show parent treeNode)",
          "typeDefinition": {
            "typeString": "undefined | CheckedStrategy",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "CheckedStrategy",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "CheckedStrategy"
                }
              }
            ]
          }
        },
        "showSearch": {
          "type": "union",
          "description": "Support search or not",
          "typeDefinition": {
            "typeString": "undefined | boolean",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "boolean",
                "type": "intrinsic"
              }
            ]
          }
        },
        "size": {
          "type": "SizeType",
          "description": "To set the size of the select input",
          "typeDefinition": {
            "typeString": "SizeType"
          }
        },
        "status": {
          "type": "union",
          "description": "Set validation status",
          "typeDefinition": {
            "typeString": "undefined |  | warning | error",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "",
                "type": "string"
              },
              {
                "key": "warning",
                "type": "string"
              },
              {
                "key": "error",
                "type": "string"
              }
            ]
          }
        },
        "suffixIcon": {
          "type": "ReactNode",
          "description": "The custom suffix icon",
          "typeDefinition": {
            "typeString": "ReactNode"
          }
        },
        "switcherIcon": {
          "type": "union",
          "description": "Customize collapse/expand icon of tree node",
          "typeDefinition": {
            "typeString": "undefined | null | string | number | boolean | ReactElement | ReactFragment | ReactPortal | (props: AntTreeNodeProps) => ReactNode | (props: TreeNodeProps) => ReactNode",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "null",
                "type": "object"
              },
              {
                "key": "string",
                "type": "intrinsic"
              },
              {
                "key": "number",
                "type": "intrinsic"
              },
              {
                "key": "boolean",
                "type": "intrinsic"
              },
              {
                "key": "ReactElement",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "ReactElement"
                }
              },
              {
                "key": "ReactFragment",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "ReactFragment"
                }
              },
              {
                "key": "ReactPortal",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "ReactPortal"
                }
              },
              {
                "key": "(props: AntTreeNodeProps) => ReactNode",
                "type": "reflection",
                "typeDefinition": {
                  "typeString": "(props: AntTreeNodeProps) => ReactNode",
                  "isFunction": true,
                  "props": [
                    {
                      "key": "props",
                      "type": "AntTreeNodeProps",
                      "isParam": true,
                      "optional": false,
                      "typeDefinition": {
                        "typeString": "AntTreeNodeProps"
                      }
                    },
                    {
                      "key": "ReactNode",
                      "type": "reference",
                      "isReturn": true,
                      "typeDefinition": {
                        "typeString": "ReactNode"
                      }
                    }
                  ]
                }
              },
              {
                "key": "(props: TreeNodeProps) => ReactNode",
                "type": "reflection",
                "typeDefinition": {
                  "typeString": "(props: TreeNodeProps) => ReactNode",
                  "isFunction": true,
                  "props": [
                    {
                      "key": "props",
                      "type": "TreeNodeProps",
                      "isParam": true,
                      "optional": false,
                      "typeDefinition": {
                        "typeString": "TreeNodeProps"
                      }
                    },
                    {
                      "key": "ReactNode",
                      "type": "reference",
                      "isReturn": true,
                      "typeDefinition": {
                        "typeString": "ReactNode"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        "tagRender": {
          "type": "union",
          "description": "Customize tag render when multiple",
          "typeDefinition": {
            "typeString": "undefined | (props: CustomTagProps) => ReactElement",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "(props: CustomTagProps) => ReactElement",
                "type": "reflection",
                "typeDefinition": {
                  "typeString": "(props: CustomTagProps) => ReactElement",
                  "isFunction": true,
                  "props": [
                    {
                      "key": "props",
                      "type": "CustomTagProps",
                      "isParam": true,
                      "optional": false,
                      "typeDefinition": {
                        "typeString": "CustomTagProps"
                      }
                    },
                    {
                      "key": "ReactElement",
                      "type": "reference",
                      "isReturn": true,
                      "typeDefinition": {
                        "typeString": "ReactElement"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        "treeCheckable": {
          "type": "ReactNode",
          "description": "Whether to show checkbox on the treeNodes",
          "typeDefinition": {
            "typeString": "ReactNode"
          }
        },
        "treeCheckStrictly": {
          "type": "union",
          "description": "Whether to check nodes precisely (in the checkable mode), means parent and child nodes are not associated, and it will make labelInValue be true",
          "typeDefinition": {
            "typeString": "undefined | boolean",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "boolean",
                "type": "intrinsic"
              }
            ]
          }
        },
        "treeData": {
          "type": "union",
          "description": "Data of the treeNodes, manual construction work is no longer needed if this property has been set(ensure the Uniqueness of each value)",
          "typeDefinition": {
            "typeString": "undefined | DefaultOptionType[]",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "DefaultOptionType[]",
                "type": "array",
                "typeDefinition": {
                  "typeString": "DefaultOptionType[]",
                  "isArray": true,
                  "props": [
                    {
                      "key": "DefaultOptionType",
                      "type": "reference",
                      "typeDefinition": {
                        "typeString": "DefaultOptionType"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        "treeDataSimpleMode": {
          "type": "union",
          "description": "Enable simple mode of treeData. Changes the treeData schema to: [{id:1, pId:0, value:'1', title:\"test1\",...},...] where pId is parent node's id). It is possible to replace the default id and pId keys by providing object to treeDataSimpleMode",
          "typeDefinition": {
            "typeString": "undefined | boolean | SimpleModeConfig",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "boolean",
                "type": "intrinsic"
              },
              {
                "key": "SimpleModeConfig",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "SimpleModeConfig"
                }
              }
            ]
          }
        },
        "treeDefaultExpandAll": {
          "type": "union",
          "description": "Whether to expand all treeNodes by default",
          "typeDefinition": {
            "typeString": "undefined | boolean",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "boolean",
                "type": "intrinsic"
              }
            ]
          }
        },
        "treeDefaultExpandedKeys": {
          "type": "union",
          "description": "Default expanded treeNodes",
          "typeDefinition": {
            "typeString": "undefined | Key[]",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "Key[]",
                "type": "array",
                "typeDefinition": {
                  "typeString": "Key[]",
                  "isArray": true,
                  "props": [
                    {
                      "key": "Key",
                      "type": "reference",
                      "typeDefinition": {
                        "typeString": "Key"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        "treeExpandAction": {
          "type": "union",
          "description": "Tree title open logic when click, optional: false | click | doubleClick",
          "typeDefinition": {
            "typeString": "undefined | ExpandAction",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "ExpandAction",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "ExpandAction"
                }
              }
            ]
          }
        },
        "treeExpandedKeys": {
          "type": "union",
          "description": "Set expanded keys",
          "typeDefinition": {
            "typeString": "undefined | Key[]",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "Key[]",
                "type": "array",
                "typeDefinition": {
                  "typeString": "Key[]",
                  "isArray": true,
                  "props": [
                    {
                      "key": "Key",
                      "type": "reference",
                      "typeDefinition": {
                        "typeString": "Key"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        "treeIcon": {
          "type": "IconType",
          "description": "Shows the icon before a TreeNode's title. There is no default style; you must set a custom style for it if set to true",
          "typeDefinition": {
            "typeString": "IconType"
          }
        },
        "treeLine": {
          "type": "union",
          "description": "Show the line. Ref Tree - showLine",
          "typeDefinition": {
            "typeString": "undefined | boolean | { showLeafIcon: TreeLeafIcon }",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "boolean",
                "type": "intrinsic"
              },
              {
                "key": "{ showLeafIcon: TreeLeafIcon }",
                "type": "reflection",
                "typeDefinition": {
                  "typeString": "{ showLeafIcon: TreeLeafIcon }",
                  "props": [
                    {
                      "key": "showLeafIcon",
                      "type": "TreeLeafIcon",
                      "typeDefinition": {
                        "typeString": "TreeLeafIcon"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        "treeLoadedKeys": {
          "type": "union",
          "description": "(Controlled) Set loaded tree nodes, work with loadData only",
          "typeDefinition": {
            "typeString": "undefined | Key[]",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "Key[]",
                "type": "array",
                "typeDefinition": {
                  "typeString": "Key[]",
                  "isArray": true,
                  "props": [
                    {
                      "key": "Key",
                      "type": "reference",
                      "typeDefinition": {
                        "typeString": "Key"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        "treeNodeFilterProp": {
          "type": "union",
          "description": "Will be used for filtering if filterTreeNode returns true",
          "typeDefinition": {
            "typeString": "undefined | string",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "string",
                "type": "intrinsic"
              }
            ]
          }
        },
        "treeNodeLabelProp": {
          "type": "union",
          "description": "Will render as content of select",
          "typeDefinition": {
            "typeString": "undefined | string",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "string",
                "type": "intrinsic"
              }
            ]
          }
        },
        "value": {
          "type": "any",
          "description": "To set the current selected treeNode(s)"
        },
        "virtual": {
          "type": "union",
          "description": "Disable virtual scroll when set to false",
          "typeDefinition": {
            "typeString": "undefined | boolean",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "boolean",
                "type": "intrinsic"
              }
            ]
          }
        }
      },
      "componentTypeName": "TreeSelectProps"
    },
    {
      "name": "Tooltip",
      "description": "The Tooltip component provides contextual information when users hover over or focus on an element. It enhances user experience by delivering concise, relevant details without cluttering the interface, ensuring intuitive navigation and interaction within applications. Ideal for improving accessibility and understanding of UI elements.",
      "props": {
        "align": {
          "type": "union",
          "description": "Alignment of the tooltip relative to the target",
          "typeDefinition": {
            "typeString": "undefined | AlignType",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "AlignType",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "AlignType"
                }
              }
            ]
          }
        },
        "arrow": {
          "type": "union",
          "description": "Whether to show an arrow pointing to the target",
          "typeDefinition": {
            "typeString": "undefined | boolean | { arrowPointAtCenter?: boolean, pointAtCenter?: boolean }",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "boolean",
                "type": "intrinsic"
              },
              {
                "key": "{ arrowPointAtCenter?: boolean, pointAtCenter?: boolean }",
                "type": "reflection",
                "typeDefinition": {
                  "typeString": "{ arrowPointAtCenter?: boolean, pointAtCenter?: boolean }",
                  "props": [
                    {
                      "key": "arrowPointAtCenter",
                      "type": "boolean",
                      "optional": true
                    },
                    {
                      "key": "pointAtCenter",
                      "type": "boolean",
                      "optional": true
                    }
                  ]
                }
              }
            ]
          }
        },
        "autoAdjustOverflow": {
          "type": "union",
          "description": "Whether to automatically adjust the tooltip's overflow behavior",
          "typeDefinition": {
            "typeString": "undefined | boolean | AdjustOverflow",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "boolean",
                "type": "intrinsic"
              },
              {
                "key": "AdjustOverflow",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "AdjustOverflow"
                }
              }
            ]
          }
        },
        "color": {
          "type": "union",
          "description": "Color of the tooltip",
          "typeDefinition": {
            "typeString": "undefined | LiteralUnion",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "LiteralUnion",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "LiteralUnion"
                }
              }
            ]
          }
        },
        "defaultOpen": {
          "type": "union",
          "description": "Whether the floating tooltip card is open by default",
          "typeDefinition": {
            "typeString": "undefined | boolean",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "boolean",
                "type": "intrinsic"
              }
            ]
          }
        },
        "destroyTooltipOnHide": {
          "type": "union",
          "description": "Whether destroy tooltip when hidden",
          "typeDefinition": {
            "typeString": "undefined | boolean | { keepParent?: boolean }",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "boolean",
                "type": "intrinsic"
              },
              {
                "key": "{ keepParent?: boolean }",
                "type": "reflection",
                "typeDefinition": {
                  "typeString": "{ keepParent?: boolean }",
                  "props": [
                    {
                      "key": "keepParent",
                      "type": "boolean",
                      "optional": true
                    }
                  ]
                }
              }
            ]
          }
        },
        "getPopupContainer": {
          "type": "union",
          "description": "The DOM container of the tip, the default behavior is to create a div element in body",
          "typeDefinition": {
            "typeString": "undefined | (triggerNode: HTMLElement) => HTMLElement",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "(triggerNode: HTMLElement) => HTMLElement",
                "type": "reflection",
                "typeDefinition": {
                  "typeString": "(triggerNode: HTMLElement) => HTMLElement",
                  "isFunction": true,
                  "props": [
                    {
                      "key": "triggerNode",
                      "type": "HTMLElement",
                      "isParam": true,
                      "optional": false,
                      "typeDefinition": {
                        "typeString": "HTMLElement"
                      }
                    },
                    {
                      "key": "HTMLElement",
                      "type": "reference",
                      "isReturn": true,
                      "typeDefinition": {
                        "typeString": "HTMLElement"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        "mouseEnterDelay": {
          "type": "union",
          "description": "Delay in seconds, before tooltip is shown on mouse enter",
          "typeDefinition": {
            "typeString": "undefined | number",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "number",
                "type": "intrinsic"
              }
            ]
          }
        },
        "mouseLeaveDelay": {
          "type": "union",
          "description": "Delay in seconds, before tooltip is hidden on mouse leave",
          "typeDefinition": {
            "typeString": "undefined | number",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "number",
                "type": "intrinsic"
              }
            ]
          }
        },
        "onOpenChange": {
          "type": "union",
          "description": "Callback function that is triggered when the tooltip is opened or closed",
          "typeDefinition": {
            "typeString": "undefined | (visible: boolean) => void",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "(visible: boolean) => void",
                "type": "reflection",
                "typeDefinition": {
                  "typeString": "(visible: boolean) => void",
                  "isFunction": true,
                  "props": [
                    {
                      "key": "visible",
                      "type": "boolean",
                      "isParam": true,
                      "optional": false
                    },
                    {
                      "key": "void",
                      "type": "intrinsic",
                      "isReturn": true
                    }
                  ]
                }
              }
            ]
          }
        },
        "open": {
          "type": "union",
          "description": "Whether the floating tooltip card is open or not. Use visible under 4.23.0 (why?)",
          "typeDefinition": {
            "typeString": "undefined | boolean",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "boolean",
                "type": "intrinsic"
              }
            ]
          }
        },
        "overlayClassName": {
          "type": "union",
          "description": "Class name of the tooltip card",
          "typeDefinition": {
            "typeString": "undefined | string",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "string",
                "type": "intrinsic"
              }
            ]
          }
        },
        "overlayInnerStyle": {
          "type": "union",
          "description": "Style of the tooltip inner content",
          "typeDefinition": {
            "typeString": "undefined | CSSProperties",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "CSSProperties",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "CSSProperties"
                }
              }
            ]
          }
        },
        "overlayStyle": {
          "type": "union",
          "description": "Style of the tooltip card",
          "typeDefinition": {
            "typeString": "undefined | CSSProperties",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "CSSProperties",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "CSSProperties"
                }
              }
            ]
          }
        },
        "placement": {
          "type": "union",
          "description": "The position of the tooltip relative to the target, which can be one of top left right bottom topLeft topRight bottomLeft bottomRight leftTop leftBottom rightTop rightBottom",
          "typeDefinition": {
            "typeString": "undefined | TooltipPlacement",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "TooltipPlacement",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "TooltipPlacement"
                }
              }
            ]
          }
        },
        "trigger": {
          "type": "union",
          "description": "Tooltip trigger mode. Could be multiple by passing an array",
          "typeDefinition": {
            "typeString": "undefined | ActionType | ActionType[]",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "ActionType",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "ActionType"
                }
              },
              {
                "key": "ActionType[]",
                "type": "array",
                "typeDefinition": {
                  "typeString": "ActionType[]",
                  "isArray": true,
                  "props": [
                    {
                      "key": "ActionType",
                      "type": "reference",
                      "typeDefinition": {
                        "typeString": "ActionType"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        "zIndex": {
          "type": "union",
          "description": "Config z-index of Tooltip",
          "typeDefinition": {
            "typeString": "undefined | number",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "number",
                "type": "intrinsic"
              }
            ]
          }
        }
      },
      "componentTypeName": "TooltipProps"
    },
    {
      "name": "Timeline",
      "description": "The Timeline component visually represents a sequence of events or milestones over time. It allows users to track progress, highlight key moments, and understand chronological relationships, making it ideal for project management, historical overviews, or personal achievements. Its intuitive layout enhances clarity and engagement.",
      "props": {
        "items": {
          "type": "union",
          "description": "Array of timeline items containing content, dot color, and other properties",
          "typeDefinition": {
            "typeString": "undefined | TimelineItemProps[]",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "TimelineItemProps[]",
                "type": "array",
                "typeDefinition": {
                  "typeString": "TimelineItemProps[]",
                  "isArray": true,
                  "props": [
                    {
                      "key": "TimelineItemProps",
                      "type": "reference",
                      "typeDefinition": {
                        "typeString": "TimelineItemProps"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        "mode": {
          "type": "union",
          "description": "Display mode of the timeline items, can be 'left', 'right', or 'alternate'",
          "typeDefinition": {
            "typeString": "undefined | left | right | alternate",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "left",
                "type": "string"
              },
              {
                "key": "right",
                "type": "string"
              },
              {
                "key": "alternate",
                "type": "string"
              }
            ]
          }
        },
        "pending": {
          "type": "ReactNode",
          "description": "Content to be displayed as a pending item at the end of the timeline",
          "typeDefinition": {
            "typeString": "ReactNode"
          }
        },
        "pendingDot": {
          "type": "ReactNode",
          "description": "Custom dot element to be displayed for the pending item",
          "typeDefinition": {
            "typeString": "ReactNode"
          }
        },
        "reverse": {
          "type": "union",
          "description": "Whether to reverse the order of timeline items",
          "typeDefinition": {
            "typeString": "undefined | boolean",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "boolean",
                "type": "intrinsic"
              }
            ]
          }
        }
      },
      "componentTypeName": "TimelineProps"
    },
    {
      "name": "Tag",
      "description": "The Tag component is a versatile UI element used to categorize or label content. It features customizable colors, sizes, and icons, enhancing user experience by providing clear visual cues. Ideal for organizing information, it supports interactivity, allowing users to filter or select items effortlessly.",
      "props": {
        "children": {
          "type": "union",
          "description": "Content to be displayed inside the tag, can be text or JSX element",
          "typeDefinition": {
            "typeString": "string | Element",
            "props": [
              {
                "key": "string",
                "type": "intrinsic"
              },
              {
                "key": "Element",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "Element"
                }
              }
            ]
          }
        },
        "className": {
          "type": "string",
          "description": "Additional CSS class name for custom styling",
          "optional": true
        },
        "closable": {
          "type": "boolean",
          "description": "Determines if the tag shows a close button for removal",
          "optional": true
        },
        "id": {
          "type": "string",
          "description": "Unique identifier for the tag component",
          "optional": true
        },
        "type": {
          "type": "union",
          "optional": true,
          "description": "Visual style variant that changes the tag's appearance and color scheme",
          "typeDefinition": {
            "typeString": "default | success | warning | error | info",
            "props": [
              {
                "key": "default",
                "type": "string"
              },
              {
                "key": "success",
                "type": "string"
              },
              {
                "key": "warning",
                "type": "string"
              },
              {
                "key": "error",
                "type": "string"
              },
              {
                "key": "info",
                "type": "string"
              }
            ]
          }
        }
      },
      "componentTypeName": "TagProps"
    },
    {
      "name": "Tabs",
      "description": "The Tabs component organizes content into distinct sections, allowing users to navigate easily between different views. Each tab represents a unique category, enhancing user experience by providing a clean, structured interface for displaying related information without overwhelming the screen. Ideal for dashboards and settings.",
      "props": {
        "activeTab": {
          "type": "string",
          "description": "The key of the currently active tab that should be displayed"
        },
        "callback": {
          "type": "object",
          "optional": true,
          "description": "Handler function called when user switches between tabs",
          "typeDefinition": {
            "typeString": "(key: string) => void",
            "isFunction": true,
            "props": [
              {
                "key": "key",
                "type": "string",
                "isParam": true,
                "optional": false
              },
              {
                "key": "void",
                "type": "intrinsic",
                "isReturn": true
              }
            ]
          }
        },
        "defaultTabKey": {
          "type": "string",
          "description": "Initial active tab key when component mounts",
          "optional": true
        },
        "items": {
          "type": "union",
          "description": "Configuration array that defines the content and properties of each tab panel",
          "typeDefinition": {
            "typeString": "undefined | Tab[]",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "Tab[]",
                "type": "array",
                "typeDefinition": {
                  "typeString": "Tab[]",
                  "isArray": true,
                  "props": [
                    {
                      "key": "Tab",
                      "type": "reference",
                      "typeDefinition": {
                        "typeString": "Tab"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        "position": {
          "type": "TabPosition",
          "optional": true,
          "description": "Placement of the tab bar relative to content ('top', 'right', 'bottom', or 'left')",
          "typeDefinition": {
            "typeString": "TabPosition"
          }
        },
        "size": {
          "type": "SizeType",
          "optional": true,
          "description": "Visual size variant of the tabs component ('small', 'middle', or 'large')",
          "typeDefinition": {
            "typeString": "SizeType"
          }
        }
      },
      "componentTypeName": "TabsProps"
    },
    {
      "name": "Table",
      "description": "The Table component organizes data into rows and columns, facilitating clear presentation and easy comparison. It supports various features like sorting, filtering, and pagination, enhancing user interaction and data accessibility. Ideal for displaying structured information in a visually appealing format.",
      "props": {
        "bordered": {
          "type": "boolean",
          "optional": true
        },
        "caption": {
          "type": "ReactNode",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactNode"
          }
        },
        "children": {
          "type": "ReactNode",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactNode"
          }
        },
        "childrenColumnName": {
          "type": "string",
          "optional": true
        },
        "className": {
          "type": "string",
          "description": "Custom CSS class name for styling the table",
          "optional": true
        },
        "columns": {
          "type": "TableColumns",
          "description": "Configuration array defining the structure and behavior of table columns",
          "typeDefinition": {
            "typeString": "TableColumns"
          }
        },
        "components": {
          "type": "TableComponents",
          "optional": true,
          "typeDefinition": {
            "typeString": "TableComponents"
          }
        },
        "currentPage": {
          "type": "number",
          "description": "Currently active page number for pagination (deprecated in favor of paginationProps)",
          "optional": true
        },
        "data": {
          "type": "array",
          "description": "Array of objects containing the data to be displayed in the table rows",
          "typeDefinition": {
            "typeString": "DataType[]",
            "isArray": true,
            "props": [
              {
                "key": "DataType",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "DataType"
                }
              }
            ]
          }
        },
        "dataSource": {
          "type": "typeOperator",
          "optional": true
        },
        "defaultExpandAllRows": {
          "type": "boolean",
          "optional": true
        },
        "defaultExpandedRowKeys": {
          "type": "array",
          "optional": true,
          "typeDefinition": {
            "typeString": "Key[]",
            "isArray": true,
            "props": [
              {
                "key": "Key",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "Key"
                }
              }
            ]
          }
        },
        "direction": {
          "type": "Direction",
          "optional": true,
          "typeDefinition": {
            "typeString": "Direction"
          }
        },
        "dropdownPrefixCls": {
          "type": "string",
          "optional": true
        },
        "expandable": {
          "type": "ExpandableConfig",
          "optional": true,
          "description": "Config expand rows",
          "typeDefinition": {
            "typeString": "ExpandableConfig"
          }
        },
        "expandedRowClassName": {
          "type": "RowClassName",
          "optional": true,
          "typeDefinition": {
            "typeString": "RowClassName"
          }
        },
        "expandedRowKeys": {
          "type": "array",
          "optional": true,
          "typeDefinition": {
            "typeString": "Key[]",
            "isArray": true,
            "props": [
              {
                "key": "Key",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "Key"
                }
              }
            ]
          }
        },
        "expandedRowRender": {
          "type": "ExpandedRowRender",
          "optional": true,
          "typeDefinition": {
            "typeString": "ExpandedRowRender"
          }
        },
        "expandIcon": {
          "type": "RenderExpandIcon",
          "optional": true,
          "typeDefinition": {
            "typeString": "RenderExpandIcon"
          }
        },
        "expandIconColumnIndex": {
          "type": "number",
          "optional": true
        },
        "expandRowByClick": {
          "type": "boolean",
          "optional": true
        },
        "footer": {
          "type": "PanelRender",
          "optional": true,
          "typeDefinition": {
            "typeString": "PanelRender"
          }
        },
        "getPopupContainer": {
          "type": "GetPopupContainer",
          "optional": true,
          "typeDefinition": {
            "typeString": "GetPopupContainer"
          }
        },
        "header": {
          "type": "Element",
          "optional": true,
          "description": "Custom JSX element to be rendered above the table",
          "typeDefinition": {
            "typeString": "Element"
          }
        },
        "hideOnSinglePage": {
          "type": "boolean",
          "description": "Controls visibility of pagination when only one page exists (deprecated in favor of paginationProps)",
          "optional": true
        },
        "id": {
          "type": "string",
          "description": "Unique identifier for the table component",
          "optional": true
        },
        "indentSize": {
          "type": "number",
          "optional": true
        },
        "isSticky": {
          "type": "boolean",
          "description": "Controls whether the table header remains fixed while scrolling",
          "optional": true
        },
        "loading": {
          "type": "union",
          "optional": true,
          "description": "Indicates whether the table is in a loading state",
          "typeDefinition": {
            "typeString": "boolean | SpinProps",
            "props": [
              {
                "key": "boolean",
                "type": "intrinsic"
              },
              {
                "key": "SpinProps",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "SpinProps"
                }
              }
            ]
          }
        },
        "locale": {
          "type": "TableLocale",
          "optional": true,
          "typeDefinition": {
            "typeString": "TableLocale"
          }
        },
        "noRecordFoundImage": {
          "type": "ReactElement",
          "optional": true,
          "description": "Custom image component displayed when table has no data",
          "typeDefinition": {
            "typeString": "ReactElement"
          }
        },
        "noRecordFoundWordings": {
          "type": "object",
          "optional": true,
          "description": "Custom text content for empty state display",
          "typeDefinition": {
            "typeString": "{ description: string, title: string }",
            "props": [
              {
                "key": "description",
                "type": "string"
              },
              {
                "key": "title",
                "type": "string"
              }
            ]
          }
        },
        "onChange": {
          "type": "object",
          "optional": true,
          "typeDefinition": {
            "typeString": "(pagination: TablePaginationConfig, filters: Record, sorter: SorterResult | SorterResult[], extra: TableCurrentDataSource) => void",
            "isFunction": true,
            "props": [
              {
                "key": "pagination",
                "type": "TablePaginationConfig",
                "isParam": true,
                "optional": false,
                "typeDefinition": {
                  "typeString": "TablePaginationConfig"
                }
              },
              {
                "key": "filters",
                "type": "Record",
                "isParam": true,
                "optional": false,
                "typeDefinition": {
                  "typeString": "Record"
                }
              },
              {
                "key": "sorter",
                "type": "SorterResult | SorterResult[]",
                "isParam": true,
                "optional": false,
                "typeDefinition": {
                  "typeString": "SorterResult | SorterResult[]",
                  "props": [
                    {
                      "key": "SorterResult",
                      "type": "reference",
                      "typeDefinition": {
                        "typeString": "SorterResult"
                      }
                    },
                    {
                      "key": "SorterResult[]",
                      "type": "array",
                      "typeDefinition": {
                        "typeString": "SorterResult[]",
                        "isArray": true,
                        "props": [
                          {
                            "key": "SorterResult",
                            "type": "reference",
                            "typeDefinition": {
                              "typeString": "SorterResult"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "key": "extra",
                "type": "TableCurrentDataSource",
                "isParam": true,
                "optional": false,
                "typeDefinition": {
                  "typeString": "TableCurrentDataSource"
                }
              },
              {
                "key": "void",
                "type": "intrinsic",
                "isReturn": true
              }
            ]
          }
        },
        "onExpand": {
          "type": "object",
          "optional": true,
          "typeDefinition": {
            "typeString": "(expanded: boolean, record: DataType) => void",
            "isFunction": true,
            "props": [
              {
                "key": "expanded",
                "type": "boolean",
                "isParam": true,
                "optional": false
              },
              {
                "key": "record",
                "type": "DataType",
                "isParam": true,
                "optional": false,
                "typeDefinition": {
                  "typeString": "DataType"
                }
              },
              {
                "key": "void",
                "type": "intrinsic",
                "isReturn": true
              }
            ]
          }
        },
        "onExpandedRowsChange": {
          "type": "object",
          "optional": true,
          "typeDefinition": {
            "typeString": "(expandedKeys: Key[]) => void",
            "isFunction": true,
            "props": [
              {
                "key": "expandedKeys",
                "type": "Key[]",
                "isParam": true,
                "optional": false,
                "typeDefinition": {
                  "typeString": "Key[]",
                  "isArray": true,
                  "props": [
                    {
                      "key": "Key",
                      "type": "reference",
                      "typeDefinition": {
                        "typeString": "Key"
                      }
                    }
                  ]
                }
              },
              {
                "key": "void",
                "type": "intrinsic",
                "isReturn": true
              }
            ]
          }
        },
        "onHeaderRow": {
          "type": "GetComponentProps",
          "optional": true,
          "typeDefinition": {
            "typeString": "GetComponentProps"
          }
        },
        "onPageChange": {
          "type": "object",
          "optional": true,
          "description": "Handler function for pagination navigation events (deprecated in favor of paginationProps)",
          "typeDefinition": {
            "typeString": "(page: number, pageSize: number) => void",
            "isFunction": true,
            "props": [
              {
                "key": "page",
                "type": "number",
                "isParam": true,
                "optional": false
              },
              {
                "key": "pageSize",
                "type": "number",
                "isParam": true,
                "optional": false
              },
              {
                "key": "void",
                "type": "intrinsic",
                "isReturn": true
              }
            ]
          }
        },
        "onRow": {
          "type": "GetComponentProps",
          "optional": true,
          "typeDefinition": {
            "typeString": "GetComponentProps"
          }
        },
        "onShowPageSizeChange": {
          "type": "object",
          "optional": true,
          "description": "Handler function for page size change events (deprecated in favor of paginationProps)",
          "typeDefinition": {
            "typeString": "(current: number, size: number) => void",
            "isFunction": true,
            "props": [
              {
                "key": "current",
                "type": "number",
                "isParam": true,
                "optional": false
              },
              {
                "key": "size",
                "type": "number",
                "isParam": true,
                "optional": false
              },
              {
                "key": "void",
                "type": "intrinsic",
                "isReturn": true
              }
            ]
          }
        },
        "onTableChange": {
          "type": "object",
          "optional": true,
          "description": "Handler function for table state changes including sorting, filtering, and pagination",
          "typeDefinition": {
            "typeString": "(pagination: TablePaginationConfig, filters: Record, sorter: SorterResult | SorterResult[], extra: TableCurrentDataSource) => void",
            "isFunction": true,
            "props": [
              {
                "key": "pagination",
                "type": "TablePaginationConfig",
                "isParam": true,
                "optional": false,
                "typeDefinition": {
                  "typeString": "TablePaginationConfig"
                }
              },
              {
                "key": "filters",
                "type": "Record",
                "isParam": true,
                "optional": false,
                "typeDefinition": {
                  "typeString": "Record"
                }
              },
              {
                "key": "sorter",
                "type": "SorterResult | SorterResult[]",
                "isParam": true,
                "optional": false,
                "typeDefinition": {
                  "typeString": "SorterResult | SorterResult[]",
                  "props": [
                    {
                      "key": "SorterResult",
                      "type": "reference",
                      "typeDefinition": {
                        "typeString": "SorterResult"
                      }
                    },
                    {
                      "key": "SorterResult[]",
                      "type": "array",
                      "typeDefinition": {
                        "typeString": "SorterResult[]",
                        "isArray": true,
                        "props": [
                          {
                            "key": "SorterResult",
                            "type": "reference",
                            "typeDefinition": {
                              "typeString": "SorterResult"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "key": "extra",
                "type": "TableCurrentDataSource",
                "isParam": true,
                "optional": false,
                "typeDefinition": {
                  "typeString": "TableCurrentDataSource"
                }
              },
              {
                "key": "void",
                "type": "intrinsic",
                "isReturn": true
              }
            ]
          }
        },
        "pageSize": {
          "type": "number",
          "description": "Number of rows to display per page (deprecated in favor of paginationProps)",
          "optional": true
        },
        "pageSizeOptions": {
          "type": "union",
          "optional": true,
          "description": "Available options for number of rows per page (deprecated in favor of paginationProps)",
          "typeDefinition": {
            "typeString": "string[] | number[]",
            "props": [
              {
                "key": "string[]",
                "type": "array",
                "typeDefinition": {
                  "typeString": "string[]",
                  "isArray": true,
                  "props": [
                    {
                      "key": "string",
                      "type": "intrinsic"
                    }
                  ]
                }
              },
              {
                "key": "number[]",
                "type": "array",
                "typeDefinition": {
                  "typeString": "number[]",
                  "isArray": true,
                  "props": [
                    {
                      "key": "number",
                      "type": "intrinsic"
                    }
                  ]
                }
              }
            ]
          }
        },
        "pagination": {
          "type": "union",
          "optional": true,
          "typeDefinition": {
            "typeString": "false | TablePaginationConfig",
            "props": [
              {
                "key": "false",
                "type": "boolean"
              },
              {
                "key": "TablePaginationConfig",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "TablePaginationConfig"
                }
              }
            ]
          }
        },
        "paginationProps": {
          "type": "PaginationProps",
          "optional": true,
          "description": "Comprehensive configuration object for table pagination behavior",
          "typeDefinition": {
            "typeString": "{ className?: string, current?: number, defaultCurrent?: number, defaultPageSize?: number, disabled?: boolean, hideOnSinglePage?: boolean, itemRender?: (page: number, type: 'page' | 'prev' | 'next' | 'jump-prev' | 'jump-next', element: ReactNode) => ReactNode, jumpNextIcon?: ReactNode | ComponentType, jumpPrevIcon?: ReactNode | ComponentType, locale?: PaginationLocale, nextIcon?: ReactNode | ComponentType, onChange?: (page: number, pageSize: number) => void, onShowSizeChange?: (current: number, size: number) => void, pageSize?: number, pageSizeOptions?: string[] | number[], prefixCls?: string, prevIcon?: ReactNode | ComponentType, responsive?: boolean, role?: string, rootClassName?: string, selectComponentClass?: ComponentType, selectPrefixCls?: string, showLessItems?: boolean, showPrevNextJumpers?: boolean, showQuickJumper?: boolean | { goButton?: ReactNode }, showSizeChanger?: boolean, showTitle?: boolean, showTotal?: (total: number, range: tuple) => ReactNode, simple?: boolean, size?: 'small' | 'default', style?: CSSProperties, total?: number, totalBoundaryShowSizeChanger?: number }",
            "props": [
              {
                "key": "className",
                "type": "string",
                "optional": true
              },
              {
                "key": "current",
                "type": "number",
                "optional": true
              },
              {
                "key": "defaultCurrent",
                "type": "number",
                "optional": true
              },
              {
                "key": "defaultPageSize",
                "type": "number",
                "optional": true
              },
              {
                "key": "disabled",
                "type": "boolean",
                "optional": true
              },
              {
                "key": "hideOnSinglePage",
                "type": "boolean",
                "optional": true
              },
              {
                "key": "itemRender",
                "type": "(page: number, type: 'page' | 'prev' | 'next' | 'jump-prev' | 'jump-next', element: ReactNode) => ReactNode",
                "optional": true,
                "typeDefinition": {
                  "typeString": "(page: number, type: 'page' | 'prev' | 'next' | 'jump-prev' | 'jump-next', element: ReactNode) => ReactNode",
                  "isFunction": true,
                  "props": [
                    {
                      "key": "page",
                      "type": "number",
                      "isParam": true,
                      "optional": false
                    },
                    {
                      "key": "type",
                      "type": "'page' | 'prev' | 'next' | 'jump-prev' | 'jump-next'",
                      "isParam": true,
                      "optional": false,
                      "typeDefinition": {
                        "typeString": "page | prev | next | jump-prev | jump-next",
                        "props": [
                          {
                            "key": "page",
                            "type": "string"
                          },
                          {
                            "key": "prev",
                            "type": "string"
                          },
                          {
                            "key": "next",
                            "type": "string"
                          },
                          {
                            "key": "jump-prev",
                            "type": "string"
                          },
                          {
                            "key": "jump-next",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    {
                      "key": "element",
                      "type": "ReactNode",
                      "isParam": true,
                      "optional": false,
                      "typeDefinition": {
                        "typeString": "ReactNode"
                      }
                    },
                    {
                      "key": "ReactNode",
                      "type": "reference",
                      "isReturn": true,
                      "typeDefinition": {
                        "typeString": "ReactNode"
                      }
                    }
                  ]
                }
              },
              {
                "key": "jumpNextIcon",
                "type": "ReactNode | ComponentType",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactNode | ComponentType",
                  "props": [
                    {
                      "key": "ReactNode",
                      "type": "reference",
                      "typeDefinition": {
                        "typeString": "ReactNode"
                      }
                    },
                    {
                      "key": "ComponentType",
                      "type": "reference",
                      "typeDefinition": {
                        "typeString": "ComponentType"
                      }
                    }
                  ]
                }
              },
              {
                "key": "jumpPrevIcon",
                "type": "ReactNode | ComponentType",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactNode | ComponentType",
                  "props": [
                    {
                      "key": "ReactNode",
                      "type": "reference",
                      "typeDefinition": {
                        "typeString": "ReactNode"
                      }
                    },
                    {
                      "key": "ComponentType",
                      "type": "reference",
                      "typeDefinition": {
                        "typeString": "ComponentType"
                      }
                    }
                  ]
                }
              },
              {
                "key": "locale",
                "type": "PaginationLocale",
                "optional": true,
                "typeDefinition": {
                  "typeString": "PaginationLocale"
                }
              },
              {
                "key": "nextIcon",
                "type": "ReactNode | ComponentType",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactNode | ComponentType",
                  "props": [
                    {
                      "key": "ReactNode",
                      "type": "reference",
                      "typeDefinition": {
                        "typeString": "ReactNode"
                      }
                    },
                    {
                      "key": "ComponentType",
                      "type": "reference",
                      "typeDefinition": {
                        "typeString": "ComponentType"
                      }
                    }
                  ]
                }
              },
              {
                "key": "onChange",
                "type": "(page: number, pageSize: number) => void",
                "optional": true,
                "typeDefinition": {
                  "typeString": "(page: number, pageSize: number) => void",
                  "isFunction": true,
                  "props": [
                    {
                      "key": "page",
                      "type": "number",
                      "isParam": true,
                      "optional": false
                    },
                    {
                      "key": "pageSize",
                      "type": "number",
                      "isParam": true,
                      "optional": false
                    },
                    {
                      "key": "void",
                      "type": "intrinsic",
                      "isReturn": true
                    }
                  ]
                }
              },
              {
                "key": "onShowSizeChange",
                "type": "(current: number, size: number) => void",
                "optional": true,
                "typeDefinition": {
                  "typeString": "(current: number, size: number) => void",
                  "isFunction": true,
                  "props": [
                    {
                      "key": "current",
                      "type": "number",
                      "isParam": true,
                      "optional": false
                    },
                    {
                      "key": "size",
                      "type": "number",
                      "isParam": true,
                      "optional": false
                    },
                    {
                      "key": "void",
                      "type": "intrinsic",
                      "isReturn": true
                    }
                  ]
                }
              },
              {
                "key": "pageSize",
                "type": "number",
                "optional": true
              },
              {
                "key": "pageSizeOptions",
                "type": "string[] | number[]",
                "optional": true,
                "typeDefinition": {
                  "typeString": "string[] | number[]",
                  "props": [
                    {
                      "key": "string[]",
                      "type": "array",
                      "typeDefinition": {
                        "typeString": "string[]",
                        "isArray": true,
                        "props": [
                          {
                            "key": "string",
                            "type": "intrinsic"
                          }
                        ]
                      }
                    },
                    {
                      "key": "number[]",
                      "type": "array",
                      "typeDefinition": {
                        "typeString": "number[]",
                        "isArray": true,
                        "props": [
                          {
                            "key": "number",
                            "type": "intrinsic"
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "key": "prefixCls",
                "type": "string",
                "optional": true
              },
              {
                "key": "prevIcon",
                "type": "ReactNode | ComponentType",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactNode | ComponentType",
                  "props": [
                    {
                      "key": "ReactNode",
                      "type": "reference",
                      "typeDefinition": {
                        "typeString": "ReactNode"
                      }
                    },
                    {
                      "key": "ComponentType",
                      "type": "reference",
                      "typeDefinition": {
                        "typeString": "ComponentType"
                      }
                    }
                  ]
                }
              },
              {
                "key": "responsive",
                "type": "boolean",
                "optional": true
              },
              {
                "key": "role",
                "type": "string",
                "optional": true
              },
              {
                "key": "rootClassName",
                "type": "string",
                "optional": true
              },
              {
                "key": "selectComponentClass",
                "type": "ComponentType",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ComponentType"
                }
              },
              {
                "key": "selectPrefixCls",
                "type": "string",
                "optional": true
              },
              {
                "key": "showLessItems",
                "type": "boolean",
                "optional": true
              },
              {
                "key": "showPrevNextJumpers",
                "type": "boolean",
                "optional": true
              },
              {
                "key": "showQuickJumper",
                "type": "boolean | { goButton?: ReactNode }",
                "optional": true,
                "typeDefinition": {
                  "typeString": "boolean | { goButton?: ReactNode }",
                  "props": [
                    {
                      "key": "boolean",
                      "type": "intrinsic"
                    },
                    {
                      "key": "{ goButton?: ReactNode }",
                      "type": "reflection",
                      "typeDefinition": {
                        "typeString": "{ goButton?: ReactNode }",
                        "props": [
                          {
                            "key": "goButton",
                            "type": "ReactNode",
                            "optional": true,
                            "typeDefinition": {
                              "typeString": "ReactNode"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "key": "showSizeChanger",
                "type": "boolean",
                "optional": true
              },
              {
                "key": "showTitle",
                "type": "boolean",
                "optional": true
              },
              {
                "key": "showTotal",
                "type": "(total: number, range: tuple) => ReactNode",
                "optional": true,
                "typeDefinition": {
                  "typeString": "(total: number, range: tuple) => ReactNode",
                  "isFunction": true,
                  "props": [
                    {
                      "key": "total",
                      "type": "number",
                      "isParam": true,
                      "optional": false
                    },
                    {
                      "key": "range",
                      "type": "tuple",
                      "isParam": true,
                      "optional": false
                    },
                    {
                      "key": "ReactNode",
                      "type": "reference",
                      "isReturn": true,
                      "typeDefinition": {
                        "typeString": "ReactNode"
                      }
                    }
                  ]
                }
              },
              {
                "key": "simple",
                "type": "boolean",
                "optional": true
              },
              {
                "key": "size",
                "type": "'small' | 'default'",
                "optional": true,
                "typeDefinition": {
                  "typeString": "small | default",
                  "props": [
                    {
                      "key": "small",
                      "type": "string"
                    },
                    {
                      "key": "default",
                      "type": "string"
                    }
                  ]
                }
              },
              {
                "key": "style",
                "type": "CSSProperties",
                "optional": true,
                "typeDefinition": {
                  "typeString": "CSSProperties"
                }
              },
              {
                "key": "total",
                "type": "number",
                "optional": true
              },
              {
                "key": "totalBoundaryShowSizeChanger",
                "type": "number",
                "optional": true
              }
            ]
          }
        },
        "prefixCls": {
          "type": "string",
          "optional": true
        },
        "rootClassName": {
          "type": "string",
          "optional": true
        },
        "rowClassName": {
          "type": "union",
          "optional": true,
          "typeDefinition": {
            "typeString": "string | RowClassName",
            "props": [
              {
                "key": "string",
                "type": "intrinsic"
              },
              {
                "key": "RowClassName",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "RowClassName"
                }
              }
            ]
          }
        },
        "rowKey": {
          "type": "union",
          "optional": true,
          "description": "Unique identifier for each row in the table",
          "typeDefinition": {
            "typeString": "string | typeOperator | GetRowKey",
            "props": [
              {
                "key": "string",
                "type": "intrinsic"
              },
              {
                "key": "typeOperator",
                "type": "typeOperator"
              },
              {
                "key": "GetRowKey",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "GetRowKey"
                }
              }
            ]
          }
        },
        "rowSelection": {
          "type": "intersection",
          "optional": true,
          "description": "Configuration for enabling row selection functionality in the table"
        },
        "scroll": {
          "type": "intersection",
          "optional": true
        },
        "showHeader": {
          "type": "boolean",
          "optional": true
        },
        "showSorterTooltip": {
          "type": "union",
          "optional": true,
          "typeDefinition": {
            "typeString": "boolean | TooltipProps",
            "props": [
              {
                "key": "boolean",
                "type": "intrinsic"
              },
              {
                "key": "TooltipProps",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "TooltipProps"
                }
              }
            ]
          }
        },
        "size": {
          "type": "SizeType",
          "optional": true,
          "typeDefinition": {
            "typeString": "SizeType"
          }
        },
        "sortDirections": {
          "type": "array",
          "optional": true,
          "typeDefinition": {
            "typeString": "SortOrder[]",
            "isArray": true,
            "props": [
              {
                "key": "SortOrder",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "SortOrder"
                }
              }
            ]
          }
        },
        "sticky": {
          "type": "union",
          "optional": true,
          "typeDefinition": {
            "typeString": "boolean | TableSticky",
            "props": [
              {
                "key": "boolean",
                "type": "intrinsic"
              },
              {
                "key": "TableSticky",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "TableSticky"
                }
              }
            ]
          }
        },
        "style": {
          "type": "CSSProperties",
          "optional": true,
          "typeDefinition": {
            "typeString": "CSSProperties"
          }
        },
        "summary": {
          "type": "object",
          "optional": true,
          "typeDefinition": {
            "typeString": "(data: typeOperator) => ReactNode",
            "isFunction": true,
            "props": [
              {
                "key": "data",
                "type": "typeOperator",
                "isParam": true,
                "optional": false
              },
              {
                "key": "ReactNode",
                "type": "reference",
                "isReturn": true,
                "typeDefinition": {
                  "typeString": "ReactNode"
                }
              }
            ]
          }
        },
        "tableLayout": {
          "type": "TableLayout",
          "optional": true,
          "typeDefinition": {
            "typeString": "TableLayout"
          }
        },
        "title": {
          "type": "PanelRender",
          "optional": true,
          "typeDefinition": {
            "typeString": "PanelRender"
          }
        },
        "totalPages": {
          "type": "number",
          "description": "Total number of pages available for pagination (deprecated in favor of paginationProps)",
          "optional": true
        }
      },
      "componentTypeName": "TableProps"
    },
    {
      "name": "NoRecordFound",
      "description": "The NoRecordFound component displays a user-friendly message indicating that no records match the search criteria. It enhances user experience by providing clear feedback, often accompanied by suggestions for refining the search or exploring alternative options. Ideal for applications requiring data retrieval.",
      "props": {}
    },
    {
      "name": "Switch",
      "description": "The Switch component is a toggle control that allows users to enable or disable a setting with a simple on/off action. It features a sleek design, providing clear visual feedback and enhancing user experience in applications and interfaces. Ideal for quick adjustments and preferences.",
      "props": {
        "autoFocus": {
          "type": "boolean",
          "description": "Automatically focuses the switch component when mounted to the DOM",
          "optional": true
        },
        "checked": {
          "type": "boolean",
          "description": "Controls the on/off state of the switch component"
        },
        "checkedChildren": {
          "type": "ReactNode",
          "optional": true,
          "description": "Custom content displayed inside the switch when in checked/on state",
          "typeDefinition": {
            "typeString": "ReactNode"
          }
        },
        "className": {
          "type": "string",
          "description": "Additional CSS class names to customize the switch styling",
          "optional": true
        },
        "disabled": {
          "type": "boolean",
          "description": "Prevents user interaction with the switch when set to true",
          "optional": true
        },
        "id": {
          "type": "string",
          "description": "Unique identifier for the switch component",
          "optional": true
        },
        "loading": {
          "type": "boolean",
          "description": "Shows a loading spinner animation inside the switch when true",
          "optional": true
        },
        "onChange": {
          "type": "SwitchChangeEventHandler",
          "optional": true,
          "description": "Callback function that executes when the switch state changes between checked and unchecked",
          "typeDefinition": {
            "typeString": "SwitchChangeEventHandler"
          }
        },
        "unCheckedChildren": {
          "type": "ReactNode",
          "optional": true,
          "description": "Custom content displayed inside the switch when in unchecked/off state",
          "typeDefinition": {
            "typeString": "ReactNode"
          }
        }
      },
      "componentTypeName": "SwitchProps"
    },
    {
      "name": "Steps",
      "description": "The Steps component visually guides users through a sequential process, displaying each step clearly. It enhances user experience by breaking down complex tasks into manageable parts, ensuring clarity and engagement throughout the journey. Ideal for forms, tutorials, or multi-step workflows.",
      "props": {
        "className": {
          "type": "string",
          "description": "Additional class to Steps",
          "optional": true
        },
        "current": {
          "type": "number",
          "description": "To set the current step, counting from 0. You can overwrite this state by using status of Step",
          "optional": true
        },
        "direction": {
          "type": "union",
          "optional": true,
          "description": "To specify the direction of the step bar, horizontal or vertical",
          "typeDefinition": {
            "typeString": "horizontal | vertical",
            "props": [
              {
                "key": "horizontal",
                "type": "string"
              },
              {
                "key": "vertical",
                "type": "string"
              }
            ]
          }
        },
        "initial": {
          "type": "number",
          "description": "Set the initial step, counting from 0",
          "optional": true
        },
        "items": {
          "type": "array",
          "optional": true,
          "description": "Configuration array that defines the content and properties of each step",
          "typeDefinition": {
            "typeString": "StepProps[]",
            "isArray": true,
            "props": [
              {
                "key": "StepProps",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "StepProps"
                }
              }
            ]
          }
        },
        "labelPlacement": {
          "type": "union",
          "optional": true,
          "description": "Place title and description with horizontal or vertical direction",
          "typeDefinition": {
            "typeString": "horizontal | vertical",
            "props": [
              {
                "key": "horizontal",
                "type": "string"
              },
              {
                "key": "vertical",
                "type": "string"
              }
            ]
          }
        },
        "onChange": {
          "type": "object",
          "optional": true,
          "description": "Trigger when Step is changed",
          "typeDefinition": {
            "typeString": "(current: number) => void",
            "isFunction": true,
            "props": [
              {
                "key": "current",
                "type": "number",
                "isParam": true,
                "optional": false
              },
              {
                "key": "void",
                "type": "intrinsic",
                "isReturn": true
              }
            ]
          }
        },
        "percent": {
          "type": "number",
          "description": "Progress circle percentage of current step in process status (only works on basic Steps)",
          "optional": true
        },
        "progressDot": {
          "type": "union",
          "optional": true,
          "description": "Steps with progress dot style, customize the progress dot by setting it to a function. labelPlacement will be vertical",
          "typeDefinition": {
            "typeString": "boolean | ProgressDotRender",
            "props": [
              {
                "key": "boolean",
                "type": "intrinsic"
              },
              {
                "key": "ProgressDotRender",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "ProgressDotRender"
                }
              }
            ]
          }
        },
        "responsive": {
          "type": "boolean",
          "description": "Change to vertical direction when screen width smaller than 532px",
          "optional": true
        },
        "size": {
          "type": "union",
          "optional": true,
          "description": "To specify the size of the step bar, default and small are currently supported",
          "typeDefinition": {
            "typeString": "small | default",
            "props": [
              {
                "key": "small",
                "type": "string"
              },
              {
                "key": "default",
                "type": "string"
              }
            ]
          }
        },
        "status": {
          "type": "union",
          "optional": true,
          "description": "To specify the status of current step, can be set to one of the following values: wait process finish error",
          "typeDefinition": {
            "typeString": "error | wait | process | finish",
            "props": [
              {
                "key": "error",
                "type": "string"
              },
              {
                "key": "wait",
                "type": "string"
              },
              {
                "key": "process",
                "type": "string"
              },
              {
                "key": "finish",
                "type": "string"
              }
            ]
          }
        },
        "type": {
          "type": "union",
          "optional": true,
          "description": "Type of steps, can be set to one of the following values: default navigation inline",
          "typeDefinition": {
            "typeString": "default | navigation | inline",
            "props": [
              {
                "key": "default",
                "type": "string"
              },
              {
                "key": "navigation",
                "type": "string"
              },
              {
                "key": "inline",
                "type": "string"
              }
            ]
          }
        }
      },
      "componentTypeName": "StepsProps"
    },
    {
      "name": "Spacer",
      "description": "The Spacer component is a versatile UI element designed to create flexible gaps between other components. It enhances layout organization by adjusting spacing dynamically, ensuring a clean and balanced design. Ideal for responsive interfaces, it promotes visual harmony and improves user experience.",
      "props": {
        "align": {
          "type": "union",
          "optional": true,
          "description": "Controls vertical alignment of items within the space container",
          "typeDefinition": {
            "typeString": "center | end | start | baseline",
            "props": [
              {
                "key": "center",
                "type": "string"
              },
              {
                "key": "end",
                "type": "string"
              },
              {
                "key": "start",
                "type": "string"
              },
              {
                "key": "baseline",
                "type": "string"
              }
            ]
          }
        },
        "children": {
          "type": "ReactNode",
          "optional": true,
          "description": "Content elements to be rendered inside the spacer component",
          "typeDefinition": {
            "typeString": "ReactNode"
          }
        },
        "className": {
          "type": "string",
          "description": "Additional CSS class name for custom styling of the spacer component",
          "optional": true
        },
        "direction": {
          "type": "union",
          "optional": true,
          "description": "Determines whether items are arranged horizontally or vertically",
          "typeDefinition": {
            "typeString": "horizontal | vertical",
            "props": [
              {
                "key": "horizontal",
                "type": "string"
              },
              {
                "key": "vertical",
                "type": "string"
              }
            ]
          }
        },
        "size": {
          "type": "union",
          "optional": true,
          "description": "Defines spacing between items using predefined sizes or custom pixel values",
          "typeDefinition": {
            "typeString": "number | xs | sm | md | lg | xl | auto | xxl | xxxl",
            "props": [
              {
                "key": "number",
                "type": "intrinsic"
              },
              {
                "key": "xs",
                "type": "string"
              },
              {
                "key": "sm",
                "type": "string"
              },
              {
                "key": "md",
                "type": "string"
              },
              {
                "key": "lg",
                "type": "string"
              },
              {
                "key": "xl",
                "type": "string"
              },
              {
                "key": "auto",
                "type": "string"
              },
              {
                "key": "xxl",
                "type": "string"
              },
              {
                "key": "xxxl",
                "type": "string"
              }
            ]
          }
        },
        "split": {
          "type": "ReactNode",
          "optional": true,
          "description": "Element to be inserted between each item in the space container",
          "typeDefinition": {
            "typeString": "ReactNode"
          }
        },
        "type": {
          "type": "union",
          "optional": true,
          "description": "Determines if spacer acts as a wrapper around content or standalone block spacing",
          "typeDefinition": {
            "typeString": "block | wrapper",
            "props": [
              {
                "key": "block",
                "type": "string"
              },
              {
                "key": "wrapper",
                "type": "string"
              }
            ]
          }
        },
        "wrap": {
          "type": "boolean",
          "description": "Enables items to wrap onto multiple lines when container width is exceeded",
          "optional": true
        }
      },
      "componentTypeName": "SpacerProps"
    },
    {
      "name": "SnackbarProvider",
      "description": "The SnackbarProvider component offers a context for managing snackbars, enabling easy display of brief notifications. It ensures consistent styling and behavior across the application, allowing users to receive timely feedback on actions. Ideal for enhancing user experience with minimal disruption.",
      "props": {
        "children": {
          "type": "union",
          "optional": true,
          "typeDefinition": {
            "typeString": "Element | Element[]",
            "props": [
              {
                "key": "Element",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "Element"
                }
              },
              {
                "key": "Element[]",
                "type": "array",
                "typeDefinition": {
                  "typeString": "Element[]",
                  "isArray": true,
                  "props": [
                    {
                      "key": "Element",
                      "type": "reference",
                      "typeDefinition": {
                        "typeString": "Element"
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      },
      "componentTypeName": "SnackbarProviderProps"
    },
    {
      "name": "Snackbar",
      "description": "The Snackbar component provides brief, unobtrusive notifications at the bottom of the screen. It displays messages for a short duration, allowing users to acknowledge updates or actions without interrupting their workflow. Ideal for alerts, confirmations, or feedback, it enhances user experience with minimal disruption.",
      "props": {}
    },
    {
      "name": "SideNavLogo",
      "description": "The SideNavLogo component serves as a visually appealing branding element in a sidebar navigation menu. It enhances user experience by providing a recognizable logo, ensuring easy navigation while reinforcing brand identity. Ideal for web applications, it seamlessly integrates with various layouts and styles.",
      "props": {}
    },
    {
      "name": "SideNav",
      "description": "The SideNav component is a vertical navigation menu that enhances user experience by providing quick access to key sections of an application. It features collapsible items, icons for visual clarity, and responsive design, ensuring seamless navigation across devices while maintaining a clean and organized interface.",
      "props": {
        "append": {
          "type": "union",
          "optional": true,
          "description": "Extend custom element after navigation menu list",
          "typeDefinition": {
            "typeString": "Element | Element[]",
            "props": [
              {
                "key": "Element",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "Element"
                }
              },
              {
                "key": "Element[]",
                "type": "array",
                "typeDefinition": {
                  "typeString": "Element[]",
                  "isArray": true,
                  "props": [
                    {
                      "key": "Element",
                      "type": "reference",
                      "typeDefinition": {
                        "typeString": "Element"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        "instance": {
          "type": "string",
          "description": "Current selected instance",
          "optional": true
        },
        "instances": {
          "type": "array",
          "optional": true,
          "description": "Instances",
          "typeDefinition": {
            "typeString": "{ logo: Element, name: string, smallLogo: Element }[]",
            "isArray": true,
            "props": [
              {
                "key": "{ logo: Element, name: string, smallLogo: Element }",
                "type": "reflection",
                "typeDefinition": {
                  "typeString": "{ logo: Element, name: string, smallLogo: Element }",
                  "props": [
                    {
                      "key": "logo",
                      "type": "Element",
                      "typeDefinition": {
                        "typeString": "Element"
                      }
                    },
                    {
                      "key": "name",
                      "type": "string"
                    },
                    {
                      "key": "smallLogo",
                      "type": "Element",
                      "typeDefinition": {
                        "typeString": "Element"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        "menu": {
          "type": "array",
          "optional": true,
          "description": "Navigation menu list",
          "typeDefinition": {
            "typeString": "SideNavListProps[]",
            "isArray": true,
            "props": [
              {
                "key": "SideNavListProps",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "SideNavListProps"
                }
              }
            ]
          }
        },
        "minimizeByDefault": {
          "type": "boolean",
          "description": "Minimize the side navigation by default",
          "optional": true
        },
        "minimizeOnSelect": {
          "type": "boolean",
          "description": "Auto minimize when navigation menu selected",
          "optional": true
        },
        "onMinimize": {
          "type": "object",
          "optional": true,
          "description": "on minimize event",
          "typeDefinition": {
            "typeString": "(value: boolean) => void",
            "isFunction": true,
            "props": [
              {
                "key": "value",
                "type": "boolean",
                "isParam": true,
                "optional": false
              },
              {
                "key": "void",
                "type": "intrinsic",
                "isReturn": true
              }
            ]
          }
        },
        "onSwitchInstance": {
          "type": "object",
          "optional": true,
          "description": "On switch instance event",
          "typeDefinition": {
            "typeString": "(value: string) => void",
            "isFunction": true,
            "props": [
              {
                "key": "value",
                "type": "string",
                "isParam": true,
                "optional": false
              },
              {
                "key": "void",
                "type": "intrinsic",
                "isReturn": true
              }
            ]
          }
        },
        "prepend": {
          "type": "union",
          "optional": true,
          "description": "Extend custom element before navigation menu list",
          "typeDefinition": {
            "typeString": "Element | Element[]",
            "props": [
              {
                "key": "Element",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "Element"
                }
              },
              {
                "key": "Element[]",
                "type": "array",
                "typeDefinition": {
                  "typeString": "Element[]",
                  "isArray": true,
                  "props": [
                    {
                      "key": "Element",
                      "type": "reference",
                      "typeDefinition": {
                        "typeString": "Element"
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      },
      "componentTypeName": "SideNavProps"
    },
    {
      "name": "Select",
      "description": "The Select component is a versatile dropdown menu that allows users to choose from a list of options. It enhances user experience by providing a clean interface for selection, supporting single or multiple choices, and can be customized with various styles and functionalities to fit different applications.",
      "props": {
        "allowClear": {
          "type": "union",
          "optional": true,
          "description": "Shows a clear button to reset the selection",
          "typeDefinition": {
            "typeString": "boolean | { clearIcon?: RenderNode }",
            "props": [
              {
                "key": "boolean",
                "type": "intrinsic"
              },
              {
                "key": "{ clearIcon?: RenderNode }",
                "type": "reflection",
                "typeDefinition": {
                  "typeString": "{ clearIcon?: RenderNode }",
                  "props": [
                    {
                      "key": "clearIcon",
                      "type": "RenderNode",
                      "optional": true,
                      "typeDefinition": {
                        "typeString": "RenderNode"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        "autoFocus": {
          "type": "boolean",
          "description": "Automatically focuses the select input when mounted",
          "optional": true
        },
        "className": {
          "type": "string",
          "description": "Custom CSS class name for styling the select component",
          "optional": true
        },
        "defaultActiveFirstOption": {
          "type": "boolean",
          "description": "Automatically highlights the first option in the dropdown list",
          "optional": true
        },
        "defaultValue": {
          "type": "any",
          "description": "Pre-selected option value when the component mounts",
          "optional": true
        },
        "disabled": {
          "type": "boolean",
          "description": "Disables user interaction with the select component",
          "optional": true
        },
        "dropdownRender": {
          "type": "object",
          "optional": true,
          "description": "Custom render function for the dropdown menu content",
          "typeDefinition": {
            "typeString": "(menu: ReactElement) => ReactElement",
            "isFunction": true,
            "props": [
              {
                "key": "menu",
                "type": "ReactElement",
                "isParam": true,
                "optional": false,
                "typeDefinition": {
                  "typeString": "ReactElement"
                }
              },
              {
                "key": "ReactElement",
                "type": "reference",
                "isReturn": true,
                "typeDefinition": {
                  "typeString": "ReactElement"
                }
              }
            ]
          }
        },
        "filterOption": {
          "type": "union",
          "optional": true,
          "description": "Function to control how options are filtered when searching",
          "typeDefinition": {
            "typeString": "boolean | FilterFunc",
            "props": [
              {
                "key": "boolean",
                "type": "intrinsic"
              },
              {
                "key": "FilterFunc",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "FilterFunc"
                }
              }
            ]
          }
        },
        "filterSort": {
          "type": "object",
          "optional": true,
          "description": "Custom sort function for ordering filtered search results",
          "typeDefinition": {
            "typeString": "(optionA: DefaultOptionType, optionB: DefaultOptionType) => number",
            "isFunction": true,
            "props": [
              {
                "key": "optionA",
                "type": "DefaultOptionType",
                "isParam": true,
                "optional": false,
                "typeDefinition": {
                  "typeString": "DefaultOptionType"
                }
              },
              {
                "key": "optionB",
                "type": "DefaultOptionType",
                "isParam": true,
                "optional": false,
                "typeDefinition": {
                  "typeString": "DefaultOptionType"
                }
              },
              {
                "key": "number",
                "type": "intrinsic",
                "isReturn": true
              }
            ]
          }
        },
        "help": {
          "type": "union",
          "optional": true,
          "description": "Description of the input",
          "typeDefinition": {
            "typeString": "null | string",
            "props": [
              {
                "key": "null",
                "type": "object"
              },
              {
                "key": "string",
                "type": "intrinsic"
              }
            ]
          }
        },
        "id": {
          "type": "string",
          "description": "The ID for input",
          "optional": true
        },
        "label": {
          "type": "string",
          "description": "label of the input",
          "optional": true
        },
        "labelInValue": {
          "type": "boolean",
          "description": "Returns selected value as an object containing both value and label",
          "optional": true
        },
        "listHeight": {
          "type": "number",
          "description": "Sets the maximum height of the dropdown list in pixels",
          "optional": true
        },
        "loading": {
          "type": "boolean",
          "description": "Shows a loading spinner in the select component",
          "optional": true
        },
        "maxTagCount": {
          "type": "union",
          "optional": true,
          "description": "Limits the number of displayed selected tags in multiple mode",
          "typeDefinition": {
            "typeString": "number | responsive",
            "props": [
              {
                "key": "number",
                "type": "intrinsic"
              },
              {
                "key": "responsive",
                "type": "string"
              }
            ]
          }
        },
        "maxTagTextLength": {
          "type": "number",
          "description": "Limits the length of text displayed in selected tags",
          "optional": true
        },
        "mode": {
          "type": "union",
          "optional": true,
          "description": "Determines selection behavior: single, multiple, or tags",
          "typeDefinition": {
            "typeString": "multiple | tags",
            "props": [
              {
                "key": "multiple",
                "type": "string"
              },
              {
                "key": "tags",
                "type": "string"
              }
            ]
          }
        },
        "onChange": {
          "type": "object",
          "optional": true,
          "description": "Callback function triggered when selection or input value changes",
          "typeDefinition": {
            "typeString": "(value: any, option: DefaultOptionType | DefaultOptionType[]) => void",
            "isFunction": true,
            "props": [
              {
                "key": "value",
                "type": "any",
                "isParam": true,
                "optional": false
              },
              {
                "key": "option",
                "type": "DefaultOptionType | DefaultOptionType[]",
                "isParam": true,
                "optional": false,
                "typeDefinition": {
                  "typeString": "DefaultOptionType | DefaultOptionType[]",
                  "props": [
                    {
                      "key": "DefaultOptionType",
                      "type": "reference",
                      "typeDefinition": {
                        "typeString": "DefaultOptionType"
                      }
                    },
                    {
                      "key": "DefaultOptionType[]",
                      "type": "array",
                      "typeDefinition": {
                        "typeString": "DefaultOptionType[]",
                        "isArray": true,
                        "props": [
                          {
                            "key": "DefaultOptionType",
                            "type": "reference",
                            "typeDefinition": {
                              "typeString": "DefaultOptionType"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "key": "void",
                "type": "intrinsic",
                "isReturn": true
              }
            ]
          }
        },
        "onClear": {
          "type": "object",
          "optional": true,
          "description": "Callback function triggered when selection is cleared",
          "typeDefinition": {
            "typeString": "() => void",
            "isFunction": true,
            "props": [
              {
                "key": "void",
                "type": "intrinsic",
                "isReturn": true
              }
            ]
          }
        },
        "onInfoIconClick": {
          "type": "object",
          "optional": true,
          "typeDefinition": {
            "typeString": "() => void",
            "isFunction": true,
            "props": [
              {
                "key": "void",
                "type": "intrinsic",
                "isReturn": true
              }
            ]
          }
        },
        "onInputKeyDown": {
          "type": "KeyboardEventHandler",
          "optional": true,
          "description": "Callback function triggered on keyboard input events",
          "typeDefinition": {
            "typeString": "KeyboardEventHandler"
          }
        },
        "onSearch": {
          "type": "object",
          "optional": true,
          "description": "Callback function triggered when search input value changes",
          "typeDefinition": {
            "typeString": "(value: string) => void",
            "isFunction": true,
            "props": [
              {
                "key": "value",
                "type": "string",
                "isParam": true,
                "optional": false
              },
              {
                "key": "void",
                "type": "intrinsic",
                "isReturn": true
              }
            ]
          }
        },
        "options": {
          "type": "array",
          "optional": true,
          "description": "Array of options to populate the select dropdown",
          "typeDefinition": {
            "typeString": "DefaultOptionType[]",
            "isArray": true,
            "props": [
              {
                "key": "DefaultOptionType",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "DefaultOptionType"
                }
              }
            ]
          }
        },
        "placeholder": {
          "type": "ReactNode",
          "optional": true,
          "description": "Text displayed when no option is selected",
          "typeDefinition": {
            "typeString": "ReactNode"
          }
        },
        "placement": {
          "type": "union",
          "optional": true,
          "description": "Controls the direction where the dropdown menu appears",
          "typeDefinition": {
            "typeString": "bottomLeft | bottomRight | topLeft | topRight",
            "props": [
              {
                "key": "bottomLeft",
                "type": "string"
              },
              {
                "key": "bottomRight",
                "type": "string"
              },
              {
                "key": "topLeft",
                "type": "string"
              },
              {
                "key": "topRight",
                "type": "string"
              }
            ]
          }
        },
        "popupClassName": {
          "type": "string",
          "description": "Custom CSS class name for styling the dropdown menu",
          "optional": true
        },
        "searchValue": {
          "type": "string",
          "description": "Controls the current search text in the select input",
          "optional": true
        },
        "showInfoIcon": {
          "type": "boolean",
          "description": "show info icon along with label",
          "optional": true
        },
        "showOptionalText": {
          "type": "boolean",
          "description": "show optional text along with label",
          "optional": true
        },
        "showSearch": {
          "type": "boolean",
          "description": "Enables searching/filtering of options via text input",
          "optional": true
        },
        "size": {
          "type": "union",
          "optional": true,
          "description": "Controls the size of the select component",
          "typeDefinition": {
            "typeString": "md | lg",
            "props": [
              {
                "key": "md",
                "type": "string"
              },
              {
                "key": "lg",
                "type": "string"
              }
            ]
          }
        },
        "status": {
          "type": "union",
          "optional": true,
          "description": "Indicates validation state of the select input",
          "typeDefinition": {
            "typeString": " | error",
            "props": [
              {
                "key": "",
                "type": "string"
              },
              {
                "key": "error",
                "type": "string"
              }
            ]
          }
        },
        "value": {
          "type": "any",
          "description": "Controls the currently selected option value(s)",
          "optional": true
        },
        "width": {
          "type": "union",
          "optional": true,
          "description": "Sets the width of the select component",
          "typeDefinition": {
            "typeString": "string | number",
            "props": [
              {
                "key": "string",
                "type": "intrinsic"
              },
              {
                "key": "number",
                "type": "intrinsic"
              }
            ]
          }
        }
      },
      "componentTypeName": "SelectProps"
    },
    {
      "name": "Row",
      "description": "The Row component is a flexible layout element that organizes child components horizontally. It ensures consistent spacing and alignment, enhancing the visual structure of user interfaces. Ideal for responsive designs, it adapts to various screen sizes, promoting a clean and organized presentation of content.",
      "props": {
        "align": {
          "type": "union",
          "description": "Vertical alignment of the row",
          "typeDefinition": {
            "typeString": "undefined | middle | stretch | top | bottom | ResponsiveAligns",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "middle",
                "type": "string"
              },
              {
                "key": "stretch",
                "type": "string"
              },
              {
                "key": "top",
                "type": "string"
              },
              {
                "key": "bottom",
                "type": "string"
              },
              {
                "key": "ResponsiveAligns",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "ResponsiveAligns"
                }
              }
            ]
          }
        },
        "gutter": {
          "type": "union",
          "description": "Spacing between grids",
          "typeDefinition": {
            "typeString": "Gutter | tuple",
            "props": [
              {
                "key": "Gutter",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "Gutter"
                }
              },
              {
                "key": "tuple",
                "type": "tuple"
              }
            ]
          }
        },
        "justify": {
          "type": "union",
          "description": "Horizontal arrangement of the row",
          "typeDefinition": {
            "typeString": "undefined | center | end | start | space-between | space-around | space-evenly | ResponsiveJustify",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "center",
                "type": "string"
              },
              {
                "key": "end",
                "type": "string"
              },
              {
                "key": "start",
                "type": "string"
              },
              {
                "key": "space-between",
                "type": "string"
              },
              {
                "key": "space-around",
                "type": "string"
              },
              {
                "key": "space-evenly",
                "type": "string"
              },
              {
                "key": "ResponsiveJustify",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "ResponsiveJustify"
                }
              }
            ]
          }
        },
        "wrap": {
          "type": "union",
          "description": "Whether to wrap the row",
          "typeDefinition": {
            "typeString": "undefined | boolean",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "boolean",
                "type": "intrinsic"
              }
            ]
          }
        }
      },
      "componentTypeName": "RowProps"
    },
    {
      "name": "Radio",
      "description": "The Radio component allows users to select a single option from a set of choices. It features a circular button that, when selected, indicates the chosen option. Ideal for forms and surveys, it enhances user experience by providing clear, concise selection capabilities.",
      "props": {
        "autoFocus": {
          "type": "boolean",
          "description": "Automatically focuses the radio button when component mounts",
          "optional": true
        },
        "checked": {
          "type": "boolean",
          "description": "Controls the checked state of the radio button",
          "optional": true
        },
        "children": {
          "type": "ReactNode",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactNode"
          }
        },
        "className": {
          "type": "string",
          "optional": true
        },
        "defaultChecked": {
          "type": "boolean",
          "description": "Sets the initial checked state of the radio button",
          "optional": true
        },
        "disabled": {
          "type": "boolean",
          "description": "Determines whether the radio button is disabled",
          "optional": true
        },
        "id": {
          "type": "string",
          "optional": true
        },
        "name": {
          "type": "string",
          "optional": true
        },
        "onChange": {
          "type": "object",
          "optional": true,
          "typeDefinition": {
            "typeString": "(e: RadioChangeEvent) => void",
            "isFunction": true,
            "props": [
              {
                "key": "e",
                "type": "RadioChangeEvent",
                "isParam": true,
                "optional": false,
                "typeDefinition": {
                  "typeString": "RadioChangeEvent"
                }
              },
              {
                "key": "void",
                "type": "intrinsic",
                "isReturn": true
              }
            ]
          }
        },
        "onClick": {
          "type": "MouseEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "MouseEventHandler"
          }
        },
        "onKeyDown": {
          "type": "KeyboardEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "KeyboardEventHandler"
          }
        },
        "onKeyPress": {
          "type": "KeyboardEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "KeyboardEventHandler"
          }
        },
        "onMouseEnter": {
          "type": "MouseEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "MouseEventHandler"
          }
        },
        "onMouseLeave": {
          "type": "MouseEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "MouseEventHandler"
          }
        },
        "prefixCls": {
          "type": "string",
          "optional": true
        },
        "rootClassName": {
          "type": "string",
          "optional": true
        },
        "skipGroup": {
          "type": "boolean",
          "optional": true
        },
        "style": {
          "type": "CSSProperties",
          "optional": true,
          "typeDefinition": {
            "typeString": "CSSProperties"
          }
        },
        "tabIndex": {
          "type": "number",
          "optional": true
        },
        "title": {
          "type": "string",
          "optional": true
        },
        "type": {
          "type": "string",
          "optional": true
        },
        "value": {
          "type": "any",
          "description": "The value associated with this radio button option",
          "optional": true
        }
      },
      "componentTypeName": "RadioProps"
    },
    {
      "name": "Popover",
      "description": "The Popover component is a versatile UI element that displays additional content or options when triggered by user interaction. It enhances user experience by providing contextual information without navigating away from the current view, ensuring seamless interaction and improved accessibility. Ideal for tooltips, menus, and more.",
      "props": {
        "align": {
          "type": "union",
          "description": "Adjusts the position of the popover relative to its target",
          "typeDefinition": {
            "typeString": "undefined | AlignType",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "AlignType",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "AlignType"
                }
              }
            ]
          }
        },
        "arrow": {
          "type": "union",
          "description": "Controls whether and how to display the arrow pointer",
          "typeDefinition": {
            "typeString": "undefined | boolean | { arrowPointAtCenter?: boolean, pointAtCenter?: boolean }",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "boolean",
                "type": "intrinsic"
              },
              {
                "key": "{ arrowPointAtCenter?: boolean, pointAtCenter?: boolean }",
                "type": "reflection",
                "typeDefinition": {
                  "typeString": "{ arrowPointAtCenter?: boolean, pointAtCenter?: boolean }",
                  "props": [
                    {
                      "key": "arrowPointAtCenter",
                      "type": "boolean",
                      "optional": true
                    },
                    {
                      "key": "pointAtCenter",
                      "type": "boolean",
                      "optional": true
                    }
                  ]
                }
              }
            ]
          }
        },
        "autoAdjustOverflow": {
          "type": "union",
          "description": "Whether to automatically adjust popover position when it hits the edges of the screen",
          "typeDefinition": {
            "typeString": "undefined | boolean | AdjustOverflow",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "boolean",
                "type": "intrinsic"
              },
              {
                "key": "AdjustOverflow",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "AdjustOverflow"
                }
              }
            ]
          }
        },
        "color": {
          "type": "union",
          "description": "Background color of the popover",
          "typeDefinition": {
            "typeString": "undefined | LiteralUnion",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "LiteralUnion",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "LiteralUnion"
                }
              }
            ]
          }
        },
        "content": {
          "type": "ReactNode",
          "description": "Content to show inside the popover",
          "typeDefinition": {
            "typeString": "ReactNode"
          }
        },
        "defaultOpen": {
          "type": "union",
          "description": "Whether the popover is initially visible when mounted",
          "typeDefinition": {
            "typeString": "undefined | boolean",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "boolean",
                "type": "intrinsic"
              }
            ]
          }
        },
        "destroyTooltipOnHide": {
          "type": "union",
          "description": "Whether to destroy the popover's DOM structure when it is hidden",
          "typeDefinition": {
            "typeString": "undefined | boolean | { keepParent?: boolean }",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "boolean",
                "type": "intrinsic"
              },
              {
                "key": "{ keepParent?: boolean }",
                "type": "reflection",
                "typeDefinition": {
                  "typeString": "{ keepParent?: boolean }",
                  "props": [
                    {
                      "key": "keepParent",
                      "type": "boolean",
                      "optional": true
                    }
                  ]
                }
              }
            ]
          }
        },
        "getPopupContainer": {
          "type": "union",
          "description": "Callback to determine which DOM node the popover should be rendered into",
          "typeDefinition": {
            "typeString": "undefined | (triggerNode: HTMLElement) => HTMLElement",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "(triggerNode: HTMLElement) => HTMLElement",
                "type": "reflection",
                "typeDefinition": {
                  "typeString": "(triggerNode: HTMLElement) => HTMLElement",
                  "isFunction": true,
                  "props": [
                    {
                      "key": "triggerNode",
                      "type": "HTMLElement",
                      "isParam": true,
                      "optional": false,
                      "typeDefinition": {
                        "typeString": "HTMLElement"
                      }
                    },
                    {
                      "key": "HTMLElement",
                      "type": "reference",
                      "isReturn": true,
                      "typeDefinition": {
                        "typeString": "HTMLElement"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        "mouseEnterDelay": {
          "type": "union",
          "description": "Delay in seconds before showing the popover on mouse enter",
          "typeDefinition": {
            "typeString": "undefined | number",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "number",
                "type": "intrinsic"
              }
            ]
          }
        },
        "mouseLeaveDelay": {
          "type": "union",
          "description": "Delay in seconds before hiding the popover on mouse leave",
          "typeDefinition": {
            "typeString": "undefined | number",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "number",
                "type": "intrinsic"
              }
            ]
          }
        },
        "onOpenChange": {
          "type": "union",
          "description": "Callback function that fires when popover visibility changes",
          "typeDefinition": {
            "typeString": "undefined | (visible: boolean) => void",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "(visible: boolean) => void",
                "type": "reflection",
                "typeDefinition": {
                  "typeString": "(visible: boolean) => void",
                  "isFunction": true,
                  "props": [
                    {
                      "key": "visible",
                      "type": "boolean",
                      "isParam": true,
                      "optional": false
                    },
                    {
                      "key": "void",
                      "type": "intrinsic",
                      "isReturn": true
                    }
                  ]
                }
              }
            ]
          }
        },
        "open": {
          "type": "union",
          "description": "Controls the visible state of the popover",
          "typeDefinition": {
            "typeString": "undefined | boolean",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "boolean",
                "type": "intrinsic"
              }
            ]
          }
        },
        "overlayClassName": {
          "type": "union",
          "description": "Additional CSS class name for the popover's outer container",
          "typeDefinition": {
            "typeString": "undefined | string",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "string",
                "type": "intrinsic"
              }
            ]
          }
        },
        "overlayInnerStyle": {
          "type": "union",
          "description": "Inline styles for the popover's inner content area",
          "typeDefinition": {
            "typeString": "undefined | CSSProperties",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "CSSProperties",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "CSSProperties"
                }
              }
            ]
          }
        },
        "overlayStyle": {
          "type": "union",
          "description": "Inline styles for the popover's outer container",
          "typeDefinition": {
            "typeString": "undefined | CSSProperties",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "CSSProperties",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "CSSProperties"
                }
              }
            ]
          }
        },
        "placement": {
          "type": "union",
          "description": "Position of the popover relative to its target element",
          "typeDefinition": {
            "typeString": "undefined | TooltipPlacement",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "TooltipPlacement",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "TooltipPlacement"
                }
              }
            ]
          }
        },
        "title": {
          "type": "ReactNode",
          "description": "Title text shown at the top of the popover",
          "typeDefinition": {
            "typeString": "ReactNode"
          }
        },
        "trigger": {
          "type": "union",
          "description": "What user interaction causes the popover to show",
          "typeDefinition": {
            "typeString": "undefined | ActionType | ActionType[]",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "ActionType",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "ActionType"
                }
              },
              {
                "key": "ActionType[]",
                "type": "array",
                "typeDefinition": {
                  "typeString": "ActionType[]",
                  "isArray": true,
                  "props": [
                    {
                      "key": "ActionType",
                      "type": "reference",
                      "typeDefinition": {
                        "typeString": "ActionType"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        "zIndex": {
          "type": "union",
          "description": "CSS z-index value for the popover",
          "typeDefinition": {
            "typeString": "undefined | number",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "number",
                "type": "intrinsic"
              }
            ]
          }
        }
      },
      "componentTypeName": "PopoverProps"
    },
    {
      "name": "Popconfirm",
      "description": "The Popconfirm component provides a user-friendly confirmation dialog that appears upon triggering an action. It prompts users to confirm or cancel their choice, enhancing decision-making and preventing accidental actions. Ideal for critical operations, it ensures clarity and improves user experience in interactive applications.",
      "props": {
        "afterOpenChange": {
          "type": "object",
          "optional": true,
          "typeDefinition": {
            "typeString": "(visible: boolean) => void",
            "isFunction": true,
            "props": [
              {
                "key": "visible",
                "type": "boolean",
                "isParam": true,
                "optional": false
              },
              {
                "key": "void",
                "type": "intrinsic",
                "isReturn": true
              }
            ]
          }
        },
        "afterVisibleChange": {
          "type": "object",
          "optional": true,
          "typeDefinition": {
            "typeString": "(visible: boolean) => void",
            "isFunction": true,
            "props": [
              {
                "key": "visible",
                "type": "boolean",
                "isParam": true,
                "optional": false
              },
              {
                "key": "void",
                "type": "intrinsic",
                "isReturn": true
              }
            ]
          }
        },
        "align": {
          "type": "union",
          "description": "Adjusts the position of the popover relative to its target",
          "typeDefinition": {
            "typeString": "undefined | AlignType",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "AlignType",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "AlignType"
                }
              }
            ]
          }
        },
        "animation": {
          "type": "string",
          "optional": true
        },
        "arrow": {
          "type": "union",
          "description": "Controls whether and how to display the arrow pointer",
          "typeDefinition": {
            "typeString": "undefined | boolean | { arrowPointAtCenter?: boolean, pointAtCenter?: boolean }",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "boolean",
                "type": "intrinsic"
              },
              {
                "key": "{ arrowPointAtCenter?: boolean, pointAtCenter?: boolean }",
                "type": "reflection",
                "typeDefinition": {
                  "typeString": "{ arrowPointAtCenter?: boolean, pointAtCenter?: boolean }",
                  "props": [
                    {
                      "key": "arrowPointAtCenter",
                      "type": "boolean",
                      "optional": true
                    },
                    {
                      "key": "pointAtCenter",
                      "type": "boolean",
                      "optional": true
                    }
                  ]
                }
              }
            ]
          }
        },
        "arrowContent": {
          "type": "ReactNode",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactNode"
          }
        },
        "arrowPointAtCenter": {
          "type": "boolean",
          "optional": true
        },
        "autoAdjustOverflow": {
          "type": "union",
          "description": "Whether to automatically adjust popover position when it hits the edges of the screen",
          "typeDefinition": {
            "typeString": "undefined | boolean | AdjustOverflow",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "boolean",
                "type": "intrinsic"
              },
              {
                "key": "AdjustOverflow",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "AdjustOverflow"
                }
              }
            ]
          }
        },
        "builtinPlacements": {
          "type": "BuildInPlacements",
          "optional": true,
          "typeDefinition": {
            "typeString": "BuildInPlacements"
          }
        },
        "cancelButtonProps": {
          "type": "union",
          "description": "The cancel button props",
          "typeDefinition": {
            "typeString": "undefined | ButtonProps",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "ButtonProps",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "ButtonProps"
                }
              }
            ]
          }
        },
        "cancelText": {
          "type": "ReactNode",
          "description": "The text of the Cancel button",
          "typeDefinition": {
            "typeString": "ReactNode"
          }
        },
        "children": {
          "type": "ReactNode",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactNode"
          }
        },
        "className": {
          "type": "string",
          "optional": true
        },
        "color": {
          "type": "union",
          "description": "Background color of the popover",
          "typeDefinition": {
            "typeString": "undefined | LiteralUnion",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "LiteralUnion",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "LiteralUnion"
                }
              }
            ]
          }
        },
        "content": {
          "type": "ReactNode",
          "description": "Custom content for the popconfirm",
          "typeDefinition": {
            "typeString": "ReactNode"
          }
        },
        "defaultOpen": {
          "type": "union",
          "description": "Whether the popover is initially visible when mounted",
          "typeDefinition": {
            "typeString": "undefined | boolean",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "boolean",
                "type": "intrinsic"
              }
            ]
          }
        },
        "defaultVisible": {
          "type": "boolean",
          "optional": true
        },
        "description": {
          "type": "union",
          "description": "The description of the confirmation box title",
          "typeDefinition": {
            "typeString": "ReactNode | RenderFunction",
            "props": [
              {
                "key": "ReactNode",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "ReactNode"
                }
              },
              {
                "key": "RenderFunction",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "RenderFunction"
                }
              }
            ]
          }
        },
        "destroyTooltipOnHide": {
          "type": "union",
          "description": "Whether to destroy the popover's DOM structure when it is hidden",
          "typeDefinition": {
            "typeString": "undefined | boolean | { keepParent?: boolean }",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "boolean",
                "type": "intrinsic"
              },
              {
                "key": "{ keepParent?: boolean }",
                "type": "reflection",
                "typeDefinition": {
                  "typeString": "{ keepParent?: boolean }",
                  "props": [
                    {
                      "key": "keepParent",
                      "type": "boolean",
                      "optional": true
                    }
                  ]
                }
              }
            ]
          }
        },
        "disabled": {
          "type": "union",
          "description": "Whether show popconfirm when click its childrenNode",
          "typeDefinition": {
            "typeString": "undefined | boolean",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "boolean",
                "type": "intrinsic"
              }
            ]
          }
        },
        "getPopupContainer": {
          "type": "union",
          "description": "Callback to determine which DOM node the popover should be rendered into",
          "typeDefinition": {
            "typeString": "undefined | (triggerNode: HTMLElement) => HTMLElement",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "(triggerNode: HTMLElement) => HTMLElement",
                "type": "reflection",
                "typeDefinition": {
                  "typeString": "(triggerNode: HTMLElement) => HTMLElement",
                  "isFunction": true,
                  "props": [
                    {
                      "key": "triggerNode",
                      "type": "HTMLElement",
                      "isParam": true,
                      "optional": false,
                      "typeDefinition": {
                        "typeString": "HTMLElement"
                      }
                    },
                    {
                      "key": "HTMLElement",
                      "type": "reference",
                      "isReturn": true,
                      "typeDefinition": {
                        "typeString": "HTMLElement"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        "getTooltipContainer": {
          "type": "object",
          "optional": true,
          "typeDefinition": {
            "typeString": "(node: HTMLElement) => HTMLElement",
            "isFunction": true,
            "props": [
              {
                "key": "node",
                "type": "HTMLElement",
                "isParam": true,
                "optional": false,
                "typeDefinition": {
                  "typeString": "HTMLElement"
                }
              },
              {
                "key": "HTMLElement",
                "type": "reference",
                "isReturn": true,
                "typeDefinition": {
                  "typeString": "HTMLElement"
                }
              }
            ]
          }
        },
        "icon": {
          "type": "ReactNode",
          "description": "Customize icon of confirmation",
          "typeDefinition": {
            "typeString": "ReactNode"
          }
        },
        "id": {
          "type": "string",
          "optional": true
        },
        "motion": {
          "type": "CSSMotionProps",
          "optional": true,
          "description": "Config popup motion",
          "typeDefinition": {
            "typeString": "CSSMotionProps"
          }
        },
        "mouseEnterDelay": {
          "type": "union",
          "description": "Delay in seconds before showing the popover on mouse enter",
          "typeDefinition": {
            "typeString": "undefined | number",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "number",
                "type": "intrinsic"
              }
            ]
          }
        },
        "mouseLeaveDelay": {
          "type": "union",
          "description": "Delay in seconds before hiding the popover on mouse leave",
          "typeDefinition": {
            "typeString": "undefined | number",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "number",
                "type": "intrinsic"
              }
            ]
          }
        },
        "okButtonProps": {
          "type": "union",
          "description": "The ok button props",
          "typeDefinition": {
            "typeString": "undefined | ButtonProps",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "ButtonProps",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "ButtonProps"
                }
              }
            ]
          }
        },
        "okText": {
          "type": "ReactNode",
          "description": "The text of the Confirm button",
          "typeDefinition": {
            "typeString": "ReactNode"
          }
        },
        "okType": {
          "type": "union",
          "description": "Button type of the Confirm button",
          "typeDefinition": {
            "typeString": "undefined | LegacyButtonType",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "LegacyButtonType",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "LegacyButtonType"
                }
              }
            ]
          }
        },
        "onCancel": {
          "type": "union",
          "description": "Callback function triggered when cancel button is clicked",
          "typeDefinition": {
            "typeString": "undefined | (e: MouseEvent) => void",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "(e: MouseEvent) => void",
                "type": "reflection",
                "typeDefinition": {
                  "typeString": "(e: MouseEvent) => void",
                  "isFunction": true,
                  "props": [
                    {
                      "key": "e",
                      "type": "MouseEvent",
                      "isParam": true,
                      "optional": false,
                      "typeDefinition": {
                        "typeString": "MouseEvent"
                      }
                    },
                    {
                      "key": "void",
                      "type": "intrinsic",
                      "isReturn": true
                    }
                  ]
                }
              }
            ]
          }
        },
        "onConfirm": {
          "type": "union",
          "description": "Callback function triggered when confirm button is clicked",
          "typeDefinition": {
            "typeString": "undefined | (e: MouseEvent) => void",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "(e: MouseEvent) => void",
                "type": "reflection",
                "typeDefinition": {
                  "typeString": "(e: MouseEvent) => void",
                  "isFunction": true,
                  "props": [
                    {
                      "key": "e",
                      "type": "MouseEvent",
                      "isParam": true,
                      "optional": false,
                      "typeDefinition": {
                        "typeString": "MouseEvent"
                      }
                    },
                    {
                      "key": "void",
                      "type": "intrinsic",
                      "isReturn": true
                    }
                  ]
                }
              }
            ]
          }
        },
        "onOpenChange": {
          "type": "union",
          "description": "Callback function that fires when popover visibility changes",
          "typeDefinition": {
            "typeString": "undefined | (open: boolean, e: KeyboardEvent | MouseEvent) => void",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "(open: boolean, e: KeyboardEvent | MouseEvent) => void",
                "type": "reflection",
                "typeDefinition": {
                  "typeString": "(open: boolean, e: KeyboardEvent | MouseEvent) => void",
                  "isFunction": true,
                  "props": [
                    {
                      "key": "open",
                      "type": "boolean",
                      "isParam": true,
                      "optional": false
                    },
                    {
                      "key": "e",
                      "type": "KeyboardEvent | MouseEvent",
                      "isParam": true,
                      "optional": false,
                      "typeDefinition": {
                        "typeString": "KeyboardEvent | MouseEvent",
                        "props": [
                          {
                            "key": "KeyboardEvent",
                            "type": "reference",
                            "typeDefinition": {
                              "typeString": "KeyboardEvent"
                            }
                          },
                          {
                            "key": "MouseEvent",
                            "type": "reference",
                            "typeDefinition": {
                              "typeString": "MouseEvent"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "key": "void",
                      "type": "intrinsic",
                      "isReturn": true
                    }
                  ]
                }
              }
            ]
          }
        },
        "onPopupAlign": {
          "type": "object",
          "optional": true,
          "typeDefinition": {
            "typeString": "(element: HTMLElement, align: AlignType) => void",
            "isFunction": true,
            "props": [
              {
                "key": "element",
                "type": "HTMLElement",
                "isParam": true,
                "optional": false,
                "typeDefinition": {
                  "typeString": "HTMLElement"
                }
              },
              {
                "key": "align",
                "type": "AlignType",
                "isParam": true,
                "optional": false,
                "typeDefinition": {
                  "typeString": "AlignType"
                }
              },
              {
                "key": "void",
                "type": "intrinsic",
                "isReturn": true
              }
            ]
          }
        },
        "onPopupClick": {
          "type": "union",
          "description": "Callback function triggered when popover is clicked",
          "typeDefinition": {
            "typeString": "undefined | (e: MouseEvent) => void",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "(e: MouseEvent) => void",
                "type": "reflection",
                "typeDefinition": {
                  "typeString": "(e: MouseEvent) => void",
                  "isFunction": true,
                  "props": [
                    {
                      "key": "e",
                      "type": "MouseEvent",
                      "isParam": true,
                      "optional": false,
                      "typeDefinition": {
                        "typeString": "MouseEvent"
                      }
                    },
                    {
                      "key": "void",
                      "type": "intrinsic",
                      "isReturn": true
                    }
                  ]
                }
              }
            ]
          }
        },
        "onVisibleChange": {
          "type": "object",
          "optional": true,
          "typeDefinition": {
            "typeString": "(visible: boolean) => void",
            "isFunction": true,
            "props": [
              {
                "key": "visible",
                "type": "boolean",
                "isParam": true,
                "optional": false
              },
              {
                "key": "void",
                "type": "intrinsic",
                "isReturn": true
              }
            ]
          }
        },
        "open": {
          "type": "union",
          "description": "Controls the visible state of the popover",
          "typeDefinition": {
            "typeString": "undefined | boolean",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "boolean",
                "type": "intrinsic"
              }
            ]
          }
        },
        "openClassName": {
          "type": "string",
          "optional": true
        },
        "overlay": {
          "type": "union",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactNode | () => ReactNode",
            "props": [
              {
                "key": "ReactNode",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "ReactNode"
                }
              },
              {
                "key": "() => ReactNode",
                "type": "reflection",
                "typeDefinition": {
                  "typeString": "() => ReactNode",
                  "isFunction": true,
                  "props": [
                    {
                      "key": "ReactNode",
                      "type": "reference",
                      "isReturn": true,
                      "typeDefinition": {
                        "typeString": "ReactNode"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        "overlayClassName": {
          "type": "union",
          "description": "Additional CSS class name for the popover's outer container",
          "typeDefinition": {
            "typeString": "undefined | string",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "string",
                "type": "intrinsic"
              }
            ]
          }
        },
        "overlayInnerStyle": {
          "type": "union",
          "description": "Inline styles for the popover's inner content area",
          "typeDefinition": {
            "typeString": "undefined | CSSProperties",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "CSSProperties",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "CSSProperties"
                }
              }
            ]
          }
        },
        "overlayStyle": {
          "type": "union",
          "description": "Inline styles for the popover's outer container",
          "typeDefinition": {
            "typeString": "undefined | CSSProperties",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "CSSProperties",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "CSSProperties"
                }
              }
            ]
          }
        },
        "placement": {
          "type": "union",
          "description": "Position of the popover relative to its target element",
          "typeDefinition": {
            "typeString": "undefined | TooltipPlacement",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "TooltipPlacement",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "TooltipPlacement"
                }
              }
            ]
          }
        },
        "popupVisible": {
          "type": "boolean",
          "optional": true
        },
        "prefixCls": {
          "type": "string",
          "optional": true
        },
        "rootClassName": {
          "type": "string",
          "optional": true
        },
        "showArrow": {
          "type": "boolean",
          "optional": true
        },
        "showCancel": {
          "type": "union",
          "description": "Show cancel button",
          "typeDefinition": {
            "typeString": "undefined | boolean",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "boolean",
                "type": "intrinsic"
              }
            ]
          }
        },
        "style": {
          "type": "CSSProperties",
          "optional": true,
          "typeDefinition": {
            "typeString": "CSSProperties"
          }
        },
        "title": {
          "type": "union",
          "description": "The title of the confirmation box",
          "typeDefinition": {
            "typeString": "ReactNode | RenderFunction",
            "props": [
              {
                "key": "ReactNode",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "ReactNode"
                }
              },
              {
                "key": "RenderFunction",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "RenderFunction"
                }
              }
            ]
          }
        },
        "transitionName": {
          "type": "string",
          "optional": true
        },
        "trigger": {
          "type": "union",
          "description": "What user interaction causes the popover to show",
          "typeDefinition": {
            "typeString": "undefined | ActionType | ActionType[]",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "ActionType",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "ActionType"
                }
              },
              {
                "key": "ActionType[]",
                "type": "array",
                "typeDefinition": {
                  "typeString": "ActionType[]",
                  "isArray": true,
                  "props": [
                    {
                      "key": "ActionType",
                      "type": "reference",
                      "typeDefinition": {
                        "typeString": "ActionType"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        "visible": {
          "type": "boolean",
          "optional": true
        },
        "zIndex": {
          "type": "union",
          "description": "CSS z-index value for the popover",
          "typeDefinition": {
            "typeString": "undefined | number",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "number",
                "type": "intrinsic"
              }
            ]
          }
        }
      },
      "componentTypeName": "PopconfirmProps"
    },
    {
      "name": "Pagination",
      "description": "The Pagination component enables users to navigate through multiple pages of content efficiently. It displays page numbers, next and previous buttons, and allows for quick access to specific sections, enhancing user experience in content-heavy applications. Ideal for managing large datasets or articles seamlessly.",
      "props": {
        "className": {
          "type": "string",
          "description": "Customized CSS class name for the pagination component.",
          "optional": true
        },
        "current": {
          "type": "number",
          "description": "Current page number.",
          "optional": true
        },
        "defaultCurrent": {
          "type": "number",
          "description": "Default initial page number.",
          "optional": true
        },
        "defaultPageSize": {
          "type": "number",
          "description": "Default number of items per page.",
          "optional": true
        },
        "disabled": {
          "type": "boolean",
          "description": "Whether the pagination component is disabled.",
          "optional": true
        },
        "hideOnSinglePage": {
          "type": "boolean",
          "description": "Whether to hide the pagination component if there is only one page.",
          "optional": true
        },
        "itemRender": {
          "type": "object",
          "optional": true,
          "typeDefinition": {
            "typeString": "(page: number, type: 'page' | 'prev' | 'next' | 'jump-prev' | 'jump-next', element: ReactNode) => ReactNode",
            "isFunction": true,
            "props": [
              {
                "key": "page",
                "type": "number",
                "isParam": true,
                "optional": false
              },
              {
                "key": "type",
                "type": "'page' | 'prev' | 'next' | 'jump-prev' | 'jump-next'",
                "isParam": true,
                "optional": false,
                "typeDefinition": {
                  "typeString": "page | prev | next | jump-prev | jump-next",
                  "props": [
                    {
                      "key": "page",
                      "type": "string"
                    },
                    {
                      "key": "prev",
                      "type": "string"
                    },
                    {
                      "key": "next",
                      "type": "string"
                    },
                    {
                      "key": "jump-prev",
                      "type": "string"
                    },
                    {
                      "key": "jump-next",
                      "type": "string"
                    }
                  ]
                }
              },
              {
                "key": "element",
                "type": "ReactNode",
                "isParam": true,
                "optional": false,
                "typeDefinition": {
                  "typeString": "ReactNode"
                }
              },
              {
                "key": "ReactNode",
                "type": "reference",
                "isReturn": true,
                "typeDefinition": {
                  "typeString": "ReactNode"
                }
              }
            ]
          }
        },
        "jumpNextIcon": {
          "type": "union",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactNode | ComponentType",
            "props": [
              {
                "key": "ReactNode",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "ReactNode"
                }
              },
              {
                "key": "ComponentType",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "ComponentType"
                }
              }
            ]
          }
        },
        "jumpPrevIcon": {
          "type": "union",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactNode | ComponentType",
            "props": [
              {
                "key": "ReactNode",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "ReactNode"
                }
              },
              {
                "key": "ComponentType",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "ComponentType"
                }
              }
            ]
          }
        },
        "locale": {
          "type": "PaginationLocale",
          "optional": true,
          "typeDefinition": {
            "typeString": "PaginationLocale"
          }
        },
        "nextIcon": {
          "type": "union",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactNode | ComponentType",
            "props": [
              {
                "key": "ReactNode",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "ReactNode"
                }
              },
              {
                "key": "ComponentType",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "ComponentType"
                }
              }
            ]
          }
        },
        "onChange": {
          "type": "object",
          "optional": true,
          "description": "Callback function that is executed when the page number or page size is changed.",
          "typeDefinition": {
            "typeString": "(page: number, pageSize: number) => void",
            "isFunction": true,
            "props": [
              {
                "key": "page",
                "type": "number",
                "isParam": true,
                "optional": false
              },
              {
                "key": "pageSize",
                "type": "number",
                "isParam": true,
                "optional": false
              },
              {
                "key": "void",
                "type": "intrinsic",
                "isReturn": true
              }
            ]
          }
        },
        "onShowSizeChange": {
          "type": "object",
          "optional": true,
          "description": "Callback function that is executed when the page size is changed.",
          "typeDefinition": {
            "typeString": "(current: number, size: number) => void",
            "isFunction": true,
            "props": [
              {
                "key": "current",
                "type": "number",
                "isParam": true,
                "optional": false
              },
              {
                "key": "size",
                "type": "number",
                "isParam": true,
                "optional": false
              },
              {
                "key": "void",
                "type": "intrinsic",
                "isReturn": true
              }
            ]
          }
        },
        "pageSize": {
          "type": "number",
          "description": "Number of items per page.",
          "optional": true
        },
        "pageSizeOptions": {
          "type": "union",
          "optional": true,
          "description": "Size options for the page size selector.",
          "typeDefinition": {
            "typeString": "string[] | number[]",
            "props": [
              {
                "key": "string[]",
                "type": "array",
                "typeDefinition": {
                  "typeString": "string[]",
                  "isArray": true,
                  "props": [
                    {
                      "key": "string",
                      "type": "intrinsic"
                    }
                  ]
                }
              },
              {
                "key": "number[]",
                "type": "array",
                "typeDefinition": {
                  "typeString": "number[]",
                  "isArray": true,
                  "props": [
                    {
                      "key": "number",
                      "type": "intrinsic"
                    }
                  ]
                }
              }
            ]
          }
        },
        "prefixCls": {
          "type": "string",
          "optional": true
        },
        "prevIcon": {
          "type": "union",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactNode | ComponentType",
            "props": [
              {
                "key": "ReactNode",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "ReactNode"
                }
              },
              {
                "key": "ComponentType",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "ComponentType"
                }
              }
            ]
          }
        },
        "responsive": {
          "type": "boolean",
          "optional": true
        },
        "role": {
          "type": "string",
          "optional": true
        },
        "rootClassName": {
          "type": "string",
          "optional": true
        },
        "selectComponentClass": {
          "type": "ComponentType",
          "optional": true,
          "typeDefinition": {
            "typeString": "ComponentType"
          }
        },
        "selectPrefixCls": {
          "type": "string",
          "optional": true
        },
        "showLessItems": {
          "type": "boolean",
          "optional": true
        },
        "showPrevNextJumpers": {
          "type": "boolean",
          "optional": true
        },
        "showQuickJumper": {
          "type": "union",
          "optional": true,
          "description": "Whether to show quick navigation to jump to specific pages.",
          "typeDefinition": {
            "typeString": "boolean | { goButton?: ReactNode }",
            "props": [
              {
                "key": "boolean",
                "type": "intrinsic"
              },
              {
                "key": "{ goButton?: ReactNode }",
                "type": "reflection",
                "typeDefinition": {
                  "typeString": "{ goButton?: ReactNode }",
                  "props": [
                    {
                      "key": "goButton",
                      "type": "ReactNode",
                      "optional": true,
                      "typeDefinition": {
                        "typeString": "ReactNode"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        "showSizeChanger": {
          "type": "boolean",
          "description": "Whether to show the page size selector.",
          "optional": true
        },
        "showTitle": {
          "type": "boolean",
          "optional": true
        },
        "showTotal": {
          "type": "object",
          "optional": true,
          "typeDefinition": {
            "typeString": "(total: number, range: tuple) => ReactNode",
            "isFunction": true,
            "props": [
              {
                "key": "total",
                "type": "number",
                "isParam": true,
                "optional": false
              },
              {
                "key": "range",
                "type": "tuple",
                "isParam": true,
                "optional": false
              },
              {
                "key": "ReactNode",
                "type": "reference",
                "isReturn": true,
                "typeDefinition": {
                  "typeString": "ReactNode"
                }
              }
            ]
          }
        },
        "simple": {
          "type": "boolean",
          "optional": true
        },
        "size": {
          "type": "union",
          "optional": true,
          "description": "Specify the size of Pagination",
          "typeDefinition": {
            "typeString": "small | default",
            "props": [
              {
                "key": "small",
                "type": "string"
              },
              {
                "key": "default",
                "type": "string"
              }
            ]
          }
        },
        "style": {
          "type": "CSSProperties",
          "optional": true,
          "typeDefinition": {
            "typeString": "CSSProperties"
          }
        },
        "total": {
          "type": "number",
          "description": "Total number of items.",
          "optional": true
        },
        "totalBoundaryShowSizeChanger": {
          "type": "number",
          "optional": true
        }
      },
      "componentTypeName": "PaginationProps"
    },
    {
      "name": "Modal",
      "description": "The Modal component is a versatile overlay that displays content in a focused manner, often used for alerts, forms, or additional information. It enhances user experience by dimming the background, ensuring attention is directed to the modal's content, and can be easily customized for various applications.",
      "props": {
        "additionalFooterButtons": {
          "type": "Element",
          "optional": true,
          "description": "Additional button elements that will be rendered alongside the default buttons in the modal footer.",
          "typeDefinition": {
            "typeString": "Element"
          }
        },
        "afterClose": {
          "type": "object",
          "optional": true,
          "description": "A callback function that will be executed after the modal finishes its closing animation.",
          "typeDefinition": {
            "typeString": "() => void",
            "isFunction": true,
            "props": [
              {
                "key": "void",
                "type": "intrinsic",
                "isReturn": true
              }
            ]
          }
        },
        "cancelButtonProps": {
          "type": "ButtonProps",
          "optional": true,
          "description": "Additional props that will be passed directly to customize the cancel button behavior and appearance.",
          "typeDefinition": {
            "typeString": "{ block?: boolean, children?: string, className?: string, danger?: boolean, disabled?: boolean, href?: string, icon?: '' | 'wallet-add' | 'wallet' | 'activity-outline' | 'airplaine-outline' | 'alert-circle-outline' | 'alert-octagon-outline' | 'alert-triangle-outline' | 'align-center-outline' | 'align-justify-outline' | 'align-left-outline' | 'align-right-outline' | 'anchor-outline' | 'aperture-outline' | 'arrow-down-outline' | 'arrow-down-long-outline' | 'arrow-down-circle-outline' | 'arrow-down-left-outline' | 'arrow-down-right-outline' | 'arrow-left-circle-outline' | 'arrow-left-outline' | 'arrow-right-circle-outline' | 'arrow-right-outline' | 'arrow-up-circle-outline' | 'arrow-up-left-outline' | 'arrow-up-outline' | 'arrow-up-long-outline' | 'arrow-up-right-outline' | 'at-sign-outline' | 'award-outline' | 'bar-chart2outline' | 'bar-chart-outline' | 'battery-charging-outline' | 'battery-outline' | 'bell-off-outline' | 'bell-outline' | 'bluetooth-outline' | 'bnpl-outline' | 'bold-outline' | 'book-open-outline' | 'book-outline' | 'bookmark-outline' | 'box-outline' | 'briefcase-outline' | 'calendar-outline' | 'camera-off-outline' | 'camera-outline' | 'cash-loan-money-rp-outline' | 'cast-outline' | 'cat-outline' | 'chat-outline' | 'check-circle' | 'check-circle-outline' | 'check-outline' | 'check-square-outline' | 'chevron-down-outline' | 'chevron-left-outline' | 'chevron-right-outline' | 'chevron-up-outline' | 'chevrons-down-outline' | 'chevrons-left-outline' | 'chevrons-right-outline' | 'chevrons-up-outline' | 'chrome-outline' | 'circle-outline' | 'clipboard-outline' | 'clock-outline' | 'close-outline' | 'cloud-drizzle-outline' | 'cloud-lightning-outline' | 'cloud-off-outline' | 'cloud-outline' | 'cloud-rain-outline' | 'cloud-snow-outline' | 'code-outline' | 'codepen-outline' | 'codesandbox-outline' | 'coffee-outline' | 'columns-outline' | 'command-outline' | 'community-outline' | 'compass-outline' | 'copy-outline' | 'corner-down-left-outline' | 'corner-down-right-outline' | 'corner-left-down-outline' | 'corner-left-up-outline' | 'corner-right-down-outline' | 'corner-right-up-outline' | 'corner-up-left-outline' | 'corner-up-right-outline' | 'cpu-outline' | 'credit-card-outline' | 'crop-outline' | 'database-outline' | 'delete-outline' | 'disc-outline' | 'distributor-outline' | 'divide-circle-outline' | 'divide-outline' | 'divide-square-outline' | 'dollar-sign-outline' | 'dot' | 'download-cloud-outline' | 'download-outline' | 'dribbble-outline' | 'droplet-outline' | 'edc-outline' | 'edit2-outline' | 'edit3-outline' | 'edit-outline' | 'external-link-outline' | 'eye-off-outline' | 'eye-outline' | 'facebook-outline' | 'fast-forward-outline' | 'feather-outline' | 'figma-outline' | 'file-minus-outline' | 'file-outline' | 'file-plus-outline' | 'file-text-outline' | 'film-outline' | 'filter-outline' | 'flag-outline' | 'folder-minus-outline' | 'folder-outline' | 'folder-plus-outline' | 'framer-outline' | 'frown-outline' | 'gift-outline' | 'git-branch-outline' | 'git-commit-outline' | 'git-merge-outline' | 'git-pull-request-outline' | 'gitlab-outline' | 'grid-outline' | 'hand-card-outline' | 'hard-drive-outline' | 'hash-outline' | 'headphones-outline' | 'heart-outline' | 'help-circle-outline' | 'hexagon-outline' | 'home-outline' | 'image-outline' | 'inbox-outline' | 'info-circle' | 'info-outline' | 'info-triangle' | 'instagram-outline' | 'incomplete-loan-outline' | 'italic-outline' | 'key-outline' | 'layers-outline' | 'layout-outline' | 'life-buoy-outline' | 'link2-outline' | 'link-outline' | 'linkedin-outline' | 'list-outline' | 'loader-outline' | 'location-outline' | 'lock-outline' | 'log-in-outline' | 'log-out-outline' | 'mail-outline' | 'map-outline' | 'map-pin-outline' | 'maximize2-outline' | 'maximize-outline' | 'meh-outline' | 'menu-outline' | 'merchant-outline' | 'message-circle-outline' | 'message-square-outline' | 'mic-off-outline' | 'mic-outline' | 'minimize2-outline' | 'minimize-outline' | 'minus-circle-outline' | 'minus-outline' | 'minus-square-outline' | 'money-in-outline' | 'monitor-outline' | 'moon-outline' | 'more-horizontal-outline' | 'more-vertical-outline' | 'mouse-pointer-outline' | 'move-outline' | 'music-outline' | 'navigation2-outline' | 'navigation-outline' | 'octagon-outline' | 'package-outline' | 'paper-scroll' | 'paperclip-outline' | 'partnership-outline' | 'pause-circle-outline' | 'pause-outline' | 'pen-tool-outline' | 'percent-outline' | 'phone-call-outline' | 'phone-forwarded-outline' | 'phone-incoming-outline' | 'phone-missed-outline' | 'phone-off-outline' | 'phone-outgoing-outline' | 'phone-outline' | 'pie-chart-outline' | 'play-circle-outline' | 'play-outline' | 'plus-circle-outline' | 'plus-outline' | 'plus-square-outline' | 'pocket-outline' | 'power-outline' | 'printer-outline' | 'radio-outline' | 'receipt-outline' | 'refresh-ccw-outline' | 'refresh-cw-outline' | 'refund-money-rp-outline' | 'repeat-outline' | 'rewind-outline' | 'rotate-ccw-outline' | 'rotate-cw-outline' | 'save-outline' | 'scanner-outline' | 'scissors-outline' | 'search-outline' | 'send-outline' | 'send-money-rp' | 'server-outline' | 'settings-outline' | 'share2-outline' | 'share-outline' | 'shield-off-outline' | 'shield-outline' | 'shopping-bag-outline' | 'shopping-cart-outline' | 'shuffle-outline' | 'sidebar-outline' | 'skip-back-outline' | 'skip-forward-outline' | 'slack-outline' | 'slash-outline' | 'sliders-outline' | 'smartphone-outline' | 'smile-outline' | 'speaker-outline' | 'square-outline' | 'star-outline' | 'stop-circle-outline' | 'sun-outline' | 'sunrise-outline' | 'sunset-outline' | 'supplier-outline' | 'tablet-outline' | 'tag-outline' | 'target1-outline' | 'target-outline' | 'terminal-outline' | 'thermometer-outline' | 'thumbs-down-outline' | 'thumbs-up-outline' | 'toggle-left-outline' | 'toggle-right-outline' | 'tool-outline' | 'trash2-outline' | 'trash-outline' | 'trello-outline' | 'trending-down-outline' | 'trending-up-outline' | 'triangle-outline' | 'truck-outline' | 'tv-outline' | 'twitch-outline' | 'twitter-outline' | 'type-outline' | 'umbrella-outline' | 'underline-outline' | 'unlock-outline' | 'upload-cloud-outline' | 'upload-outline' | 'user-check-outline' | 'user-minus-outline' | 'user-outline' | 'user-plus-outline' | 'user-xoutline' | 'users-outline' | 'video-of-outline' | 'video-outline' | 'voicemail-outline' | 'volume1-outline' | 'volume2-outline' | 'volume-outline' | 'volume-xoutline' | 'watch-outline' | 'web-outline' | 'wifi1-outline' | 'wifi-off-outline' | 'wifi-outline' | 'wind-outline' | 'xcircle-outline' | 'xoctagon-outline' | 'xsquare-outline' | 'youtube-outline' | 'zap-off-outline' | 'zap-outline' | 'zoom-in-outline' | 'zoom-out-outline', iconProps?: IconProps, loading?: boolean, onClick?: MouseEventHandler, size?: SizeType, target?: HTMLAttributeAnchorTarget, theme?: 'desktop' | 'mobile', type?: 'link' | 'text' | 'dashed' | 'filled' | 'outlined-primary' | 'outlined-secondary' }",
            "props": [
              {
                "key": "block",
                "type": "boolean",
                "optional": true
              },
              {
                "key": "children",
                "type": "string",
                "optional": true
              },
              {
                "key": "className",
                "type": "string",
                "optional": true
              },
              {
                "key": "danger",
                "type": "boolean",
                "optional": true
              },
              {
                "key": "disabled",
                "type": "boolean",
                "optional": true
              },
              {
                "key": "href",
                "type": "string",
                "optional": true
              },
              {
                "key": "icon",
                "type": "'' | 'wallet-add' | 'wallet' | 'activity-outline' | 'airplaine-outline' | 'alert-circle-outline' | 'alert-octagon-outline' | 'alert-triangle-outline' | 'align-center-outline' | 'align-justify-outline' | 'align-left-outline' | 'align-right-outline' | 'anchor-outline' | 'aperture-outline' | 'arrow-down-outline' | 'arrow-down-long-outline' | 'arrow-down-circle-outline' | 'arrow-down-left-outline' | 'arrow-down-right-outline' | 'arrow-left-circle-outline' | 'arrow-left-outline' | 'arrow-right-circle-outline' | 'arrow-right-outline' | 'arrow-up-circle-outline' | 'arrow-up-left-outline' | 'arrow-up-outline' | 'arrow-up-long-outline' | 'arrow-up-right-outline' | 'at-sign-outline' | 'award-outline' | 'bar-chart2outline' | 'bar-chart-outline' | 'battery-charging-outline' | 'battery-outline' | 'bell-off-outline' | 'bell-outline' | 'bluetooth-outline' | 'bnpl-outline' | 'bold-outline' | 'book-open-outline' | 'book-outline' | 'bookmark-outline' | 'box-outline' | 'briefcase-outline' | 'calendar-outline' | 'camera-off-outline' | 'camera-outline' | 'cash-loan-money-rp-outline' | 'cast-outline' | 'cat-outline' | 'chat-outline' | 'check-circle' | 'check-circle-outline' | 'check-outline' | 'check-square-outline' | 'chevron-down-outline' | 'chevron-left-outline' | 'chevron-right-outline' | 'chevron-up-outline' | 'chevrons-down-outline' | 'chevrons-left-outline' | 'chevrons-right-outline' | 'chevrons-up-outline' | 'chrome-outline' | 'circle-outline' | 'clipboard-outline' | 'clock-outline' | 'close-outline' | 'cloud-drizzle-outline' | 'cloud-lightning-outline' | 'cloud-off-outline' | 'cloud-outline' | 'cloud-rain-outline' | 'cloud-snow-outline' | 'code-outline' | 'codepen-outline' | 'codesandbox-outline' | 'coffee-outline' | 'columns-outline' | 'command-outline' | 'community-outline' | 'compass-outline' | 'copy-outline' | 'corner-down-left-outline' | 'corner-down-right-outline' | 'corner-left-down-outline' | 'corner-left-up-outline' | 'corner-right-down-outline' | 'corner-right-up-outline' | 'corner-up-left-outline' | 'corner-up-right-outline' | 'cpu-outline' | 'credit-card-outline' | 'crop-outline' | 'database-outline' | 'delete-outline' | 'disc-outline' | 'distributor-outline' | 'divide-circle-outline' | 'divide-outline' | 'divide-square-outline' | 'dollar-sign-outline' | 'dot' | 'download-cloud-outline' | 'download-outline' | 'dribbble-outline' | 'droplet-outline' | 'edc-outline' | 'edit2-outline' | 'edit3-outline' | 'edit-outline' | 'external-link-outline' | 'eye-off-outline' | 'eye-outline' | 'facebook-outline' | 'fast-forward-outline' | 'feather-outline' | 'figma-outline' | 'file-minus-outline' | 'file-outline' | 'file-plus-outline' | 'file-text-outline' | 'film-outline' | 'filter-outline' | 'flag-outline' | 'folder-minus-outline' | 'folder-outline' | 'folder-plus-outline' | 'framer-outline' | 'frown-outline' | 'gift-outline' | 'git-branch-outline' | 'git-commit-outline' | 'git-merge-outline' | 'git-pull-request-outline' | 'gitlab-outline' | 'grid-outline' | 'hand-card-outline' | 'hard-drive-outline' | 'hash-outline' | 'headphones-outline' | 'heart-outline' | 'help-circle-outline' | 'hexagon-outline' | 'home-outline' | 'image-outline' | 'inbox-outline' | 'info-circle' | 'info-outline' | 'info-triangle' | 'instagram-outline' | 'incomplete-loan-outline' | 'italic-outline' | 'key-outline' | 'layers-outline' | 'layout-outline' | 'life-buoy-outline' | 'link2-outline' | 'link-outline' | 'linkedin-outline' | 'list-outline' | 'loader-outline' | 'location-outline' | 'lock-outline' | 'log-in-outline' | 'log-out-outline' | 'mail-outline' | 'map-outline' | 'map-pin-outline' | 'maximize2-outline' | 'maximize-outline' | 'meh-outline' | 'menu-outline' | 'merchant-outline' | 'message-circle-outline' | 'message-square-outline' | 'mic-off-outline' | 'mic-outline' | 'minimize2-outline' | 'minimize-outline' | 'minus-circle-outline' | 'minus-outline' | 'minus-square-outline' | 'money-in-outline' | 'monitor-outline' | 'moon-outline' | 'more-horizontal-outline' | 'more-vertical-outline' | 'mouse-pointer-outline' | 'move-outline' | 'music-outline' | 'navigation2-outline' | 'navigation-outline' | 'octagon-outline' | 'package-outline' | 'paper-scroll' | 'paperclip-outline' | 'partnership-outline' | 'pause-circle-outline' | 'pause-outline' | 'pen-tool-outline' | 'percent-outline' | 'phone-call-outline' | 'phone-forwarded-outline' | 'phone-incoming-outline' | 'phone-missed-outline' | 'phone-off-outline' | 'phone-outgoing-outline' | 'phone-outline' | 'pie-chart-outline' | 'play-circle-outline' | 'play-outline' | 'plus-circle-outline' | 'plus-outline' | 'plus-square-outline' | 'pocket-outline' | 'power-outline' | 'printer-outline' | 'radio-outline' | 'receipt-outline' | 'refresh-ccw-outline' | 'refresh-cw-outline' | 'refund-money-rp-outline' | 'repeat-outline' | 'rewind-outline' | 'rotate-ccw-outline' | 'rotate-cw-outline' | 'save-outline' | 'scanner-outline' | 'scissors-outline' | 'search-outline' | 'send-outline' | 'send-money-rp' | 'server-outline' | 'settings-outline' | 'share2-outline' | 'share-outline' | 'shield-off-outline' | 'shield-outline' | 'shopping-bag-outline' | 'shopping-cart-outline' | 'shuffle-outline' | 'sidebar-outline' | 'skip-back-outline' | 'skip-forward-outline' | 'slack-outline' | 'slash-outline' | 'sliders-outline' | 'smartphone-outline' | 'smile-outline' | 'speaker-outline' | 'square-outline' | 'star-outline' | 'stop-circle-outline' | 'sun-outline' | 'sunrise-outline' | 'sunset-outline' | 'supplier-outline' | 'tablet-outline' | 'tag-outline' | 'target1-outline' | 'target-outline' | 'terminal-outline' | 'thermometer-outline' | 'thumbs-down-outline' | 'thumbs-up-outline' | 'toggle-left-outline' | 'toggle-right-outline' | 'tool-outline' | 'trash2-outline' | 'trash-outline' | 'trello-outline' | 'trending-down-outline' | 'trending-up-outline' | 'triangle-outline' | 'truck-outline' | 'tv-outline' | 'twitch-outline' | 'twitter-outline' | 'type-outline' | 'umbrella-outline' | 'underline-outline' | 'unlock-outline' | 'upload-cloud-outline' | 'upload-outline' | 'user-check-outline' | 'user-minus-outline' | 'user-outline' | 'user-plus-outline' | 'user-xoutline' | 'users-outline' | 'video-of-outline' | 'video-outline' | 'voicemail-outline' | 'volume1-outline' | 'volume2-outline' | 'volume-outline' | 'volume-xoutline' | 'watch-outline' | 'web-outline' | 'wifi1-outline' | 'wifi-off-outline' | 'wifi-outline' | 'wind-outline' | 'xcircle-outline' | 'xoctagon-outline' | 'xsquare-outline' | 'youtube-outline' | 'zap-off-outline' | 'zap-outline' | 'zoom-in-outline' | 'zoom-out-outline'",
                "optional": true,
                "typeDefinition": {
                  "typeString": " | wallet-add | wallet | activity-outline | airplaine-outline | alert-circle-outline | alert-octagon-outline | alert-triangle-outline | align-center-outline | align-justify-outline | align-left-outline | align-right-outline | anchor-outline | aperture-outline | arrow-down-outline | arrow-down-long-outline | arrow-down-circle-outline | arrow-down-left-outline | arrow-down-right-outline | arrow-left-circle-outline | arrow-left-outline | arrow-right-circle-outline | arrow-right-outline | arrow-up-circle-outline | arrow-up-left-outline | arrow-up-outline | arrow-up-long-outline | arrow-up-right-outline | at-sign-outline | award-outline | bar-chart2outline | bar-chart-outline | battery-charging-outline | battery-outline | bell-off-outline | bell-outline | bluetooth-outline | bnpl-outline | bold-outline | book-open-outline | book-outline | bookmark-outline | box-outline | briefcase-outline | calendar-outline | camera-off-outline | camera-outline | cash-loan-money-rp-outline | cast-outline | cat-outline | chat-outline | check-circle | check-circle-outline | check-outline | check-square-outline | chevron-down-outline | chevron-left-outline | chevron-right-outline | chevron-up-outline | chevrons-down-outline | chevrons-left-outline | chevrons-right-outline | chevrons-up-outline | chrome-outline | circle-outline | clipboard-outline | clock-outline | close-outline | cloud-drizzle-outline | cloud-lightning-outline | cloud-off-outline | cloud-outline | cloud-rain-outline | cloud-snow-outline | code-outline | codepen-outline | codesandbox-outline | coffee-outline | columns-outline | command-outline | community-outline | compass-outline | copy-outline | corner-down-left-outline | corner-down-right-outline | corner-left-down-outline | corner-left-up-outline | corner-right-down-outline | corner-right-up-outline | corner-up-left-outline | corner-up-right-outline | cpu-outline | credit-card-outline | crop-outline | database-outline | delete-outline | disc-outline | distributor-outline | divide-circle-outline | divide-outline | divide-square-outline | dollar-sign-outline | dot | download-cloud-outline | download-outline | dribbble-outline | droplet-outline | edc-outline | edit2-outline | edit3-outline | edit-outline | external-link-outline | eye-off-outline | eye-outline | facebook-outline | fast-forward-outline | feather-outline | figma-outline | file-minus-outline | file-outline | file-plus-outline | file-text-outline | film-outline | filter-outline | flag-outline | folder-minus-outline | folder-outline | folder-plus-outline | framer-outline | frown-outline | gift-outline | git-branch-outline | git-commit-outline | git-merge-outline | git-pull-request-outline | gitlab-outline | grid-outline | hand-card-outline | hard-drive-outline | hash-outline | headphones-outline | heart-outline | help-circle-outline | hexagon-outline | home-outline | image-outline | inbox-outline | info-circle | info-outline | info-triangle | instagram-outline | incomplete-loan-outline | italic-outline | key-outline | layers-outline | layout-outline | life-buoy-outline | link2-outline | link-outline | linkedin-outline | list-outline | loader-outline | location-outline | lock-outline | log-in-outline | log-out-outline | mail-outline | map-outline | map-pin-outline | maximize2-outline | maximize-outline | meh-outline | menu-outline | merchant-outline | message-circle-outline | message-square-outline | mic-off-outline | mic-outline | minimize2-outline | minimize-outline | minus-circle-outline | minus-outline | minus-square-outline | money-in-outline | monitor-outline | moon-outline | more-horizontal-outline | more-vertical-outline | mouse-pointer-outline | move-outline | music-outline | navigation2-outline | navigation-outline | octagon-outline | package-outline | paper-scroll | paperclip-outline | partnership-outline | pause-circle-outline | pause-outline | pen-tool-outline | percent-outline | phone-call-outline | phone-forwarded-outline | phone-incoming-outline | phone-missed-outline | phone-off-outline | phone-outgoing-outline | phone-outline | pie-chart-outline | play-circle-outline | play-outline | plus-circle-outline | plus-outline | plus-square-outline | pocket-outline | power-outline | printer-outline | radio-outline | receipt-outline | refresh-ccw-outline | refresh-cw-outline | refund-money-rp-outline | repeat-outline | rewind-outline | rotate-ccw-outline | rotate-cw-outline | save-outline | scanner-outline | scissors-outline | search-outline | send-outline | send-money-rp | server-outline | settings-outline | share2-outline | share-outline | shield-off-outline | shield-outline | shopping-bag-outline | shopping-cart-outline | shuffle-outline | sidebar-outline | skip-back-outline | skip-forward-outline | slack-outline | slash-outline | sliders-outline | smartphone-outline | smile-outline | speaker-outline | square-outline | star-outline | stop-circle-outline | sun-outline | sunrise-outline | sunset-outline | supplier-outline | tablet-outline | tag-outline | target1-outline | target-outline | terminal-outline | thermometer-outline | thumbs-down-outline | thumbs-up-outline | toggle-left-outline | toggle-right-outline | tool-outline | trash2-outline | trash-outline | trello-outline | trending-down-outline | trending-up-outline | triangle-outline | truck-outline | tv-outline | twitch-outline | twitter-outline | type-outline | umbrella-outline | underline-outline | unlock-outline | upload-cloud-outline | upload-outline | user-check-outline | user-minus-outline | user-outline | user-plus-outline | user-xoutline | users-outline | video-of-outline | video-outline | voicemail-outline | volume1-outline | volume2-outline | volume-outline | volume-xoutline | watch-outline | web-outline | wifi1-outline | wifi-off-outline | wifi-outline | wind-outline | xcircle-outline | xoctagon-outline | xsquare-outline | youtube-outline | zap-off-outline | zap-outline | zoom-in-outline | zoom-out-outline",
                  "props": [
                    {
                      "key": "",
                      "type": "string"
                    },
                    {
                      "key": "wallet-add",
                      "type": "string"
                    },
                    {
                      "key": "wallet",
                      "type": "string"
                    },
                    {
                      "key": "activity-outline",
                      "type": "string"
                    },
                    {
                      "key": "airplaine-outline",
                      "type": "string"
                    },
                    {
                      "key": "alert-circle-outline",
                      "type": "string"
                    },
                    {
                      "key": "alert-octagon-outline",
                      "type": "string"
                    },
                    {
                      "key": "alert-triangle-outline",
                      "type": "string"
                    },
                    {
                      "key": "align-center-outline",
                      "type": "string"
                    },
                    {
                      "key": "align-justify-outline",
                      "type": "string"
                    },
                    {
                      "key": "align-left-outline",
                      "type": "string"
                    },
                    {
                      "key": "align-right-outline",
                      "type": "string"
                    },
                    {
                      "key": "anchor-outline",
                      "type": "string"
                    },
                    {
                      "key": "aperture-outline",
                      "type": "string"
                    },
                    {
                      "key": "arrow-down-outline",
                      "type": "string"
                    },
                    {
                      "key": "arrow-down-long-outline",
                      "type": "string"
                    },
                    {
                      "key": "arrow-down-circle-outline",
                      "type": "string"
                    },
                    {
                      "key": "arrow-down-left-outline",
                      "type": "string"
                    },
                    {
                      "key": "arrow-down-right-outline",
                      "type": "string"
                    },
                    {
                      "key": "arrow-left-circle-outline",
                      "type": "string"
                    },
                    {
                      "key": "arrow-left-outline",
                      "type": "string"
                    },
                    {
                      "key": "arrow-right-circle-outline",
                      "type": "string"
                    },
                    {
                      "key": "arrow-right-outline",
                      "type": "string"
                    },
                    {
                      "key": "arrow-up-circle-outline",
                      "type": "string"
                    },
                    {
                      "key": "arrow-up-left-outline",
                      "type": "string"
                    },
                    {
                      "key": "arrow-up-outline",
                      "type": "string"
                    },
                    {
                      "key": "arrow-up-long-outline",
                      "type": "string"
                    },
                    {
                      "key": "arrow-up-right-outline",
                      "type": "string"
                    },
                    {
                      "key": "at-sign-outline",
                      "type": "string"
                    },
                    {
                      "key": "award-outline",
                      "type": "string"
                    },
                    {
                      "key": "bar-chart2outline",
                      "type": "string"
                    },
                    {
                      "key": "bar-chart-outline",
                      "type": "string"
                    },
                    {
                      "key": "battery-charging-outline",
                      "type": "string"
                    },
                    {
                      "key": "battery-outline",
                      "type": "string"
                    },
                    {
                      "key": "bell-off-outline",
                      "type": "string"
                    },
                    {
                      "key": "bell-outline",
                      "type": "string"
                    },
                    {
                      "key": "bluetooth-outline",
                      "type": "string"
                    },
                    {
                      "key": "bnpl-outline",
                      "type": "string"
                    },
                    {
                      "key": "bold-outline",
                      "type": "string"
                    },
                    {
                      "key": "book-open-outline",
                      "type": "string"
                    },
                    {
                      "key": "book-outline",
                      "type": "string"
                    },
                    {
                      "key": "bookmark-outline",
                      "type": "string"
                    },
                    {
                      "key": "box-outline",
                      "type": "string"
                    },
                    {
                      "key": "briefcase-outline",
                      "type": "string"
                    },
                    {
                      "key": "calendar-outline",
                      "type": "string"
                    },
                    {
                      "key": "camera-off-outline",
                      "type": "string"
                    },
                    {
                      "key": "camera-outline",
                      "type": "string"
                    },
                    {
                      "key": "cash-loan-money-rp-outline",
                      "type": "string"
                    },
                    {
                      "key": "cast-outline",
                      "type": "string"
                    },
                    {
                      "key": "cat-outline",
                      "type": "string"
                    },
                    {
                      "key": "chat-outline",
                      "type": "string"
                    },
                    {
                      "key": "check-circle",
                      "type": "string"
                    },
                    {
                      "key": "check-circle-outline",
                      "type": "string"
                    },
                    {
                      "key": "check-outline",
                      "type": "string"
                    },
                    {
                      "key": "check-square-outline",
                      "type": "string"
                    },
                    {
                      "key": "chevron-down-outline",
                      "type": "string"
                    },
                    {
                      "key": "chevron-left-outline",
                      "type": "string"
                    },
                    {
                      "key": "chevron-right-outline",
                      "type": "string"
                    },
                    {
                      "key": "chevron-up-outline",
                      "type": "string"
                    },
                    {
                      "key": "chevrons-down-outline",
                      "type": "string"
                    },
                    {
                      "key": "chevrons-left-outline",
                      "type": "string"
                    },
                    {
                      "key": "chevrons-right-outline",
                      "type": "string"
                    },
                    {
                      "key": "chevrons-up-outline",
                      "type": "string"
                    },
                    {
                      "key": "chrome-outline",
                      "type": "string"
                    },
                    {
                      "key": "circle-outline",
                      "type": "string"
                    },
                    {
                      "key": "clipboard-outline",
                      "type": "string"
                    },
                    {
                      "key": "clock-outline",
                      "type": "string"
                    },
                    {
                      "key": "close-outline",
                      "type": "string"
                    },
                    {
                      "key": "cloud-drizzle-outline",
                      "type": "string"
                    },
                    {
                      "key": "cloud-lightning-outline",
                      "type": "string"
                    },
                    {
                      "key": "cloud-off-outline",
                      "type": "string"
                    },
                    {
                      "key": "cloud-outline",
                      "type": "string"
                    },
                    {
                      "key": "cloud-rain-outline",
                      "type": "string"
                    },
                    {
                      "key": "cloud-snow-outline",
                      "type": "string"
                    },
                    {
                      "key": "code-outline",
                      "type": "string"
                    },
                    {
                      "key": "codepen-outline",
                      "type": "string"
                    },
                    {
                      "key": "codesandbox-outline",
                      "type": "string"
                    },
                    {
                      "key": "coffee-outline",
                      "type": "string"
                    },
                    {
                      "key": "columns-outline",
                      "type": "string"
                    },
                    {
                      "key": "command-outline",
                      "type": "string"
                    },
                    {
                      "key": "community-outline",
                      "type": "string"
                    },
                    {
                      "key": "compass-outline",
                      "type": "string"
                    },
                    {
                      "key": "copy-outline",
                      "type": "string"
                    },
                    {
                      "key": "corner-down-left-outline",
                      "type": "string"
                    },
                    {
                      "key": "corner-down-right-outline",
                      "type": "string"
                    },
                    {
                      "key": "corner-left-down-outline",
                      "type": "string"
                    },
                    {
                      "key": "corner-left-up-outline",
                      "type": "string"
                    },
                    {
                      "key": "corner-right-down-outline",
                      "type": "string"
                    },
                    {
                      "key": "corner-right-up-outline",
                      "type": "string"
                    },
                    {
                      "key": "corner-up-left-outline",
                      "type": "string"
                    },
                    {
                      "key": "corner-up-right-outline",
                      "type": "string"
                    },
                    {
                      "key": "cpu-outline",
                      "type": "string"
                    },
                    {
                      "key": "credit-card-outline",
                      "type": "string"
                    },
                    {
                      "key": "crop-outline",
                      "type": "string"
                    },
                    {
                      "key": "database-outline",
                      "type": "string"
                    },
                    {
                      "key": "delete-outline",
                      "type": "string"
                    },
                    {
                      "key": "disc-outline",
                      "type": "string"
                    },
                    {
                      "key": "distributor-outline",
                      "type": "string"
                    },
                    {
                      "key": "divide-circle-outline",
                      "type": "string"
                    },
                    {
                      "key": "divide-outline",
                      "type": "string"
                    },
                    {
                      "key": "divide-square-outline",
                      "type": "string"
                    },
                    {
                      "key": "dollar-sign-outline",
                      "type": "string"
                    },
                    {
                      "key": "dot",
                      "type": "string"
                    },
                    {
                      "key": "download-cloud-outline",
                      "type": "string"
                    },
                    {
                      "key": "download-outline",
                      "type": "string"
                    },
                    {
                      "key": "dribbble-outline",
                      "type": "string"
                    },
                    {
                      "key": "droplet-outline",
                      "type": "string"
                    },
                    {
                      "key": "edc-outline",
                      "type": "string"
                    },
                    {
                      "key": "edit2-outline",
                      "type": "string"
                    },
                    {
                      "key": "edit3-outline",
                      "type": "string"
                    },
                    {
                      "key": "edit-outline",
                      "type": "string"
                    },
                    {
                      "key": "external-link-outline",
                      "type": "string"
                    },
                    {
                      "key": "eye-off-outline",
                      "type": "string"
                    },
                    {
                      "key": "eye-outline",
                      "type": "string"
                    },
                    {
                      "key": "facebook-outline",
                      "type": "string"
                    },
                    {
                      "key": "fast-forward-outline",
                      "type": "string"
                    },
                    {
                      "key": "feather-outline",
                      "type": "string"
                    },
                    {
                      "key": "figma-outline",
                      "type": "string"
                    },
                    {
                      "key": "file-minus-outline",
                      "type": "string"
                    },
                    {
                      "key": "file-outline",
                      "type": "string"
                    },
                    {
                      "key": "file-plus-outline",
                      "type": "string"
                    },
                    {
                      "key": "file-text-outline",
                      "type": "string"
                    },
                    {
                      "key": "film-outline",
                      "type": "string"
                    },
                    {
                      "key": "filter-outline",
                      "type": "string"
                    },
                    {
                      "key": "flag-outline",
                      "type": "string"
                    },
                    {
                      "key": "folder-minus-outline",
                      "type": "string"
                    },
                    {
                      "key": "folder-outline",
                      "type": "string"
                    },
                    {
                      "key": "folder-plus-outline",
                      "type": "string"
                    },
                    {
                      "key": "framer-outline",
                      "type": "string"
                    },
                    {
                      "key": "frown-outline",
                      "type": "string"
                    },
                    {
                      "key": "gift-outline",
                      "type": "string"
                    },
                    {
                      "key": "git-branch-outline",
                      "type": "string"
                    },
                    {
                      "key": "git-commit-outline",
                      "type": "string"
                    },
                    {
                      "key": "git-merge-outline",
                      "type": "string"
                    },
                    {
                      "key": "git-pull-request-outline",
                      "type": "string"
                    },
                    {
                      "key": "gitlab-outline",
                      "type": "string"
                    },
                    {
                      "key": "grid-outline",
                      "type": "string"
                    },
                    {
                      "key": "hand-card-outline",
                      "type": "string"
                    },
                    {
                      "key": "hard-drive-outline",
                      "type": "string"
                    },
                    {
                      "key": "hash-outline",
                      "type": "string"
                    },
                    {
                      "key": "headphones-outline",
                      "type": "string"
                    },
                    {
                      "key": "heart-outline",
                      "type": "string"
                    },
                    {
                      "key": "help-circle-outline",
                      "type": "string"
                    },
                    {
                      "key": "hexagon-outline",
                      "type": "string"
                    },
                    {
                      "key": "home-outline",
                      "type": "string"
                    },
                    {
                      "key": "image-outline",
                      "type": "string"
                    },
                    {
                      "key": "inbox-outline",
                      "type": "string"
                    },
                    {
                      "key": "info-circle",
                      "type": "string"
                    },
                    {
                      "key": "info-outline",
                      "type": "string"
                    },
                    {
                      "key": "info-triangle",
                      "type": "string"
                    },
                    {
                      "key": "instagram-outline",
                      "type": "string"
                    },
                    {
                      "key": "incomplete-loan-outline",
                      "type": "string"
                    },
                    {
                      "key": "italic-outline",
                      "type": "string"
                    },
                    {
                      "key": "key-outline",
                      "type": "string"
                    },
                    {
                      "key": "layers-outline",
                      "type": "string"
                    },
                    {
                      "key": "layout-outline",
                      "type": "string"
                    },
                    {
                      "key": "life-buoy-outline",
                      "type": "string"
                    },
                    {
                      "key": "link2-outline",
                      "type": "string"
                    },
                    {
                      "key": "link-outline",
                      "type": "string"
                    },
                    {
                      "key": "linkedin-outline",
                      "type": "string"
                    },
                    {
                      "key": "list-outline",
                      "type": "string"
                    },
                    {
                      "key": "loader-outline",
                      "type": "string"
                    },
                    {
                      "key": "location-outline",
                      "type": "string"
                    },
                    {
                      "key": "lock-outline",
                      "type": "string"
                    },
                    {
                      "key": "log-in-outline",
                      "type": "string"
                    },
                    {
                      "key": "log-out-outline",
                      "type": "string"
                    },
                    {
                      "key": "mail-outline",
                      "type": "string"
                    },
                    {
                      "key": "map-outline",
                      "type": "string"
                    },
                    {
                      "key": "map-pin-outline",
                      "type": "string"
                    },
                    {
                      "key": "maximize2-outline",
                      "type": "string"
                    },
                    {
                      "key": "maximize-outline",
                      "type": "string"
                    },
                    {
                      "key": "meh-outline",
                      "type": "string"
                    },
                    {
                      "key": "menu-outline",
                      "type": "string"
                    },
                    {
                      "key": "merchant-outline",
                      "type": "string"
                    },
                    {
                      "key": "message-circle-outline",
                      "type": "string"
                    },
                    {
                      "key": "message-square-outline",
                      "type": "string"
                    },
                    {
                      "key": "mic-off-outline",
                      "type": "string"
                    },
                    {
                      "key": "mic-outline",
                      "type": "string"
                    },
                    {
                      "key": "minimize2-outline",
                      "type": "string"
                    },
                    {
                      "key": "minimize-outline",
                      "type": "string"
                    },
                    {
                      "key": "minus-circle-outline",
                      "type": "string"
                    },
                    {
                      "key": "minus-outline",
                      "type": "string"
                    },
                    {
                      "key": "minus-square-outline",
                      "type": "string"
                    },
                    {
                      "key": "money-in-outline",
                      "type": "string"
                    },
                    {
                      "key": "monitor-outline",
                      "type": "string"
                    },
                    {
                      "key": "moon-outline",
                      "type": "string"
                    },
                    {
                      "key": "more-horizontal-outline",
                      "type": "string"
                    },
                    {
                      "key": "more-vertical-outline",
                      "type": "string"
                    },
                    {
                      "key": "mouse-pointer-outline",
                      "type": "string"
                    },
                    {
                      "key": "move-outline",
                      "type": "string"
                    },
                    {
                      "key": "music-outline",
                      "type": "string"
                    },
                    {
                      "key": "navigation2-outline",
                      "type": "string"
                    },
                    {
                      "key": "navigation-outline",
                      "type": "string"
                    },
                    {
                      "key": "octagon-outline",
                      "type": "string"
                    },
                    {
                      "key": "package-outline",
                      "type": "string"
                    },
                    {
                      "key": "paper-scroll",
                      "type": "string"
                    },
                    {
                      "key": "paperclip-outline",
                      "type": "string"
                    },
                    {
                      "key": "partnership-outline",
                      "type": "string"
                    },
                    {
                      "key": "pause-circle-outline",
                      "type": "string"
                    },
                    {
                      "key": "pause-outline",
                      "type": "string"
                    },
                    {
                      "key": "pen-tool-outline",
                      "type": "string"
                    },
                    {
                      "key": "percent-outline",
                      "type": "string"
                    },
                    {
                      "key": "phone-call-outline",
                      "type": "string"
                    },
                    {
                      "key": "phone-forwarded-outline",
                      "type": "string"
                    },
                    {
                      "key": "phone-incoming-outline",
                      "type": "string"
                    },
                    {
                      "key": "phone-missed-outline",
                      "type": "string"
                    },
                    {
                      "key": "phone-off-outline",
                      "type": "string"
                    },
                    {
                      "key": "phone-outgoing-outline",
                      "type": "string"
                    },
                    {
                      "key": "phone-outline",
                      "type": "string"
                    },
                    {
                      "key": "pie-chart-outline",
                      "type": "string"
                    },
                    {
                      "key": "play-circle-outline",
                      "type": "string"
                    },
                    {
                      "key": "play-outline",
                      "type": "string"
                    },
                    {
                      "key": "plus-circle-outline",
                      "type": "string"
                    },
                    {
                      "key": "plus-outline",
                      "type": "string"
                    },
                    {
                      "key": "plus-square-outline",
                      "type": "string"
                    },
                    {
                      "key": "pocket-outline",
                      "type": "string"
                    },
                    {
                      "key": "power-outline",
                      "type": "string"
                    },
                    {
                      "key": "printer-outline",
                      "type": "string"
                    },
                    {
                      "key": "radio-outline",
                      "type": "string"
                    },
                    {
                      "key": "receipt-outline",
                      "type": "string"
                    },
                    {
                      "key": "refresh-ccw-outline",
                      "type": "string"
                    },
                    {
                      "key": "refresh-cw-outline",
                      "type": "string"
                    },
                    {
                      "key": "refund-money-rp-outline",
                      "type": "string"
                    },
                    {
                      "key": "repeat-outline",
                      "type": "string"
                    },
                    {
                      "key": "rewind-outline",
                      "type": "string"
                    },
                    {
                      "key": "rotate-ccw-outline",
                      "type": "string"
                    },
                    {
                      "key": "rotate-cw-outline",
                      "type": "string"
                    },
                    {
                      "key": "save-outline",
                      "type": "string"
                    },
                    {
                      "key": "scanner-outline",
                      "type": "string"
                    },
                    {
                      "key": "scissors-outline",
                      "type": "string"
                    },
                    {
                      "key": "search-outline",
                      "type": "string"
                    },
                    {
                      "key": "send-outline",
                      "type": "string"
                    },
                    {
                      "key": "send-money-rp",
                      "type": "string"
                    },
                    {
                      "key": "server-outline",
                      "type": "string"
                    },
                    {
                      "key": "settings-outline",
                      "type": "string"
                    },
                    {
                      "key": "share2-outline",
                      "type": "string"
                    },
                    {
                      "key": "share-outline",
                      "type": "string"
                    },
                    {
                      "key": "shield-off-outline",
                      "type": "string"
                    },
                    {
                      "key": "shield-outline",
                      "type": "string"
                    },
                    {
                      "key": "shopping-bag-outline",
                      "type": "string"
                    },
                    {
                      "key": "shopping-cart-outline",
                      "type": "string"
                    },
                    {
                      "key": "shuffle-outline",
                      "type": "string"
                    },
                    {
                      "key": "sidebar-outline",
                      "type": "string"
                    },
                    {
                      "key": "skip-back-outline",
                      "type": "string"
                    },
                    {
                      "key": "skip-forward-outline",
                      "type": "string"
                    },
                    {
                      "key": "slack-outline",
                      "type": "string"
                    },
                    {
                      "key": "slash-outline",
                      "type": "string"
                    },
                    {
                      "key": "sliders-outline",
                      "type": "string"
                    },
                    {
                      "key": "smartphone-outline",
                      "type": "string"
                    },
                    {
                      "key": "smile-outline",
                      "type": "string"
                    },
                    {
                      "key": "speaker-outline",
                      "type": "string"
                    },
                    {
                      "key": "square-outline",
                      "type": "string"
                    },
                    {
                      "key": "star-outline",
                      "type": "string"
                    },
                    {
                      "key": "stop-circle-outline",
                      "type": "string"
                    },
                    {
                      "key": "sun-outline",
                      "type": "string"
                    },
                    {
                      "key": "sunrise-outline",
                      "type": "string"
                    },
                    {
                      "key": "sunset-outline",
                      "type": "string"
                    },
                    {
                      "key": "supplier-outline",
                      "type": "string"
                    },
                    {
                      "key": "tablet-outline",
                      "type": "string"
                    },
                    {
                      "key": "tag-outline",
                      "type": "string"
                    },
                    {
                      "key": "target1-outline",
                      "type": "string"
                    },
                    {
                      "key": "target-outline",
                      "type": "string"
                    },
                    {
                      "key": "terminal-outline",
                      "type": "string"
                    },
                    {
                      "key": "thermometer-outline",
                      "type": "string"
                    },
                    {
                      "key": "thumbs-down-outline",
                      "type": "string"
                    },
                    {
                      "key": "thumbs-up-outline",
                      "type": "string"
                    },
                    {
                      "key": "toggle-left-outline",
                      "type": "string"
                    },
                    {
                      "key": "toggle-right-outline",
                      "type": "string"
                    },
                    {
                      "key": "tool-outline",
                      "type": "string"
                    },
                    {
                      "key": "trash2-outline",
                      "type": "string"
                    },
                    {
                      "key": "trash-outline",
                      "type": "string"
                    },
                    {
                      "key": "trello-outline",
                      "type": "string"
                    },
                    {
                      "key": "trending-down-outline",
                      "type": "string"
                    },
                    {
                      "key": "trending-up-outline",
                      "type": "string"
                    },
                    {
                      "key": "triangle-outline",
                      "type": "string"
                    },
                    {
                      "key": "truck-outline",
                      "type": "string"
                    },
                    {
                      "key": "tv-outline",
                      "type": "string"
                    },
                    {
                      "key": "twitch-outline",
                      "type": "string"
                    },
                    {
                      "key": "twitter-outline",
                      "type": "string"
                    },
                    {
                      "key": "type-outline",
                      "type": "string"
                    },
                    {
                      "key": "umbrella-outline",
                      "type": "string"
                    },
                    {
                      "key": "underline-outline",
                      "type": "string"
                    },
                    {
                      "key": "unlock-outline",
                      "type": "string"
                    },
                    {
                      "key": "upload-cloud-outline",
                      "type": "string"
                    },
                    {
                      "key": "upload-outline",
                      "type": "string"
                    },
                    {
                      "key": "user-check-outline",
                      "type": "string"
                    },
                    {
                      "key": "user-minus-outline",
                      "type": "string"
                    },
                    {
                      "key": "user-outline",
                      "type": "string"
                    },
                    {
                      "key": "user-plus-outline",
                      "type": "string"
                    },
                    {
                      "key": "user-xoutline",
                      "type": "string"
                    },
                    {
                      "key": "users-outline",
                      "type": "string"
                    },
                    {
                      "key": "video-of-outline",
                      "type": "string"
                    },
                    {
                      "key": "video-outline",
                      "type": "string"
                    },
                    {
                      "key": "voicemail-outline",
                      "type": "string"
                    },
                    {
                      "key": "volume1-outline",
                      "type": "string"
                    },
                    {
                      "key": "volume2-outline",
                      "type": "string"
                    },
                    {
                      "key": "volume-outline",
                      "type": "string"
                    },
                    {
                      "key": "volume-xoutline",
                      "type": "string"
                    },
                    {
                      "key": "watch-outline",
                      "type": "string"
                    },
                    {
                      "key": "web-outline",
                      "type": "string"
                    },
                    {
                      "key": "wifi1-outline",
                      "type": "string"
                    },
                    {
                      "key": "wifi-off-outline",
                      "type": "string"
                    },
                    {
                      "key": "wifi-outline",
                      "type": "string"
                    },
                    {
                      "key": "wind-outline",
                      "type": "string"
                    },
                    {
                      "key": "xcircle-outline",
                      "type": "string"
                    },
                    {
                      "key": "xoctagon-outline",
                      "type": "string"
                    },
                    {
                      "key": "xsquare-outline",
                      "type": "string"
                    },
                    {
                      "key": "youtube-outline",
                      "type": "string"
                    },
                    {
                      "key": "zap-off-outline",
                      "type": "string"
                    },
                    {
                      "key": "zap-outline",
                      "type": "string"
                    },
                    {
                      "key": "zoom-in-outline",
                      "type": "string"
                    },
                    {
                      "key": "zoom-out-outline",
                      "type": "string"
                    }
                  ]
                }
              },
              {
                "key": "iconProps",
                "type": "IconProps",
                "optional": true,
                "typeDefinition": {
                  "typeString": "IconProps"
                }
              },
              {
                "key": "loading",
                "type": "boolean",
                "optional": true
              },
              {
                "key": "onClick",
                "type": "MouseEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "MouseEventHandler"
                }
              },
              {
                "key": "size",
                "type": "SizeType",
                "optional": true,
                "typeDefinition": {
                  "typeString": "SizeType"
                }
              },
              {
                "key": "target",
                "type": "HTMLAttributeAnchorTarget",
                "optional": true,
                "typeDefinition": {
                  "typeString": "HTMLAttributeAnchorTarget"
                }
              },
              {
                "key": "theme",
                "type": "'desktop' | 'mobile'",
                "optional": true,
                "typeDefinition": {
                  "typeString": "desktop | mobile",
                  "props": [
                    {
                      "key": "desktop",
                      "type": "string"
                    },
                    {
                      "key": "mobile",
                      "type": "string"
                    }
                  ]
                }
              },
              {
                "key": "type",
                "type": "'link' | 'text' | 'dashed' | 'filled' | 'outlined-primary' | 'outlined-secondary'",
                "optional": true,
                "typeDefinition": {
                  "typeString": "link | text | dashed | filled | outlined-primary | outlined-secondary",
                  "props": [
                    {
                      "key": "link",
                      "type": "string"
                    },
                    {
                      "key": "text",
                      "type": "string"
                    },
                    {
                      "key": "dashed",
                      "type": "string"
                    },
                    {
                      "key": "filled",
                      "type": "string"
                    },
                    {
                      "key": "outlined-primary",
                      "type": "string"
                    },
                    {
                      "key": "outlined-secondary",
                      "type": "string"
                    }
                  ]
                }
              }
            ]
          }
        },
        "cancelText": {
          "type": "string",
          "description": "The text label that will be displayed inside the cancel button in the modal footer.",
          "optional": true
        },
        "children": {
          "type": "Element",
          "optional": true,
          "description": "The main content that will be rendered inside the modal body section.",
          "typeDefinition": {
            "typeString": "Element"
          }
        },
        "className": {
          "type": "string",
          "description": "A custom CSS class name that will be applied to style the modal container element.",
          "optional": true
        },
        "footer": {
          "type": "ReactNode",
          "optional": true,
          "description": "Custom content that will replace the default footer section of the modal.",
          "typeDefinition": {
            "typeString": "ReactNode"
          }
        },
        "okButtonProps": {
          "type": "ButtonProps",
          "optional": true,
          "description": "Additional props that will be passed directly to customize the OK button behavior and appearance.",
          "typeDefinition": {
            "typeString": "{ block?: boolean, children?: string, className?: string, danger?: boolean, disabled?: boolean, href?: string, icon?: '' | 'wallet-add' | 'wallet' | 'activity-outline' | 'airplaine-outline' | 'alert-circle-outline' | 'alert-octagon-outline' | 'alert-triangle-outline' | 'align-center-outline' | 'align-justify-outline' | 'align-left-outline' | 'align-right-outline' | 'anchor-outline' | 'aperture-outline' | 'arrow-down-outline' | 'arrow-down-long-outline' | 'arrow-down-circle-outline' | 'arrow-down-left-outline' | 'arrow-down-right-outline' | 'arrow-left-circle-outline' | 'arrow-left-outline' | 'arrow-right-circle-outline' | 'arrow-right-outline' | 'arrow-up-circle-outline' | 'arrow-up-left-outline' | 'arrow-up-outline' | 'arrow-up-long-outline' | 'arrow-up-right-outline' | 'at-sign-outline' | 'award-outline' | 'bar-chart2outline' | 'bar-chart-outline' | 'battery-charging-outline' | 'battery-outline' | 'bell-off-outline' | 'bell-outline' | 'bluetooth-outline' | 'bnpl-outline' | 'bold-outline' | 'book-open-outline' | 'book-outline' | 'bookmark-outline' | 'box-outline' | 'briefcase-outline' | 'calendar-outline' | 'camera-off-outline' | 'camera-outline' | 'cash-loan-money-rp-outline' | 'cast-outline' | 'cat-outline' | 'chat-outline' | 'check-circle' | 'check-circle-outline' | 'check-outline' | 'check-square-outline' | 'chevron-down-outline' | 'chevron-left-outline' | 'chevron-right-outline' | 'chevron-up-outline' | 'chevrons-down-outline' | 'chevrons-left-outline' | 'chevrons-right-outline' | 'chevrons-up-outline' | 'chrome-outline' | 'circle-outline' | 'clipboard-outline' | 'clock-outline' | 'close-outline' | 'cloud-drizzle-outline' | 'cloud-lightning-outline' | 'cloud-off-outline' | 'cloud-outline' | 'cloud-rain-outline' | 'cloud-snow-outline' | 'code-outline' | 'codepen-outline' | 'codesandbox-outline' | 'coffee-outline' | 'columns-outline' | 'command-outline' | 'community-outline' | 'compass-outline' | 'copy-outline' | 'corner-down-left-outline' | 'corner-down-right-outline' | 'corner-left-down-outline' | 'corner-left-up-outline' | 'corner-right-down-outline' | 'corner-right-up-outline' | 'corner-up-left-outline' | 'corner-up-right-outline' | 'cpu-outline' | 'credit-card-outline' | 'crop-outline' | 'database-outline' | 'delete-outline' | 'disc-outline' | 'distributor-outline' | 'divide-circle-outline' | 'divide-outline' | 'divide-square-outline' | 'dollar-sign-outline' | 'dot' | 'download-cloud-outline' | 'download-outline' | 'dribbble-outline' | 'droplet-outline' | 'edc-outline' | 'edit2-outline' | 'edit3-outline' | 'edit-outline' | 'external-link-outline' | 'eye-off-outline' | 'eye-outline' | 'facebook-outline' | 'fast-forward-outline' | 'feather-outline' | 'figma-outline' | 'file-minus-outline' | 'file-outline' | 'file-plus-outline' | 'file-text-outline' | 'film-outline' | 'filter-outline' | 'flag-outline' | 'folder-minus-outline' | 'folder-outline' | 'folder-plus-outline' | 'framer-outline' | 'frown-outline' | 'gift-outline' | 'git-branch-outline' | 'git-commit-outline' | 'git-merge-outline' | 'git-pull-request-outline' | 'gitlab-outline' | 'grid-outline' | 'hand-card-outline' | 'hard-drive-outline' | 'hash-outline' | 'headphones-outline' | 'heart-outline' | 'help-circle-outline' | 'hexagon-outline' | 'home-outline' | 'image-outline' | 'inbox-outline' | 'info-circle' | 'info-outline' | 'info-triangle' | 'instagram-outline' | 'incomplete-loan-outline' | 'italic-outline' | 'key-outline' | 'layers-outline' | 'layout-outline' | 'life-buoy-outline' | 'link2-outline' | 'link-outline' | 'linkedin-outline' | 'list-outline' | 'loader-outline' | 'location-outline' | 'lock-outline' | 'log-in-outline' | 'log-out-outline' | 'mail-outline' | 'map-outline' | 'map-pin-outline' | 'maximize2-outline' | 'maximize-outline' | 'meh-outline' | 'menu-outline' | 'merchant-outline' | 'message-circle-outline' | 'message-square-outline' | 'mic-off-outline' | 'mic-outline' | 'minimize2-outline' | 'minimize-outline' | 'minus-circle-outline' | 'minus-outline' | 'minus-square-outline' | 'money-in-outline' | 'monitor-outline' | 'moon-outline' | 'more-horizontal-outline' | 'more-vertical-outline' | 'mouse-pointer-outline' | 'move-outline' | 'music-outline' | 'navigation2-outline' | 'navigation-outline' | 'octagon-outline' | 'package-outline' | 'paper-scroll' | 'paperclip-outline' | 'partnership-outline' | 'pause-circle-outline' | 'pause-outline' | 'pen-tool-outline' | 'percent-outline' | 'phone-call-outline' | 'phone-forwarded-outline' | 'phone-incoming-outline' | 'phone-missed-outline' | 'phone-off-outline' | 'phone-outgoing-outline' | 'phone-outline' | 'pie-chart-outline' | 'play-circle-outline' | 'play-outline' | 'plus-circle-outline' | 'plus-outline' | 'plus-square-outline' | 'pocket-outline' | 'power-outline' | 'printer-outline' | 'radio-outline' | 'receipt-outline' | 'refresh-ccw-outline' | 'refresh-cw-outline' | 'refund-money-rp-outline' | 'repeat-outline' | 'rewind-outline' | 'rotate-ccw-outline' | 'rotate-cw-outline' | 'save-outline' | 'scanner-outline' | 'scissors-outline' | 'search-outline' | 'send-outline' | 'send-money-rp' | 'server-outline' | 'settings-outline' | 'share2-outline' | 'share-outline' | 'shield-off-outline' | 'shield-outline' | 'shopping-bag-outline' | 'shopping-cart-outline' | 'shuffle-outline' | 'sidebar-outline' | 'skip-back-outline' | 'skip-forward-outline' | 'slack-outline' | 'slash-outline' | 'sliders-outline' | 'smartphone-outline' | 'smile-outline' | 'speaker-outline' | 'square-outline' | 'star-outline' | 'stop-circle-outline' | 'sun-outline' | 'sunrise-outline' | 'sunset-outline' | 'supplier-outline' | 'tablet-outline' | 'tag-outline' | 'target1-outline' | 'target-outline' | 'terminal-outline' | 'thermometer-outline' | 'thumbs-down-outline' | 'thumbs-up-outline' | 'toggle-left-outline' | 'toggle-right-outline' | 'tool-outline' | 'trash2-outline' | 'trash-outline' | 'trello-outline' | 'trending-down-outline' | 'trending-up-outline' | 'triangle-outline' | 'truck-outline' | 'tv-outline' | 'twitch-outline' | 'twitter-outline' | 'type-outline' | 'umbrella-outline' | 'underline-outline' | 'unlock-outline' | 'upload-cloud-outline' | 'upload-outline' | 'user-check-outline' | 'user-minus-outline' | 'user-outline' | 'user-plus-outline' | 'user-xoutline' | 'users-outline' | 'video-of-outline' | 'video-outline' | 'voicemail-outline' | 'volume1-outline' | 'volume2-outline' | 'volume-outline' | 'volume-xoutline' | 'watch-outline' | 'web-outline' | 'wifi1-outline' | 'wifi-off-outline' | 'wifi-outline' | 'wind-outline' | 'xcircle-outline' | 'xoctagon-outline' | 'xsquare-outline' | 'youtube-outline' | 'zap-off-outline' | 'zap-outline' | 'zoom-in-outline' | 'zoom-out-outline', iconProps?: IconProps, loading?: boolean, onClick?: MouseEventHandler, size?: SizeType, target?: HTMLAttributeAnchorTarget, theme?: 'desktop' | 'mobile', type?: 'link' | 'text' | 'dashed' | 'filled' | 'outlined-primary' | 'outlined-secondary' }",
            "props": [
              {
                "key": "block",
                "type": "boolean",
                "optional": true
              },
              {
                "key": "children",
                "type": "string",
                "optional": true
              },
              {
                "key": "className",
                "type": "string",
                "optional": true
              },
              {
                "key": "danger",
                "type": "boolean",
                "optional": true
              },
              {
                "key": "disabled",
                "type": "boolean",
                "optional": true
              },
              {
                "key": "href",
                "type": "string",
                "optional": true
              },
              {
                "key": "icon",
                "type": "'' | 'wallet-add' | 'wallet' | 'activity-outline' | 'airplaine-outline' | 'alert-circle-outline' | 'alert-octagon-outline' | 'alert-triangle-outline' | 'align-center-outline' | 'align-justify-outline' | 'align-left-outline' | 'align-right-outline' | 'anchor-outline' | 'aperture-outline' | 'arrow-down-outline' | 'arrow-down-long-outline' | 'arrow-down-circle-outline' | 'arrow-down-left-outline' | 'arrow-down-right-outline' | 'arrow-left-circle-outline' | 'arrow-left-outline' | 'arrow-right-circle-outline' | 'arrow-right-outline' | 'arrow-up-circle-outline' | 'arrow-up-left-outline' | 'arrow-up-outline' | 'arrow-up-long-outline' | 'arrow-up-right-outline' | 'at-sign-outline' | 'award-outline' | 'bar-chart2outline' | 'bar-chart-outline' | 'battery-charging-outline' | 'battery-outline' | 'bell-off-outline' | 'bell-outline' | 'bluetooth-outline' | 'bnpl-outline' | 'bold-outline' | 'book-open-outline' | 'book-outline' | 'bookmark-outline' | 'box-outline' | 'briefcase-outline' | 'calendar-outline' | 'camera-off-outline' | 'camera-outline' | 'cash-loan-money-rp-outline' | 'cast-outline' | 'cat-outline' | 'chat-outline' | 'check-circle' | 'check-circle-outline' | 'check-outline' | 'check-square-outline' | 'chevron-down-outline' | 'chevron-left-outline' | 'chevron-right-outline' | 'chevron-up-outline' | 'chevrons-down-outline' | 'chevrons-left-outline' | 'chevrons-right-outline' | 'chevrons-up-outline' | 'chrome-outline' | 'circle-outline' | 'clipboard-outline' | 'clock-outline' | 'close-outline' | 'cloud-drizzle-outline' | 'cloud-lightning-outline' | 'cloud-off-outline' | 'cloud-outline' | 'cloud-rain-outline' | 'cloud-snow-outline' | 'code-outline' | 'codepen-outline' | 'codesandbox-outline' | 'coffee-outline' | 'columns-outline' | 'command-outline' | 'community-outline' | 'compass-outline' | 'copy-outline' | 'corner-down-left-outline' | 'corner-down-right-outline' | 'corner-left-down-outline' | 'corner-left-up-outline' | 'corner-right-down-outline' | 'corner-right-up-outline' | 'corner-up-left-outline' | 'corner-up-right-outline' | 'cpu-outline' | 'credit-card-outline' | 'crop-outline' | 'database-outline' | 'delete-outline' | 'disc-outline' | 'distributor-outline' | 'divide-circle-outline' | 'divide-outline' | 'divide-square-outline' | 'dollar-sign-outline' | 'dot' | 'download-cloud-outline' | 'download-outline' | 'dribbble-outline' | 'droplet-outline' | 'edc-outline' | 'edit2-outline' | 'edit3-outline' | 'edit-outline' | 'external-link-outline' | 'eye-off-outline' | 'eye-outline' | 'facebook-outline' | 'fast-forward-outline' | 'feather-outline' | 'figma-outline' | 'file-minus-outline' | 'file-outline' | 'file-plus-outline' | 'file-text-outline' | 'film-outline' | 'filter-outline' | 'flag-outline' | 'folder-minus-outline' | 'folder-outline' | 'folder-plus-outline' | 'framer-outline' | 'frown-outline' | 'gift-outline' | 'git-branch-outline' | 'git-commit-outline' | 'git-merge-outline' | 'git-pull-request-outline' | 'gitlab-outline' | 'grid-outline' | 'hand-card-outline' | 'hard-drive-outline' | 'hash-outline' | 'headphones-outline' | 'heart-outline' | 'help-circle-outline' | 'hexagon-outline' | 'home-outline' | 'image-outline' | 'inbox-outline' | 'info-circle' | 'info-outline' | 'info-triangle' | 'instagram-outline' | 'incomplete-loan-outline' | 'italic-outline' | 'key-outline' | 'layers-outline' | 'layout-outline' | 'life-buoy-outline' | 'link2-outline' | 'link-outline' | 'linkedin-outline' | 'list-outline' | 'loader-outline' | 'location-outline' | 'lock-outline' | 'log-in-outline' | 'log-out-outline' | 'mail-outline' | 'map-outline' | 'map-pin-outline' | 'maximize2-outline' | 'maximize-outline' | 'meh-outline' | 'menu-outline' | 'merchant-outline' | 'message-circle-outline' | 'message-square-outline' | 'mic-off-outline' | 'mic-outline' | 'minimize2-outline' | 'minimize-outline' | 'minus-circle-outline' | 'minus-outline' | 'minus-square-outline' | 'money-in-outline' | 'monitor-outline' | 'moon-outline' | 'more-horizontal-outline' | 'more-vertical-outline' | 'mouse-pointer-outline' | 'move-outline' | 'music-outline' | 'navigation2-outline' | 'navigation-outline' | 'octagon-outline' | 'package-outline' | 'paper-scroll' | 'paperclip-outline' | 'partnership-outline' | 'pause-circle-outline' | 'pause-outline' | 'pen-tool-outline' | 'percent-outline' | 'phone-call-outline' | 'phone-forwarded-outline' | 'phone-incoming-outline' | 'phone-missed-outline' | 'phone-off-outline' | 'phone-outgoing-outline' | 'phone-outline' | 'pie-chart-outline' | 'play-circle-outline' | 'play-outline' | 'plus-circle-outline' | 'plus-outline' | 'plus-square-outline' | 'pocket-outline' | 'power-outline' | 'printer-outline' | 'radio-outline' | 'receipt-outline' | 'refresh-ccw-outline' | 'refresh-cw-outline' | 'refund-money-rp-outline' | 'repeat-outline' | 'rewind-outline' | 'rotate-ccw-outline' | 'rotate-cw-outline' | 'save-outline' | 'scanner-outline' | 'scissors-outline' | 'search-outline' | 'send-outline' | 'send-money-rp' | 'server-outline' | 'settings-outline' | 'share2-outline' | 'share-outline' | 'shield-off-outline' | 'shield-outline' | 'shopping-bag-outline' | 'shopping-cart-outline' | 'shuffle-outline' | 'sidebar-outline' | 'skip-back-outline' | 'skip-forward-outline' | 'slack-outline' | 'slash-outline' | 'sliders-outline' | 'smartphone-outline' | 'smile-outline' | 'speaker-outline' | 'square-outline' | 'star-outline' | 'stop-circle-outline' | 'sun-outline' | 'sunrise-outline' | 'sunset-outline' | 'supplier-outline' | 'tablet-outline' | 'tag-outline' | 'target1-outline' | 'target-outline' | 'terminal-outline' | 'thermometer-outline' | 'thumbs-down-outline' | 'thumbs-up-outline' | 'toggle-left-outline' | 'toggle-right-outline' | 'tool-outline' | 'trash2-outline' | 'trash-outline' | 'trello-outline' | 'trending-down-outline' | 'trending-up-outline' | 'triangle-outline' | 'truck-outline' | 'tv-outline' | 'twitch-outline' | 'twitter-outline' | 'type-outline' | 'umbrella-outline' | 'underline-outline' | 'unlock-outline' | 'upload-cloud-outline' | 'upload-outline' | 'user-check-outline' | 'user-minus-outline' | 'user-outline' | 'user-plus-outline' | 'user-xoutline' | 'users-outline' | 'video-of-outline' | 'video-outline' | 'voicemail-outline' | 'volume1-outline' | 'volume2-outline' | 'volume-outline' | 'volume-xoutline' | 'watch-outline' | 'web-outline' | 'wifi1-outline' | 'wifi-off-outline' | 'wifi-outline' | 'wind-outline' | 'xcircle-outline' | 'xoctagon-outline' | 'xsquare-outline' | 'youtube-outline' | 'zap-off-outline' | 'zap-outline' | 'zoom-in-outline' | 'zoom-out-outline'",
                "optional": true,
                "typeDefinition": {
                  "typeString": " | wallet-add | wallet | activity-outline | airplaine-outline | alert-circle-outline | alert-octagon-outline | alert-triangle-outline | align-center-outline | align-justify-outline | align-left-outline | align-right-outline | anchor-outline | aperture-outline | arrow-down-outline | arrow-down-long-outline | arrow-down-circle-outline | arrow-down-left-outline | arrow-down-right-outline | arrow-left-circle-outline | arrow-left-outline | arrow-right-circle-outline | arrow-right-outline | arrow-up-circle-outline | arrow-up-left-outline | arrow-up-outline | arrow-up-long-outline | arrow-up-right-outline | at-sign-outline | award-outline | bar-chart2outline | bar-chart-outline | battery-charging-outline | battery-outline | bell-off-outline | bell-outline | bluetooth-outline | bnpl-outline | bold-outline | book-open-outline | book-outline | bookmark-outline | box-outline | briefcase-outline | calendar-outline | camera-off-outline | camera-outline | cash-loan-money-rp-outline | cast-outline | cat-outline | chat-outline | check-circle | check-circle-outline | check-outline | check-square-outline | chevron-down-outline | chevron-left-outline | chevron-right-outline | chevron-up-outline | chevrons-down-outline | chevrons-left-outline | chevrons-right-outline | chevrons-up-outline | chrome-outline | circle-outline | clipboard-outline | clock-outline | close-outline | cloud-drizzle-outline | cloud-lightning-outline | cloud-off-outline | cloud-outline | cloud-rain-outline | cloud-snow-outline | code-outline | codepen-outline | codesandbox-outline | coffee-outline | columns-outline | command-outline | community-outline | compass-outline | copy-outline | corner-down-left-outline | corner-down-right-outline | corner-left-down-outline | corner-left-up-outline | corner-right-down-outline | corner-right-up-outline | corner-up-left-outline | corner-up-right-outline | cpu-outline | credit-card-outline | crop-outline | database-outline | delete-outline | disc-outline | distributor-outline | divide-circle-outline | divide-outline | divide-square-outline | dollar-sign-outline | dot | download-cloud-outline | download-outline | dribbble-outline | droplet-outline | edc-outline | edit2-outline | edit3-outline | edit-outline | external-link-outline | eye-off-outline | eye-outline | facebook-outline | fast-forward-outline | feather-outline | figma-outline | file-minus-outline | file-outline | file-plus-outline | file-text-outline | film-outline | filter-outline | flag-outline | folder-minus-outline | folder-outline | folder-plus-outline | framer-outline | frown-outline | gift-outline | git-branch-outline | git-commit-outline | git-merge-outline | git-pull-request-outline | gitlab-outline | grid-outline | hand-card-outline | hard-drive-outline | hash-outline | headphones-outline | heart-outline | help-circle-outline | hexagon-outline | home-outline | image-outline | inbox-outline | info-circle | info-outline | info-triangle | instagram-outline | incomplete-loan-outline | italic-outline | key-outline | layers-outline | layout-outline | life-buoy-outline | link2-outline | link-outline | linkedin-outline | list-outline | loader-outline | location-outline | lock-outline | log-in-outline | log-out-outline | mail-outline | map-outline | map-pin-outline | maximize2-outline | maximize-outline | meh-outline | menu-outline | merchant-outline | message-circle-outline | message-square-outline | mic-off-outline | mic-outline | minimize2-outline | minimize-outline | minus-circle-outline | minus-outline | minus-square-outline | money-in-outline | monitor-outline | moon-outline | more-horizontal-outline | more-vertical-outline | mouse-pointer-outline | move-outline | music-outline | navigation2-outline | navigation-outline | octagon-outline | package-outline | paper-scroll | paperclip-outline | partnership-outline | pause-circle-outline | pause-outline | pen-tool-outline | percent-outline | phone-call-outline | phone-forwarded-outline | phone-incoming-outline | phone-missed-outline | phone-off-outline | phone-outgoing-outline | phone-outline | pie-chart-outline | play-circle-outline | play-outline | plus-circle-outline | plus-outline | plus-square-outline | pocket-outline | power-outline | printer-outline | radio-outline | receipt-outline | refresh-ccw-outline | refresh-cw-outline | refund-money-rp-outline | repeat-outline | rewind-outline | rotate-ccw-outline | rotate-cw-outline | save-outline | scanner-outline | scissors-outline | search-outline | send-outline | send-money-rp | server-outline | settings-outline | share2-outline | share-outline | shield-off-outline | shield-outline | shopping-bag-outline | shopping-cart-outline | shuffle-outline | sidebar-outline | skip-back-outline | skip-forward-outline | slack-outline | slash-outline | sliders-outline | smartphone-outline | smile-outline | speaker-outline | square-outline | star-outline | stop-circle-outline | sun-outline | sunrise-outline | sunset-outline | supplier-outline | tablet-outline | tag-outline | target1-outline | target-outline | terminal-outline | thermometer-outline | thumbs-down-outline | thumbs-up-outline | toggle-left-outline | toggle-right-outline | tool-outline | trash2-outline | trash-outline | trello-outline | trending-down-outline | trending-up-outline | triangle-outline | truck-outline | tv-outline | twitch-outline | twitter-outline | type-outline | umbrella-outline | underline-outline | unlock-outline | upload-cloud-outline | upload-outline | user-check-outline | user-minus-outline | user-outline | user-plus-outline | user-xoutline | users-outline | video-of-outline | video-outline | voicemail-outline | volume1-outline | volume2-outline | volume-outline | volume-xoutline | watch-outline | web-outline | wifi1-outline | wifi-off-outline | wifi-outline | wind-outline | xcircle-outline | xoctagon-outline | xsquare-outline | youtube-outline | zap-off-outline | zap-outline | zoom-in-outline | zoom-out-outline",
                  "props": [
                    {
                      "key": "",
                      "type": "string"
                    },
                    {
                      "key": "wallet-add",
                      "type": "string"
                    },
                    {
                      "key": "wallet",
                      "type": "string"
                    },
                    {
                      "key": "activity-outline",
                      "type": "string"
                    },
                    {
                      "key": "airplaine-outline",
                      "type": "string"
                    },
                    {
                      "key": "alert-circle-outline",
                      "type": "string"
                    },
                    {
                      "key": "alert-octagon-outline",
                      "type": "string"
                    },
                    {
                      "key": "alert-triangle-outline",
                      "type": "string"
                    },
                    {
                      "key": "align-center-outline",
                      "type": "string"
                    },
                    {
                      "key": "align-justify-outline",
                      "type": "string"
                    },
                    {
                      "key": "align-left-outline",
                      "type": "string"
                    },
                    {
                      "key": "align-right-outline",
                      "type": "string"
                    },
                    {
                      "key": "anchor-outline",
                      "type": "string"
                    },
                    {
                      "key": "aperture-outline",
                      "type": "string"
                    },
                    {
                      "key": "arrow-down-outline",
                      "type": "string"
                    },
                    {
                      "key": "arrow-down-long-outline",
                      "type": "string"
                    },
                    {
                      "key": "arrow-down-circle-outline",
                      "type": "string"
                    },
                    {
                      "key": "arrow-down-left-outline",
                      "type": "string"
                    },
                    {
                      "key": "arrow-down-right-outline",
                      "type": "string"
                    },
                    {
                      "key": "arrow-left-circle-outline",
                      "type": "string"
                    },
                    {
                      "key": "arrow-left-outline",
                      "type": "string"
                    },
                    {
                      "key": "arrow-right-circle-outline",
                      "type": "string"
                    },
                    {
                      "key": "arrow-right-outline",
                      "type": "string"
                    },
                    {
                      "key": "arrow-up-circle-outline",
                      "type": "string"
                    },
                    {
                      "key": "arrow-up-left-outline",
                      "type": "string"
                    },
                    {
                      "key": "arrow-up-outline",
                      "type": "string"
                    },
                    {
                      "key": "arrow-up-long-outline",
                      "type": "string"
                    },
                    {
                      "key": "arrow-up-right-outline",
                      "type": "string"
                    },
                    {
                      "key": "at-sign-outline",
                      "type": "string"
                    },
                    {
                      "key": "award-outline",
                      "type": "string"
                    },
                    {
                      "key": "bar-chart2outline",
                      "type": "string"
                    },
                    {
                      "key": "bar-chart-outline",
                      "type": "string"
                    },
                    {
                      "key": "battery-charging-outline",
                      "type": "string"
                    },
                    {
                      "key": "battery-outline",
                      "type": "string"
                    },
                    {
                      "key": "bell-off-outline",
                      "type": "string"
                    },
                    {
                      "key": "bell-outline",
                      "type": "string"
                    },
                    {
                      "key": "bluetooth-outline",
                      "type": "string"
                    },
                    {
                      "key": "bnpl-outline",
                      "type": "string"
                    },
                    {
                      "key": "bold-outline",
                      "type": "string"
                    },
                    {
                      "key": "book-open-outline",
                      "type": "string"
                    },
                    {
                      "key": "book-outline",
                      "type": "string"
                    },
                    {
                      "key": "bookmark-outline",
                      "type": "string"
                    },
                    {
                      "key": "box-outline",
                      "type": "string"
                    },
                    {
                      "key": "briefcase-outline",
                      "type": "string"
                    },
                    {
                      "key": "calendar-outline",
                      "type": "string"
                    },
                    {
                      "key": "camera-off-outline",
                      "type": "string"
                    },
                    {
                      "key": "camera-outline",
                      "type": "string"
                    },
                    {
                      "key": "cash-loan-money-rp-outline",
                      "type": "string"
                    },
                    {
                      "key": "cast-outline",
                      "type": "string"
                    },
                    {
                      "key": "cat-outline",
                      "type": "string"
                    },
                    {
                      "key": "chat-outline",
                      "type": "string"
                    },
                    {
                      "key": "check-circle",
                      "type": "string"
                    },
                    {
                      "key": "check-circle-outline",
                      "type": "string"
                    },
                    {
                      "key": "check-outline",
                      "type": "string"
                    },
                    {
                      "key": "check-square-outline",
                      "type": "string"
                    },
                    {
                      "key": "chevron-down-outline",
                      "type": "string"
                    },
                    {
                      "key": "chevron-left-outline",
                      "type": "string"
                    },
                    {
                      "key": "chevron-right-outline",
                      "type": "string"
                    },
                    {
                      "key": "chevron-up-outline",
                      "type": "string"
                    },
                    {
                      "key": "chevrons-down-outline",
                      "type": "string"
                    },
                    {
                      "key": "chevrons-left-outline",
                      "type": "string"
                    },
                    {
                      "key": "chevrons-right-outline",
                      "type": "string"
                    },
                    {
                      "key": "chevrons-up-outline",
                      "type": "string"
                    },
                    {
                      "key": "chrome-outline",
                      "type": "string"
                    },
                    {
                      "key": "circle-outline",
                      "type": "string"
                    },
                    {
                      "key": "clipboard-outline",
                      "type": "string"
                    },
                    {
                      "key": "clock-outline",
                      "type": "string"
                    },
                    {
                      "key": "close-outline",
                      "type": "string"
                    },
                    {
                      "key": "cloud-drizzle-outline",
                      "type": "string"
                    },
                    {
                      "key": "cloud-lightning-outline",
                      "type": "string"
                    },
                    {
                      "key": "cloud-off-outline",
                      "type": "string"
                    },
                    {
                      "key": "cloud-outline",
                      "type": "string"
                    },
                    {
                      "key": "cloud-rain-outline",
                      "type": "string"
                    },
                    {
                      "key": "cloud-snow-outline",
                      "type": "string"
                    },
                    {
                      "key": "code-outline",
                      "type": "string"
                    },
                    {
                      "key": "codepen-outline",
                      "type": "string"
                    },
                    {
                      "key": "codesandbox-outline",
                      "type": "string"
                    },
                    {
                      "key": "coffee-outline",
                      "type": "string"
                    },
                    {
                      "key": "columns-outline",
                      "type": "string"
                    },
                    {
                      "key": "command-outline",
                      "type": "string"
                    },
                    {
                      "key": "community-outline",
                      "type": "string"
                    },
                    {
                      "key": "compass-outline",
                      "type": "string"
                    },
                    {
                      "key": "copy-outline",
                      "type": "string"
                    },
                    {
                      "key": "corner-down-left-outline",
                      "type": "string"
                    },
                    {
                      "key": "corner-down-right-outline",
                      "type": "string"
                    },
                    {
                      "key": "corner-left-down-outline",
                      "type": "string"
                    },
                    {
                      "key": "corner-left-up-outline",
                      "type": "string"
                    },
                    {
                      "key": "corner-right-down-outline",
                      "type": "string"
                    },
                    {
                      "key": "corner-right-up-outline",
                      "type": "string"
                    },
                    {
                      "key": "corner-up-left-outline",
                      "type": "string"
                    },
                    {
                      "key": "corner-up-right-outline",
                      "type": "string"
                    },
                    {
                      "key": "cpu-outline",
                      "type": "string"
                    },
                    {
                      "key": "credit-card-outline",
                      "type": "string"
                    },
                    {
                      "key": "crop-outline",
                      "type": "string"
                    },
                    {
                      "key": "database-outline",
                      "type": "string"
                    },
                    {
                      "key": "delete-outline",
                      "type": "string"
                    },
                    {
                      "key": "disc-outline",
                      "type": "string"
                    },
                    {
                      "key": "distributor-outline",
                      "type": "string"
                    },
                    {
                      "key": "divide-circle-outline",
                      "type": "string"
                    },
                    {
                      "key": "divide-outline",
                      "type": "string"
                    },
                    {
                      "key": "divide-square-outline",
                      "type": "string"
                    },
                    {
                      "key": "dollar-sign-outline",
                      "type": "string"
                    },
                    {
                      "key": "dot",
                      "type": "string"
                    },
                    {
                      "key": "download-cloud-outline",
                      "type": "string"
                    },
                    {
                      "key": "download-outline",
                      "type": "string"
                    },
                    {
                      "key": "dribbble-outline",
                      "type": "string"
                    },
                    {
                      "key": "droplet-outline",
                      "type": "string"
                    },
                    {
                      "key": "edc-outline",
                      "type": "string"
                    },
                    {
                      "key": "edit2-outline",
                      "type": "string"
                    },
                    {
                      "key": "edit3-outline",
                      "type": "string"
                    },
                    {
                      "key": "edit-outline",
                      "type": "string"
                    },
                    {
                      "key": "external-link-outline",
                      "type": "string"
                    },
                    {
                      "key": "eye-off-outline",
                      "type": "string"
                    },
                    {
                      "key": "eye-outline",
                      "type": "string"
                    },
                    {
                      "key": "facebook-outline",
                      "type": "string"
                    },
                    {
                      "key": "fast-forward-outline",
                      "type": "string"
                    },
                    {
                      "key": "feather-outline",
                      "type": "string"
                    },
                    {
                      "key": "figma-outline",
                      "type": "string"
                    },
                    {
                      "key": "file-minus-outline",
                      "type": "string"
                    },
                    {
                      "key": "file-outline",
                      "type": "string"
                    },
                    {
                      "key": "file-plus-outline",
                      "type": "string"
                    },
                    {
                      "key": "file-text-outline",
                      "type": "string"
                    },
                    {
                      "key": "film-outline",
                      "type": "string"
                    },
                    {
                      "key": "filter-outline",
                      "type": "string"
                    },
                    {
                      "key": "flag-outline",
                      "type": "string"
                    },
                    {
                      "key": "folder-minus-outline",
                      "type": "string"
                    },
                    {
                      "key": "folder-outline",
                      "type": "string"
                    },
                    {
                      "key": "folder-plus-outline",
                      "type": "string"
                    },
                    {
                      "key": "framer-outline",
                      "type": "string"
                    },
                    {
                      "key": "frown-outline",
                      "type": "string"
                    },
                    {
                      "key": "gift-outline",
                      "type": "string"
                    },
                    {
                      "key": "git-branch-outline",
                      "type": "string"
                    },
                    {
                      "key": "git-commit-outline",
                      "type": "string"
                    },
                    {
                      "key": "git-merge-outline",
                      "type": "string"
                    },
                    {
                      "key": "git-pull-request-outline",
                      "type": "string"
                    },
                    {
                      "key": "gitlab-outline",
                      "type": "string"
                    },
                    {
                      "key": "grid-outline",
                      "type": "string"
                    },
                    {
                      "key": "hand-card-outline",
                      "type": "string"
                    },
                    {
                      "key": "hard-drive-outline",
                      "type": "string"
                    },
                    {
                      "key": "hash-outline",
                      "type": "string"
                    },
                    {
                      "key": "headphones-outline",
                      "type": "string"
                    },
                    {
                      "key": "heart-outline",
                      "type": "string"
                    },
                    {
                      "key": "help-circle-outline",
                      "type": "string"
                    },
                    {
                      "key": "hexagon-outline",
                      "type": "string"
                    },
                    {
                      "key": "home-outline",
                      "type": "string"
                    },
                    {
                      "key": "image-outline",
                      "type": "string"
                    },
                    {
                      "key": "inbox-outline",
                      "type": "string"
                    },
                    {
                      "key": "info-circle",
                      "type": "string"
                    },
                    {
                      "key": "info-outline",
                      "type": "string"
                    },
                    {
                      "key": "info-triangle",
                      "type": "string"
                    },
                    {
                      "key": "instagram-outline",
                      "type": "string"
                    },
                    {
                      "key": "incomplete-loan-outline",
                      "type": "string"
                    },
                    {
                      "key": "italic-outline",
                      "type": "string"
                    },
                    {
                      "key": "key-outline",
                      "type": "string"
                    },
                    {
                      "key": "layers-outline",
                      "type": "string"
                    },
                    {
                      "key": "layout-outline",
                      "type": "string"
                    },
                    {
                      "key": "life-buoy-outline",
                      "type": "string"
                    },
                    {
                      "key": "link2-outline",
                      "type": "string"
                    },
                    {
                      "key": "link-outline",
                      "type": "string"
                    },
                    {
                      "key": "linkedin-outline",
                      "type": "string"
                    },
                    {
                      "key": "list-outline",
                      "type": "string"
                    },
                    {
                      "key": "loader-outline",
                      "type": "string"
                    },
                    {
                      "key": "location-outline",
                      "type": "string"
                    },
                    {
                      "key": "lock-outline",
                      "type": "string"
                    },
                    {
                      "key": "log-in-outline",
                      "type": "string"
                    },
                    {
                      "key": "log-out-outline",
                      "type": "string"
                    },
                    {
                      "key": "mail-outline",
                      "type": "string"
                    },
                    {
                      "key": "map-outline",
                      "type": "string"
                    },
                    {
                      "key": "map-pin-outline",
                      "type": "string"
                    },
                    {
                      "key": "maximize2-outline",
                      "type": "string"
                    },
                    {
                      "key": "maximize-outline",
                      "type": "string"
                    },
                    {
                      "key": "meh-outline",
                      "type": "string"
                    },
                    {
                      "key": "menu-outline",
                      "type": "string"
                    },
                    {
                      "key": "merchant-outline",
                      "type": "string"
                    },
                    {
                      "key": "message-circle-outline",
                      "type": "string"
                    },
                    {
                      "key": "message-square-outline",
                      "type": "string"
                    },
                    {
                      "key": "mic-off-outline",
                      "type": "string"
                    },
                    {
                      "key": "mic-outline",
                      "type": "string"
                    },
                    {
                      "key": "minimize2-outline",
                      "type": "string"
                    },
                    {
                      "key": "minimize-outline",
                      "type": "string"
                    },
                    {
                      "key": "minus-circle-outline",
                      "type": "string"
                    },
                    {
                      "key": "minus-outline",
                      "type": "string"
                    },
                    {
                      "key": "minus-square-outline",
                      "type": "string"
                    },
                    {
                      "key": "money-in-outline",
                      "type": "string"
                    },
                    {
                      "key": "monitor-outline",
                      "type": "string"
                    },
                    {
                      "key": "moon-outline",
                      "type": "string"
                    },
                    {
                      "key": "more-horizontal-outline",
                      "type": "string"
                    },
                    {
                      "key": "more-vertical-outline",
                      "type": "string"
                    },
                    {
                      "key": "mouse-pointer-outline",
                      "type": "string"
                    },
                    {
                      "key": "move-outline",
                      "type": "string"
                    },
                    {
                      "key": "music-outline",
                      "type": "string"
                    },
                    {
                      "key": "navigation2-outline",
                      "type": "string"
                    },
                    {
                      "key": "navigation-outline",
                      "type": "string"
                    },
                    {
                      "key": "octagon-outline",
                      "type": "string"
                    },
                    {
                      "key": "package-outline",
                      "type": "string"
                    },
                    {
                      "key": "paper-scroll",
                      "type": "string"
                    },
                    {
                      "key": "paperclip-outline",
                      "type": "string"
                    },
                    {
                      "key": "partnership-outline",
                      "type": "string"
                    },
                    {
                      "key": "pause-circle-outline",
                      "type": "string"
                    },
                    {
                      "key": "pause-outline",
                      "type": "string"
                    },
                    {
                      "key": "pen-tool-outline",
                      "type": "string"
                    },
                    {
                      "key": "percent-outline",
                      "type": "string"
                    },
                    {
                      "key": "phone-call-outline",
                      "type": "string"
                    },
                    {
                      "key": "phone-forwarded-outline",
                      "type": "string"
                    },
                    {
                      "key": "phone-incoming-outline",
                      "type": "string"
                    },
                    {
                      "key": "phone-missed-outline",
                      "type": "string"
                    },
                    {
                      "key": "phone-off-outline",
                      "type": "string"
                    },
                    {
                      "key": "phone-outgoing-outline",
                      "type": "string"
                    },
                    {
                      "key": "phone-outline",
                      "type": "string"
                    },
                    {
                      "key": "pie-chart-outline",
                      "type": "string"
                    },
                    {
                      "key": "play-circle-outline",
                      "type": "string"
                    },
                    {
                      "key": "play-outline",
                      "type": "string"
                    },
                    {
                      "key": "plus-circle-outline",
                      "type": "string"
                    },
                    {
                      "key": "plus-outline",
                      "type": "string"
                    },
                    {
                      "key": "plus-square-outline",
                      "type": "string"
                    },
                    {
                      "key": "pocket-outline",
                      "type": "string"
                    },
                    {
                      "key": "power-outline",
                      "type": "string"
                    },
                    {
                      "key": "printer-outline",
                      "type": "string"
                    },
                    {
                      "key": "radio-outline",
                      "type": "string"
                    },
                    {
                      "key": "receipt-outline",
                      "type": "string"
                    },
                    {
                      "key": "refresh-ccw-outline",
                      "type": "string"
                    },
                    {
                      "key": "refresh-cw-outline",
                      "type": "string"
                    },
                    {
                      "key": "refund-money-rp-outline",
                      "type": "string"
                    },
                    {
                      "key": "repeat-outline",
                      "type": "string"
                    },
                    {
                      "key": "rewind-outline",
                      "type": "string"
                    },
                    {
                      "key": "rotate-ccw-outline",
                      "type": "string"
                    },
                    {
                      "key": "rotate-cw-outline",
                      "type": "string"
                    },
                    {
                      "key": "save-outline",
                      "type": "string"
                    },
                    {
                      "key": "scanner-outline",
                      "type": "string"
                    },
                    {
                      "key": "scissors-outline",
                      "type": "string"
                    },
                    {
                      "key": "search-outline",
                      "type": "string"
                    },
                    {
                      "key": "send-outline",
                      "type": "string"
                    },
                    {
                      "key": "send-money-rp",
                      "type": "string"
                    },
                    {
                      "key": "server-outline",
                      "type": "string"
                    },
                    {
                      "key": "settings-outline",
                      "type": "string"
                    },
                    {
                      "key": "share2-outline",
                      "type": "string"
                    },
                    {
                      "key": "share-outline",
                      "type": "string"
                    },
                    {
                      "key": "shield-off-outline",
                      "type": "string"
                    },
                    {
                      "key": "shield-outline",
                      "type": "string"
                    },
                    {
                      "key": "shopping-bag-outline",
                      "type": "string"
                    },
                    {
                      "key": "shopping-cart-outline",
                      "type": "string"
                    },
                    {
                      "key": "shuffle-outline",
                      "type": "string"
                    },
                    {
                      "key": "sidebar-outline",
                      "type": "string"
                    },
                    {
                      "key": "skip-back-outline",
                      "type": "string"
                    },
                    {
                      "key": "skip-forward-outline",
                      "type": "string"
                    },
                    {
                      "key": "slack-outline",
                      "type": "string"
                    },
                    {
                      "key": "slash-outline",
                      "type": "string"
                    },
                    {
                      "key": "sliders-outline",
                      "type": "string"
                    },
                    {
                      "key": "smartphone-outline",
                      "type": "string"
                    },
                    {
                      "key": "smile-outline",
                      "type": "string"
                    },
                    {
                      "key": "speaker-outline",
                      "type": "string"
                    },
                    {
                      "key": "square-outline",
                      "type": "string"
                    },
                    {
                      "key": "star-outline",
                      "type": "string"
                    },
                    {
                      "key": "stop-circle-outline",
                      "type": "string"
                    },
                    {
                      "key": "sun-outline",
                      "type": "string"
                    },
                    {
                      "key": "sunrise-outline",
                      "type": "string"
                    },
                    {
                      "key": "sunset-outline",
                      "type": "string"
                    },
                    {
                      "key": "supplier-outline",
                      "type": "string"
                    },
                    {
                      "key": "tablet-outline",
                      "type": "string"
                    },
                    {
                      "key": "tag-outline",
                      "type": "string"
                    },
                    {
                      "key": "target1-outline",
                      "type": "string"
                    },
                    {
                      "key": "target-outline",
                      "type": "string"
                    },
                    {
                      "key": "terminal-outline",
                      "type": "string"
                    },
                    {
                      "key": "thermometer-outline",
                      "type": "string"
                    },
                    {
                      "key": "thumbs-down-outline",
                      "type": "string"
                    },
                    {
                      "key": "thumbs-up-outline",
                      "type": "string"
                    },
                    {
                      "key": "toggle-left-outline",
                      "type": "string"
                    },
                    {
                      "key": "toggle-right-outline",
                      "type": "string"
                    },
                    {
                      "key": "tool-outline",
                      "type": "string"
                    },
                    {
                      "key": "trash2-outline",
                      "type": "string"
                    },
                    {
                      "key": "trash-outline",
                      "type": "string"
                    },
                    {
                      "key": "trello-outline",
                      "type": "string"
                    },
                    {
                      "key": "trending-down-outline",
                      "type": "string"
                    },
                    {
                      "key": "trending-up-outline",
                      "type": "string"
                    },
                    {
                      "key": "triangle-outline",
                      "type": "string"
                    },
                    {
                      "key": "truck-outline",
                      "type": "string"
                    },
                    {
                      "key": "tv-outline",
                      "type": "string"
                    },
                    {
                      "key": "twitch-outline",
                      "type": "string"
                    },
                    {
                      "key": "twitter-outline",
                      "type": "string"
                    },
                    {
                      "key": "type-outline",
                      "type": "string"
                    },
                    {
                      "key": "umbrella-outline",
                      "type": "string"
                    },
                    {
                      "key": "underline-outline",
                      "type": "string"
                    },
                    {
                      "key": "unlock-outline",
                      "type": "string"
                    },
                    {
                      "key": "upload-cloud-outline",
                      "type": "string"
                    },
                    {
                      "key": "upload-outline",
                      "type": "string"
                    },
                    {
                      "key": "user-check-outline",
                      "type": "string"
                    },
                    {
                      "key": "user-minus-outline",
                      "type": "string"
                    },
                    {
                      "key": "user-outline",
                      "type": "string"
                    },
                    {
                      "key": "user-plus-outline",
                      "type": "string"
                    },
                    {
                      "key": "user-xoutline",
                      "type": "string"
                    },
                    {
                      "key": "users-outline",
                      "type": "string"
                    },
                    {
                      "key": "video-of-outline",
                      "type": "string"
                    },
                    {
                      "key": "video-outline",
                      "type": "string"
                    },
                    {
                      "key": "voicemail-outline",
                      "type": "string"
                    },
                    {
                      "key": "volume1-outline",
                      "type": "string"
                    },
                    {
                      "key": "volume2-outline",
                      "type": "string"
                    },
                    {
                      "key": "volume-outline",
                      "type": "string"
                    },
                    {
                      "key": "volume-xoutline",
                      "type": "string"
                    },
                    {
                      "key": "watch-outline",
                      "type": "string"
                    },
                    {
                      "key": "web-outline",
                      "type": "string"
                    },
                    {
                      "key": "wifi1-outline",
                      "type": "string"
                    },
                    {
                      "key": "wifi-off-outline",
                      "type": "string"
                    },
                    {
                      "key": "wifi-outline",
                      "type": "string"
                    },
                    {
                      "key": "wind-outline",
                      "type": "string"
                    },
                    {
                      "key": "xcircle-outline",
                      "type": "string"
                    },
                    {
                      "key": "xoctagon-outline",
                      "type": "string"
                    },
                    {
                      "key": "xsquare-outline",
                      "type": "string"
                    },
                    {
                      "key": "youtube-outline",
                      "type": "string"
                    },
                    {
                      "key": "zap-off-outline",
                      "type": "string"
                    },
                    {
                      "key": "zap-outline",
                      "type": "string"
                    },
                    {
                      "key": "zoom-in-outline",
                      "type": "string"
                    },
                    {
                      "key": "zoom-out-outline",
                      "type": "string"
                    }
                  ]
                }
              },
              {
                "key": "iconProps",
                "type": "IconProps",
                "optional": true,
                "typeDefinition": {
                  "typeString": "IconProps"
                }
              },
              {
                "key": "loading",
                "type": "boolean",
                "optional": true
              },
              {
                "key": "onClick",
                "type": "MouseEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "MouseEventHandler"
                }
              },
              {
                "key": "size",
                "type": "SizeType",
                "optional": true,
                "typeDefinition": {
                  "typeString": "SizeType"
                }
              },
              {
                "key": "target",
                "type": "HTMLAttributeAnchorTarget",
                "optional": true,
                "typeDefinition": {
                  "typeString": "HTMLAttributeAnchorTarget"
                }
              },
              {
                "key": "theme",
                "type": "'desktop' | 'mobile'",
                "optional": true,
                "typeDefinition": {
                  "typeString": "desktop | mobile",
                  "props": [
                    {
                      "key": "desktop",
                      "type": "string"
                    },
                    {
                      "key": "mobile",
                      "type": "string"
                    }
                  ]
                }
              },
              {
                "key": "type",
                "type": "'link' | 'text' | 'dashed' | 'filled' | 'outlined-primary' | 'outlined-secondary'",
                "optional": true,
                "typeDefinition": {
                  "typeString": "link | text | dashed | filled | outlined-primary | outlined-secondary",
                  "props": [
                    {
                      "key": "link",
                      "type": "string"
                    },
                    {
                      "key": "text",
                      "type": "string"
                    },
                    {
                      "key": "dashed",
                      "type": "string"
                    },
                    {
                      "key": "filled",
                      "type": "string"
                    },
                    {
                      "key": "outlined-primary",
                      "type": "string"
                    },
                    {
                      "key": "outlined-secondary",
                      "type": "string"
                    }
                  ]
                }
              }
            ]
          }
        },
        "okText": {
          "type": "string",
          "description": "The text label that will be displayed inside the OK button in the modal footer.",
          "optional": true
        },
        "onCancel": {
          "type": "object",
          "optional": true,
          "description": "A callback function that will be triggered when the user clicks the cancel button in the modal footer.",
          "typeDefinition": {
            "typeString": "() => void",
            "isFunction": true,
            "props": [
              {
                "key": "void",
                "type": "intrinsic",
                "isReturn": true
              }
            ]
          }
        },
        "onCloseIcon": {
          "type": "object",
          "optional": true,
          "description": "A callback function that will be triggered when the user clicks the close icon in the modal header.",
          "typeDefinition": {
            "typeString": "() => void",
            "isFunction": true,
            "props": [
              {
                "key": "void",
                "type": "intrinsic",
                "isReturn": true
              }
            ]
          }
        },
        "onOk": {
          "type": "object",
          "optional": true,
          "description": "A callback function that will be triggered when the user clicks the OK button in the modal footer.",
          "typeDefinition": {
            "typeString": "() => void",
            "isFunction": true,
            "props": [
              {
                "key": "void",
                "type": "intrinsic",
                "isReturn": true
              }
            ]
          }
        },
        "open": {
          "type": "union",
          "description": "A boolean flag that controls whether the modal is currently visible or hidden on the screen.",
          "typeDefinition": {
            "typeString": "undefined | boolean",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "boolean",
                "type": "intrinsic"
              }
            ]
          }
        },
        "showCloseIcon": {
          "type": "boolean",
          "description": "A boolean flag that determines whether the close icon should be displayed in the modal header.",
          "optional": true
        },
        "showFooter": {
          "type": "boolean",
          "description": "A boolean flag that controls the visibility of the entire modal footer section.",
          "optional": true
        },
        "size": {
          "type": "union",
          "optional": true,
          "description": "A string value that sets the modal's width and height according to predefined size variants.",
          "typeDefinition": {
            "typeString": "sm | md | lg | xl",
            "props": [
              {
                "key": "sm",
                "type": "string"
              },
              {
                "key": "md",
                "type": "string"
              },
              {
                "key": "lg",
                "type": "string"
              },
              {
                "key": "xl",
                "type": "string"
              }
            ]
          }
        },
        "title": {
          "type": "string",
          "description": "The text that will be displayed as the heading in the modal's header section.",
          "optional": true
        },
        "withPadding": {
          "type": "boolean",
          "description": "A boolean flag that determines whether the modal content should have internal padding.",
          "optional": true
        },
        "wrapClassName": {
          "type": "string",
          "description": "A custom CSS class name that will be applied to style the modal's outer wrapper element.",
          "optional": true
        }
      },
      "componentTypeName": "ModalProps"
    },
    {
      "name": "Menu",
      "description": "The Menu component provides a structured navigation interface, allowing users to access various sections of an application or website. It features dropdown options, icons, and customizable styles, enhancing user experience and accessibility while maintaining a clean and organized layout. Ideal for both desktop and mobile platforms.",
      "props": {
        "about": {
          "type": "string",
          "optional": true
        },
        "accessKey": {
          "type": "string",
          "optional": true
        },
        "activeKey": {
          "type": "string",
          "optional": true
        },
        "autoCapitalize": {
          "type": "string",
          "optional": true
        },
        "autoCorrect": {
          "type": "string",
          "optional": true
        },
        "autoFocus": {
          "type": "boolean",
          "optional": true
        },
        "autoSave": {
          "type": "string",
          "optional": true
        },
        "builtinPlacements": {
          "type": "BuiltinPlacements",
          "optional": true,
          "typeDefinition": {
            "typeString": "BuiltinPlacements"
          }
        },
        "children": {
          "type": "ReactNode",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactNode"
          }
        },
        "className": {
          "type": "string",
          "optional": true
        },
        "color": {
          "type": "string",
          "optional": true
        },
        "content": {
          "type": "string",
          "optional": true
        },
        "contentEditable": {
          "type": "union",
          "optional": true,
          "typeDefinition": {
            "typeString": "inherit | Booleanish",
            "props": [
              {
                "key": "inherit",
                "type": "string"
              },
              {
                "key": "Booleanish",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "Booleanish"
                }
              }
            ]
          }
        },
        "contextMenu": {
          "type": "string",
          "optional": true
        },
        "dangerouslySetInnerHTML": {
          "type": "object",
          "optional": true,
          "typeDefinition": {
            "typeString": "{ __html: string | TrustedHTML }",
            "props": [
              {
                "key": "__html",
                "type": "string | TrustedHTML",
                "typeDefinition": {
                  "typeString": "string | TrustedHTML",
                  "props": [
                    {
                      "key": "string",
                      "type": "intrinsic"
                    },
                    {
                      "key": "TrustedHTML",
                      "type": "reference",
                      "typeDefinition": {
                        "typeString": "TrustedHTML"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        "datatype": {
          "type": "string",
          "optional": true
        },
        "defaultActiveFirst": {
          "type": "boolean",
          "optional": true
        },
        "defaultChecked": {
          "type": "boolean",
          "optional": true
        },
        "defaultMotions": {
          "type": "Partial",
          "optional": true,
          "description": "Default menu motion of each mode",
          "typeDefinition": {
            "typeString": "Partial"
          }
        },
        "defaultOpenKeys": {
          "type": "array",
          "optional": true,
          "description": "Array of keys for initially expanded submenu items",
          "typeDefinition": {
            "typeString": "string[]",
            "isArray": true,
            "props": [
              {
                "key": "string",
                "type": "intrinsic"
              }
            ]
          }
        },
        "defaultSelectedKeys": {
          "type": "array",
          "optional": true,
          "description": "Array of keys for initially selected menu items",
          "typeDefinition": {
            "typeString": "string[]",
            "isArray": true,
            "props": [
              {
                "key": "string",
                "type": "intrinsic"
              }
            ]
          }
        },
        "defaultValue": {
          "type": "union",
          "optional": true,
          "typeDefinition": {
            "typeString": "string | number | typeOperator",
            "props": [
              {
                "key": "string",
                "type": "intrinsic"
              },
              {
                "key": "number",
                "type": "intrinsic"
              },
              {
                "key": "typeOperator",
                "type": "typeOperator"
              }
            ]
          }
        },
        "direction": {
          "type": "union",
          "optional": true,
          "description": "direction of menu",
          "typeDefinition": {
            "typeString": "ltr | rtl",
            "props": [
              {
                "key": "ltr",
                "type": "string"
              },
              {
                "key": "rtl",
                "type": "string"
              }
            ]
          }
        },
        "disabled": {
          "type": "boolean",
          "optional": true
        },
        "draggable": {
          "type": "Booleanish",
          "optional": true,
          "typeDefinition": {
            "typeString": "Booleanish"
          }
        },
        "expandIcon": {
          "type": "RenderIconType",
          "optional": true,
          "description": "Custom expand icon component for submenu items",
          "typeDefinition": {
            "typeString": "RenderIconType"
          }
        },
        "forceSubMenuRender": {
          "type": "boolean",
          "description": "Forces rendering of submenu even when hidden",
          "optional": true
        },
        "getPopupContainer": {
          "type": "object",
          "optional": true,
          "typeDefinition": {
            "typeString": "(node: HTMLElement) => HTMLElement",
            "isFunction": true,
            "props": [
              {
                "key": "node",
                "type": "HTMLElement",
                "isParam": true,
                "optional": false,
                "typeDefinition": {
                  "typeString": "HTMLElement"
                }
              },
              {
                "key": "HTMLElement",
                "type": "reference",
                "isReturn": true,
                "typeDefinition": {
                  "typeString": "HTMLElement"
                }
              }
            ]
          }
        },
        "hidden": {
          "type": "boolean",
          "optional": true
        },
        "id": {
          "type": "string",
          "optional": true
        },
        "inlineCollapsed": {
          "type": "boolean",
          "description": "Collapses menu into icon-only mode when true",
          "optional": true
        },
        "inlineIndent": {
          "type": "number",
          "description": "Indentation width in pixels for each submenu level",
          "optional": true
        },
        "inlist": {
          "type": "any",
          "optional": true
        },
        "inputMode": {
          "type": "union",
          "optional": true,
          "description": "Hints at the type of data that might be entered by the user while editing the element or its contents",
          "typeDefinition": {
            "typeString": "text | search | none | email | tel | url | numeric | decimal",
            "props": [
              {
                "key": "text",
                "type": "string"
              },
              {
                "key": "search",
                "type": "string"
              },
              {
                "key": "none",
                "type": "string"
              },
              {
                "key": "email",
                "type": "string"
              },
              {
                "key": "tel",
                "type": "string"
              },
              {
                "key": "url",
                "type": "string"
              },
              {
                "key": "numeric",
                "type": "string"
              },
              {
                "key": "decimal",
                "type": "string"
              }
            ]
          }
        },
        "is": {
          "type": "string",
          "description": "Specify that a standard HTML element should behave like a defined custom built-in element",
          "optional": true
        },
        "itemIcon": {
          "type": "RenderIconType",
          "optional": true,
          "typeDefinition": {
            "typeString": "RenderIconType"
          }
        },
        "itemID": {
          "type": "string",
          "optional": true
        },
        "itemProp": {
          "type": "string",
          "optional": true
        },
        "itemRef": {
          "type": "string",
          "optional": true
        },
        "items": {
          "type": "array",
          "optional": true,
          "description": "Array of menu items configuration objects",
          "typeDefinition": {
            "typeString": "ItemType[]",
            "isArray": true,
            "props": [
              {
                "key": "ItemType",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "ItemType"
                }
              }
            ]
          }
        },
        "itemScope": {
          "type": "boolean",
          "optional": true
        },
        "itemType": {
          "type": "string",
          "optional": true
        },
        "lang": {
          "type": "string",
          "optional": true
        },
        "mode": {
          "type": "MenuMode",
          "optional": true,
          "description": "Display mode of menu - vertical, horizontal, or inline",
          "typeDefinition": {
            "typeString": "MenuMode"
          }
        },
        "motion": {
          "type": "CSSMotionProps",
          "optional": true,
          "description": "Menu motion define. Use ",
          "typeDefinition": {
            "typeString": "CSSMotionProps"
          }
        },
        "multiple": {
          "type": "boolean",
          "description": "Allows selection of multiple menu items",
          "optional": true
        },
        "nonce": {
          "type": "string",
          "optional": true
        },
        "onAbort": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onAbortCapture": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onAnimationEnd": {
          "type": "AnimationEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "AnimationEventHandler"
          }
        },
        "onAnimationEndCapture": {
          "type": "AnimationEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "AnimationEventHandler"
          }
        },
        "onAnimationIteration": {
          "type": "AnimationEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "AnimationEventHandler"
          }
        },
        "onAnimationIterationCapture": {
          "type": "AnimationEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "AnimationEventHandler"
          }
        },
        "onAnimationStart": {
          "type": "AnimationEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "AnimationEventHandler"
          }
        },
        "onAnimationStartCapture": {
          "type": "AnimationEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "AnimationEventHandler"
          }
        },
        "onAuxClick": {
          "type": "MouseEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "MouseEventHandler"
          }
        },
        "onAuxClickCapture": {
          "type": "MouseEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "MouseEventHandler"
          }
        },
        "onBeforeInput": {
          "type": "FormEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "FormEventHandler"
          }
        },
        "onBeforeInputCapture": {
          "type": "FormEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "FormEventHandler"
          }
        },
        "onBlur": {
          "type": "FocusEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "FocusEventHandler"
          }
        },
        "onBlurCapture": {
          "type": "FocusEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "FocusEventHandler"
          }
        },
        "onCanPlay": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onCanPlayCapture": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onCanPlayThrough": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onCanPlayThroughCapture": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onChange": {
          "type": "FormEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "FormEventHandler"
          }
        },
        "onChangeCapture": {
          "type": "FormEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "FormEventHandler"
          }
        },
        "onClick": {
          "type": "MenuClickEventHandler",
          "optional": true,
          "description": "Callback fired when menu item is clicked",
          "typeDefinition": {
            "typeString": "MenuClickEventHandler"
          }
        },
        "onClickCapture": {
          "type": "MouseEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "MouseEventHandler"
          }
        },
        "onCompositionEnd": {
          "type": "CompositionEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "CompositionEventHandler"
          }
        },
        "onCompositionEndCapture": {
          "type": "CompositionEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "CompositionEventHandler"
          }
        },
        "onCompositionStart": {
          "type": "CompositionEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "CompositionEventHandler"
          }
        },
        "onCompositionStartCapture": {
          "type": "CompositionEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "CompositionEventHandler"
          }
        },
        "onCompositionUpdate": {
          "type": "CompositionEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "CompositionEventHandler"
          }
        },
        "onCompositionUpdateCapture": {
          "type": "CompositionEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "CompositionEventHandler"
          }
        },
        "onContextMenu": {
          "type": "MouseEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "MouseEventHandler"
          }
        },
        "onContextMenuCapture": {
          "type": "MouseEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "MouseEventHandler"
          }
        },
        "onCopy": {
          "type": "ClipboardEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ClipboardEventHandler"
          }
        },
        "onCopyCapture": {
          "type": "ClipboardEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ClipboardEventHandler"
          }
        },
        "onCut": {
          "type": "ClipboardEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ClipboardEventHandler"
          }
        },
        "onCutCapture": {
          "type": "ClipboardEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ClipboardEventHandler"
          }
        },
        "onDeselect": {
          "type": "SelectEventHandler",
          "optional": true,
          "description": "Callback fired when menu item is deselected",
          "typeDefinition": {
            "typeString": "SelectEventHandler"
          }
        },
        "onDoubleClick": {
          "type": "MouseEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "MouseEventHandler"
          }
        },
        "onDoubleClickCapture": {
          "type": "MouseEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "MouseEventHandler"
          }
        },
        "onDrag": {
          "type": "DragEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "DragEventHandler"
          }
        },
        "onDragCapture": {
          "type": "DragEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "DragEventHandler"
          }
        },
        "onDragEnd": {
          "type": "DragEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "DragEventHandler"
          }
        },
        "onDragEndCapture": {
          "type": "DragEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "DragEventHandler"
          }
        },
        "onDragEnter": {
          "type": "DragEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "DragEventHandler"
          }
        },
        "onDragEnterCapture": {
          "type": "DragEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "DragEventHandler"
          }
        },
        "onDragExit": {
          "type": "DragEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "DragEventHandler"
          }
        },
        "onDragExitCapture": {
          "type": "DragEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "DragEventHandler"
          }
        },
        "onDragLeave": {
          "type": "DragEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "DragEventHandler"
          }
        },
        "onDragLeaveCapture": {
          "type": "DragEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "DragEventHandler"
          }
        },
        "onDragOver": {
          "type": "DragEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "DragEventHandler"
          }
        },
        "onDragOverCapture": {
          "type": "DragEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "DragEventHandler"
          }
        },
        "onDragStart": {
          "type": "DragEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "DragEventHandler"
          }
        },
        "onDragStartCapture": {
          "type": "DragEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "DragEventHandler"
          }
        },
        "onDrop": {
          "type": "DragEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "DragEventHandler"
          }
        },
        "onDropCapture": {
          "type": "DragEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "DragEventHandler"
          }
        },
        "onDurationChange": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onDurationChangeCapture": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onEmptied": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onEmptiedCapture": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onEncrypted": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onEncryptedCapture": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onEnded": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onEndedCapture": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onError": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onErrorCapture": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onFocus": {
          "type": "FocusEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "FocusEventHandler"
          }
        },
        "onFocusCapture": {
          "type": "FocusEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "FocusEventHandler"
          }
        },
        "onGotPointerCapture": {
          "type": "PointerEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "PointerEventHandler"
          }
        },
        "onGotPointerCaptureCapture": {
          "type": "PointerEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "PointerEventHandler"
          }
        },
        "onInput": {
          "type": "FormEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "FormEventHandler"
          }
        },
        "onInputCapture": {
          "type": "FormEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "FormEventHandler"
          }
        },
        "onInvalid": {
          "type": "FormEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "FormEventHandler"
          }
        },
        "onInvalidCapture": {
          "type": "FormEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "FormEventHandler"
          }
        },
        "onKeyDown": {
          "type": "KeyboardEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "KeyboardEventHandler"
          }
        },
        "onKeyDownCapture": {
          "type": "KeyboardEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "KeyboardEventHandler"
          }
        },
        "onKeyPress": {
          "type": "KeyboardEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "KeyboardEventHandler"
          }
        },
        "onKeyPressCapture": {
          "type": "KeyboardEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "KeyboardEventHandler"
          }
        },
        "onKeyUp": {
          "type": "KeyboardEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "KeyboardEventHandler"
          }
        },
        "onKeyUpCapture": {
          "type": "KeyboardEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "KeyboardEventHandler"
          }
        },
        "onLoad": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onLoadCapture": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onLoadedData": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onLoadedDataCapture": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onLoadedMetadata": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onLoadedMetadataCapture": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onLoadStart": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onLoadStartCapture": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onLostPointerCapture": {
          "type": "PointerEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "PointerEventHandler"
          }
        },
        "onLostPointerCaptureCapture": {
          "type": "PointerEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "PointerEventHandler"
          }
        },
        "onMouseDown": {
          "type": "MouseEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "MouseEventHandler"
          }
        },
        "onMouseDownCapture": {
          "type": "MouseEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "MouseEventHandler"
          }
        },
        "onMouseEnter": {
          "type": "MouseEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "MouseEventHandler"
          }
        },
        "onMouseLeave": {
          "type": "MouseEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "MouseEventHandler"
          }
        },
        "onMouseMove": {
          "type": "MouseEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "MouseEventHandler"
          }
        },
        "onMouseMoveCapture": {
          "type": "MouseEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "MouseEventHandler"
          }
        },
        "onMouseOut": {
          "type": "MouseEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "MouseEventHandler"
          }
        },
        "onMouseOutCapture": {
          "type": "MouseEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "MouseEventHandler"
          }
        },
        "onMouseOver": {
          "type": "MouseEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "MouseEventHandler"
          }
        },
        "onMouseOverCapture": {
          "type": "MouseEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "MouseEventHandler"
          }
        },
        "onMouseUp": {
          "type": "MouseEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "MouseEventHandler"
          }
        },
        "onMouseUpCapture": {
          "type": "MouseEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "MouseEventHandler"
          }
        },
        "onOpenChange": {
          "type": "object",
          "optional": true,
          "description": "Callback fired when submenu expand/collapse state changes",
          "typeDefinition": {
            "typeString": "(openKeys: string[]) => void",
            "isFunction": true,
            "props": [
              {
                "key": "openKeys",
                "type": "string[]",
                "isParam": true,
                "optional": false,
                "typeDefinition": {
                  "typeString": "string[]",
                  "isArray": true,
                  "props": [
                    {
                      "key": "string",
                      "type": "intrinsic"
                    }
                  ]
                }
              },
              {
                "key": "void",
                "type": "intrinsic",
                "isReturn": true
              }
            ]
          }
        },
        "onPaste": {
          "type": "ClipboardEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ClipboardEventHandler"
          }
        },
        "onPasteCapture": {
          "type": "ClipboardEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ClipboardEventHandler"
          }
        },
        "onPause": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onPauseCapture": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onPlay": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onPlayCapture": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onPlaying": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onPlayingCapture": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onPointerCancel": {
          "type": "PointerEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "PointerEventHandler"
          }
        },
        "onPointerCancelCapture": {
          "type": "PointerEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "PointerEventHandler"
          }
        },
        "onPointerDown": {
          "type": "PointerEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "PointerEventHandler"
          }
        },
        "onPointerDownCapture": {
          "type": "PointerEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "PointerEventHandler"
          }
        },
        "onPointerEnter": {
          "type": "PointerEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "PointerEventHandler"
          }
        },
        "onPointerEnterCapture": {
          "type": "PointerEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "PointerEventHandler"
          }
        },
        "onPointerLeave": {
          "type": "PointerEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "PointerEventHandler"
          }
        },
        "onPointerLeaveCapture": {
          "type": "PointerEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "PointerEventHandler"
          }
        },
        "onPointerMove": {
          "type": "PointerEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "PointerEventHandler"
          }
        },
        "onPointerMoveCapture": {
          "type": "PointerEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "PointerEventHandler"
          }
        },
        "onPointerOut": {
          "type": "PointerEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "PointerEventHandler"
          }
        },
        "onPointerOutCapture": {
          "type": "PointerEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "PointerEventHandler"
          }
        },
        "onPointerOver": {
          "type": "PointerEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "PointerEventHandler"
          }
        },
        "onPointerOverCapture": {
          "type": "PointerEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "PointerEventHandler"
          }
        },
        "onPointerUp": {
          "type": "PointerEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "PointerEventHandler"
          }
        },
        "onPointerUpCapture": {
          "type": "PointerEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "PointerEventHandler"
          }
        },
        "onProgress": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onProgressCapture": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onRateChange": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onRateChangeCapture": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onReset": {
          "type": "FormEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "FormEventHandler"
          }
        },
        "onResetCapture": {
          "type": "FormEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "FormEventHandler"
          }
        },
        "onResize": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onResizeCapture": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onScroll": {
          "type": "UIEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "UIEventHandler"
          }
        },
        "onScrollCapture": {
          "type": "UIEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "UIEventHandler"
          }
        },
        "onSeeked": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onSeekedCapture": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onSeeking": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onSeekingCapture": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onSelect": {
          "type": "SelectEventHandler",
          "optional": true,
          "description": "Callback fired when menu item is selected",
          "typeDefinition": {
            "typeString": "SelectEventHandler"
          }
        },
        "onSelectCapture": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onStalled": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onStalledCapture": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onSubmit": {
          "type": "FormEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "FormEventHandler"
          }
        },
        "onSubmitCapture": {
          "type": "FormEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "FormEventHandler"
          }
        },
        "onSuspend": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onSuspendCapture": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onTimeUpdate": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onTimeUpdateCapture": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onTouchCancel": {
          "type": "TouchEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "TouchEventHandler"
          }
        },
        "onTouchCancelCapture": {
          "type": "TouchEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "TouchEventHandler"
          }
        },
        "onTouchEnd": {
          "type": "TouchEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "TouchEventHandler"
          }
        },
        "onTouchEndCapture": {
          "type": "TouchEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "TouchEventHandler"
          }
        },
        "onTouchMove": {
          "type": "TouchEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "TouchEventHandler"
          }
        },
        "onTouchMoveCapture": {
          "type": "TouchEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "TouchEventHandler"
          }
        },
        "onTouchStart": {
          "type": "TouchEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "TouchEventHandler"
          }
        },
        "onTouchStartCapture": {
          "type": "TouchEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "TouchEventHandler"
          }
        },
        "onTransitionEnd": {
          "type": "TransitionEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "TransitionEventHandler"
          }
        },
        "onTransitionEndCapture": {
          "type": "TransitionEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "TransitionEventHandler"
          }
        },
        "onVolumeChange": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onVolumeChangeCapture": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onWaiting": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onWaitingCapture": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onWheel": {
          "type": "WheelEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "WheelEventHandler"
          }
        },
        "onWheelCapture": {
          "type": "WheelEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "WheelEventHandler"
          }
        },
        "openKeys": {
          "type": "array",
          "optional": true,
          "description": "Array of currently expanded submenu keys",
          "typeDefinition": {
            "typeString": "string[]",
            "isArray": true,
            "props": [
              {
                "key": "string",
                "type": "intrinsic"
              }
            ]
          }
        },
        "overflowedIndicator": {
          "type": "ReactNode",
          "optional": true,
          "description": "Custom overflow indicator when menu is collapsed",
          "typeDefinition": {
            "typeString": "ReactNode"
          }
        },
        "placeholder": {
          "type": "string",
          "optional": true
        },
        "prefix": {
          "type": "string",
          "optional": true
        },
        "prefixCls": {
          "type": "string",
          "optional": true
        },
        "property": {
          "type": "string",
          "optional": true
        },
        "radioGroup": {
          "type": "string",
          "optional": true
        },
        "rel": {
          "type": "string",
          "optional": true
        },
        "resource": {
          "type": "string",
          "optional": true
        },
        "results": {
          "type": "number",
          "optional": true
        },
        "rev": {
          "type": "string",
          "optional": true
        },
        "role": {
          "type": "AriaRole",
          "optional": true,
          "typeDefinition": {
            "typeString": "AriaRole"
          }
        },
        "rootClassName": {
          "type": "string",
          "optional": true
        },
        "security": {
          "type": "string",
          "optional": true
        },
        "selectable": {
          "type": "boolean",
          "description": "Whether menu items can be selected",
          "optional": true
        },
        "selectedKeys": {
          "type": "array",
          "optional": true,
          "description": "Array of currently selected menu item keys",
          "typeDefinition": {
            "typeString": "string[]",
            "isArray": true,
            "props": [
              {
                "key": "string",
                "type": "intrinsic"
              }
            ]
          }
        },
        "slot": {
          "type": "string",
          "optional": true
        },
        "spellCheck": {
          "type": "Booleanish",
          "optional": true,
          "typeDefinition": {
            "typeString": "Booleanish"
          }
        },
        "style": {
          "type": "CSSProperties",
          "optional": true,
          "description": "Custom CSS styles for menu container",
          "typeDefinition": {
            "typeString": "CSSProperties"
          }
        },
        "subMenuCloseDelay": {
          "type": "number",
          "description": "Delay in seconds before submenu closes on mouse leave",
          "optional": true
        },
        "subMenuOpenDelay": {
          "type": "number",
          "description": "Delay in seconds before submenu opens on mouse enter",
          "optional": true
        },
        "suppressContentEditableWarning": {
          "type": "boolean",
          "optional": true
        },
        "suppressHydrationWarning": {
          "type": "boolean",
          "optional": true
        },
        "tabIndex": {
          "type": "number",
          "optional": true
        },
        "theme": {
          "type": "MenuTheme",
          "optional": true,
          "description": "Color theme of menu - light or dark",
          "typeDefinition": {
            "typeString": "MenuTheme"
          }
        },
        "title": {
          "type": "string",
          "optional": true
        },
        "translate": {
          "type": "union",
          "optional": true,
          "typeDefinition": {
            "typeString": "no | yes",
            "props": [
              {
                "key": "no",
                "type": "string"
              },
              {
                "key": "yes",
                "type": "string"
              }
            ]
          }
        },
        "triggerSubMenuAction": {
          "type": "TriggerSubMenuAction",
          "optional": true,
          "description": "Action that triggers submenu expansion - hover or click",
          "typeDefinition": {
            "typeString": "TriggerSubMenuAction"
          }
        },
        "typeof": {
          "type": "string",
          "optional": true
        },
        "unselectable": {
          "type": "union",
          "optional": true,
          "typeDefinition": {
            "typeString": "off | on",
            "props": [
              {
                "key": "off",
                "type": "string"
              },
              {
                "key": "on",
                "type": "string"
              }
            ]
          }
        },
        "vocab": {
          "type": "string",
          "optional": true
        }
      },
      "componentTypeName": "MenuProps"
    },
    {
      "name": "Loader",
      "description": "The Loader component visually indicates that content is loading, enhancing user experience. It typically features animated graphics or spinners, signaling to users that their request is being processed. This component is essential for maintaining engagement during wait times in applications and websites.",
      "props": {}
    },
    {
      "name": "List",
      "description": "The List component is a versatile UI element that displays a collection of items in a structured format. It supports various layouts, allows for easy item selection, and can be customized with icons, images, and actions, enhancing user interaction and organization of information.",
      "props": {
        "bordered": {
          "type": "boolean",
          "description": "Toggles border around the list container",
          "optional": true
        },
        "dataSource": {
          "type": "array",
          "optional": true,
          "description": "Array of data items to render in the list",
          "typeDefinition": {
            "typeString": "T[]",
            "isArray": true,
            "props": [
              {
                "key": "T",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "T"
                }
              }
            ]
          }
        },
        "footer": {
          "type": "ReactNode",
          "optional": true,
          "description": "Content to display at bottom of list",
          "typeDefinition": {
            "typeString": "ReactNode"
          }
        },
        "grid": {
          "type": "ListGridType",
          "optional": true,
          "description": "Configures list items to display in a grid layout",
          "typeDefinition": {
            "typeString": "ListGridType"
          }
        },
        "header": {
          "type": "ReactNode",
          "optional": true,
          "description": "Content to display at top of list",
          "typeDefinition": {
            "typeString": "ReactNode"
          }
        },
        "itemLayout": {
          "type": "ListItemLayout",
          "optional": true,
          "description": "Controls horizontal/vertical layout of list items",
          "typeDefinition": {
            "typeString": "ListItemLayout"
          }
        },
        "loading": {
          "type": "union",
          "optional": true,
          "description": "Shows loading spinner while data is being fetched",
          "typeDefinition": {
            "typeString": "boolean | SpinProps",
            "props": [
              {
                "key": "boolean",
                "type": "intrinsic"
              },
              {
                "key": "SpinProps",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "SpinProps"
                }
              }
            ]
          }
        },
        "loadMore": {
          "type": "ReactNode",
          "optional": true,
          "description": "Renders load more content at bottom of list",
          "typeDefinition": {
            "typeString": "ReactNode"
          }
        },
        "locale": {
          "type": "ListLocale",
          "optional": true,
          "description": "Customizes default text strings used in the list",
          "typeDefinition": {
            "typeString": "ListLocale"
          }
        },
        "pagination": {
          "type": "union",
          "optional": true,
          "description": "Adds pagination controls to navigate through list items",
          "typeDefinition": {
            "typeString": "false | PaginationConfig",
            "props": [
              {
                "key": "false",
                "type": "boolean"
              },
              {
                "key": "PaginationConfig",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "PaginationConfig"
                }
              }
            ]
          }
        },
        "renderItem": {
          "type": "object",
          "optional": true,
          "description": "Function to render each individual list item",
          "typeDefinition": {
            "typeString": "(item: T, index: number) => ReactNode",
            "isFunction": true,
            "props": [
              {
                "key": "item",
                "type": "T",
                "isParam": true,
                "optional": false,
                "typeDefinition": {
                  "typeString": "T"
                }
              },
              {
                "key": "index",
                "type": "number",
                "isParam": true,
                "optional": false
              },
              {
                "key": "ReactNode",
                "type": "reference",
                "isReturn": true,
                "typeDefinition": {
                  "typeString": "ReactNode"
                }
              }
            ]
          }
        },
        "rowKey": {
          "type": "union",
          "optional": true,
          "description": "Unique key for each list item",
          "typeDefinition": {
            "typeString": "(item: T) => Key | typeOperator",
            "props": [
              {
                "key": "(item: T) => Key",
                "type": "reflection",
                "typeDefinition": {
                  "typeString": "(item: T) => Key",
                  "isFunction": true,
                  "props": [
                    {
                      "key": "item",
                      "type": "T",
                      "isParam": true,
                      "optional": false,
                      "typeDefinition": {
                        "typeString": "T"
                      }
                    },
                    {
                      "key": "Key",
                      "type": "reference",
                      "isReturn": true,
                      "typeDefinition": {
                        "typeString": "Key"
                      }
                    }
                  ]
                }
              },
              {
                "key": "typeOperator",
                "type": "typeOperator"
              }
            ]
          }
        },
        "size": {
          "type": "ListSize",
          "optional": true,
          "description": "Controls padding and font size of list items",
          "typeDefinition": {
            "typeString": "ListSize"
          }
        },
        "split": {
          "type": "boolean",
          "description": "Shows divider between list items",
          "optional": true
        }
      },
      "componentTypeName": "ListProps"
    },
    {
      "name": "InputWrapper",
      "description": "The InputWrapper component provides a flexible container for input elements, enhancing layout and styling. It supports various input types, ensuring consistent spacing and alignment, while allowing for customization of labels and error messages, making it ideal for forms and user interactions.",
      "props": {}
    },
    {
      "name": "TextField",
      "description": "The TextField component is a versatile input element designed for user text entry. It supports various input types, customizable styles, and validation features, enhancing user interaction in forms and applications. Ideal for capturing single-line or multi-line text, it ensures a seamless and intuitive experience.",
      "props": {
        "addonAfter": {
          "type": "ReactNode",
          "optional": true,
          "description": "Content to display after the input field",
          "typeDefinition": {
            "typeString": "ReactNode"
          }
        },
        "addonBefore": {
          "type": "ReactNode",
          "optional": true,
          "description": "Content to display before the input field",
          "typeDefinition": {
            "typeString": "ReactNode"
          }
        },
        "allowClear": {
          "type": "union",
          "optional": true,
          "description": "Shows a clear icon button to remove input content",
          "typeDefinition": {
            "typeString": "boolean | { clearIcon?: ReactNode }",
            "props": [
              {
                "key": "boolean",
                "type": "intrinsic"
              },
              {
                "key": "{ clearIcon?: ReactNode }",
                "type": "reflection",
                "typeDefinition": {
                  "typeString": "{ clearIcon?: ReactNode }",
                  "props": [
                    {
                      "key": "clearIcon",
                      "type": "ReactNode",
                      "optional": true,
                      "typeDefinition": {
                        "typeString": "ReactNode"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        "autoComplete": {
          "type": "string",
          "description": "Helps password managers identify the input field's purpose",
          "optional": true
        },
        "autoFocus": {
          "type": "boolean",
          "description": "Automatically focuses this input when mounted",
          "optional": true
        },
        "className": {
          "type": "string",
          "description": "Custom CSS class name",
          "optional": true
        },
        "defaultValue": {
          "type": "union",
          "optional": true,
          "description": "Initial value before user interaction",
          "typeDefinition": {
            "typeString": "string | number | typeOperator",
            "props": [
              {
                "key": "string",
                "type": "intrinsic"
              },
              {
                "key": "number",
                "type": "intrinsic"
              },
              {
                "key": "typeOperator",
                "type": "typeOperator"
              }
            ]
          }
        },
        "disabled": {
          "type": "boolean",
          "description": "Makes the input field non-interactive",
          "optional": true
        },
        "help": {
          "type": "union",
          "optional": true,
          "description": "Description of the input",
          "typeDefinition": {
            "typeString": "null | string",
            "props": [
              {
                "key": "null",
                "type": "object"
              },
              {
                "key": "string",
                "type": "intrinsic"
              }
            ]
          }
        },
        "id": {
          "type": "string",
          "description": "The ID for input",
          "optional": true
        },
        "label": {
          "type": "string",
          "description": "label of the input",
          "optional": true
        },
        "maxLength": {
          "type": "number",
          "description": "Maximum number of characters allowed",
          "optional": true
        },
        "onBlur": {
          "type": "object",
          "optional": true,
          "description": "Triggers when input loses focus",
          "typeDefinition": {
            "typeString": "(value: string) => void",
            "isFunction": true,
            "props": [
              {
                "key": "value",
                "type": "string",
                "isParam": true,
                "optional": false
              },
              {
                "key": "void",
                "type": "intrinsic",
                "isReturn": true
              }
            ]
          }
        },
        "onChange": {
          "type": "object",
          "optional": true,
          "description": "Triggers when input value changes",
          "typeDefinition": {
            "typeString": "(value: string) => void",
            "isFunction": true,
            "props": [
              {
                "key": "value",
                "type": "string",
                "isParam": true,
                "optional": false
              },
              {
                "key": "void",
                "type": "intrinsic",
                "isReturn": true
              }
            ]
          }
        },
        "onInfoIconClick": {
          "type": "object",
          "optional": true,
          "typeDefinition": {
            "typeString": "() => void",
            "isFunction": true,
            "props": [
              {
                "key": "void",
                "type": "intrinsic",
                "isReturn": true
              }
            ]
          }
        },
        "onPressEnter": {
          "type": "KeyboardEventHandler",
          "optional": true,
          "description": "Triggers when Enter key is pressed",
          "typeDefinition": {
            "typeString": "KeyboardEventHandler"
          }
        },
        "placeholder": {
          "type": "string",
          "description": "Hint text shown when input is empty",
          "optional": true
        },
        "ref": {
          "type": "Ref",
          "optional": true,
          "description": "Direct DOM access to the input element",
          "typeDefinition": {
            "typeString": "Ref"
          }
        },
        "showInfoIcon": {
          "type": "boolean",
          "description": "show info icon along with label",
          "optional": true
        },
        "showOptionalText": {
          "type": "boolean",
          "description": "show optional text along with label",
          "optional": true
        },
        "size": {
          "type": "InputSize",
          "optional": true,
          "description": "Visual size variant of the input",
          "typeDefinition": {
            "typeString": "InputSize"
          }
        },
        "status": {
          "type": "union",
          "optional": true,
          "description": "Set validation status",
          "typeDefinition": {
            "typeString": " | error",
            "props": [
              {
                "key": "",
                "type": "string"
              },
              {
                "key": "error",
                "type": "string"
              }
            ]
          }
        },
        "type": {
          "type": "union",
          "optional": true,
          "description": "HTML input type attribute",
          "typeDefinition": {
            "typeString": "number | text | search | email | password",
            "props": [
              {
                "key": "number",
                "type": "string"
              },
              {
                "key": "text",
                "type": "string"
              },
              {
                "key": "search",
                "type": "string"
              },
              {
                "key": "email",
                "type": "string"
              },
              {
                "key": "password",
                "type": "string"
              }
            ]
          }
        },
        "value": {
          "type": "union",
          "optional": true,
          "description": "Controlled input value",
          "typeDefinition": {
            "typeString": "string | number | typeOperator",
            "props": [
              {
                "key": "string",
                "type": "intrinsic"
              },
              {
                "key": "number",
                "type": "intrinsic"
              },
              {
                "key": "typeOperator",
                "type": "typeOperator"
              }
            ]
          }
        },
        "width": {
          "type": "number",
          "description": "Fixed width in pixels",
          "optional": true
        }
      },
      "componentTypeName": "TextFieldProps"
    },
    {
      "name": "TextArea",
      "description": "The TextArea component is a versatile input field designed for multi-line text entry. It supports customizable dimensions, placeholder text, and character limits, making it ideal for user feedback, comments, or detailed input. Its user-friendly interface enhances interaction and improves data collection efficiency.",
      "props": {
        "allowClear": {
          "type": "union",
          "optional": true,
          "description": "Enables a clear icon button to remove input content",
          "typeDefinition": {
            "typeString": "boolean | { clearIcon?: ReactNode }",
            "props": [
              {
                "key": "boolean",
                "type": "intrinsic"
              },
              {
                "key": "{ clearIcon?: ReactNode }",
                "type": "reflection",
                "typeDefinition": {
                  "typeString": "{ clearIcon?: ReactNode }",
                  "props": [
                    {
                      "key": "clearIcon",
                      "type": "ReactNode",
                      "optional": true,
                      "typeDefinition": {
                        "typeString": "ReactNode"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        "autoFocus": {
          "type": "boolean",
          "description": "Automatically focuses the textarea when mounted",
          "optional": true
        },
        "autoSize": {
          "type": "union",
          "optional": true,
          "description": "Automatically adjusts textarea height based on content, with optional min/max row constraints",
          "typeDefinition": {
            "typeString": "boolean | object",
            "props": [
              {
                "key": "boolean",
                "type": "intrinsic"
              },
              {
                "key": "object",
                "type": "intrinsic"
              }
            ]
          }
        },
        "className": {
          "type": "string",
          "description": "Custom CSS class name for styling",
          "optional": true
        },
        "defaultValue": {
          "type": "union",
          "optional": true,
          "description": "Sets the initial textarea content before user interaction",
          "typeDefinition": {
            "typeString": "string | number | typeOperator",
            "props": [
              {
                "key": "string",
                "type": "intrinsic"
              },
              {
                "key": "number",
                "type": "intrinsic"
              },
              {
                "key": "typeOperator",
                "type": "typeOperator"
              }
            ]
          }
        },
        "disabled": {
          "type": "boolean",
          "description": "Prevents user interaction with the textarea when true",
          "optional": true
        },
        "help": {
          "type": "union",
          "optional": true,
          "description": "Description of the input",
          "typeDefinition": {
            "typeString": "null | string",
            "props": [
              {
                "key": "null",
                "type": "object"
              },
              {
                "key": "string",
                "type": "intrinsic"
              }
            ]
          }
        },
        "id": {
          "type": "string",
          "description": "The ID for input",
          "optional": true
        },
        "label": {
          "type": "string",
          "description": "label of the input",
          "optional": true
        },
        "maxLength": {
          "type": "number",
          "description": "Limits the total number of characters that can be entered",
          "optional": true
        },
        "onChange": {
          "type": "object",
          "optional": true,
          "description": "Fires when the textarea content changes",
          "typeDefinition": {
            "typeString": "(value: string) => void",
            "isFunction": true,
            "props": [
              {
                "key": "value",
                "type": "string",
                "isParam": true,
                "optional": false
              },
              {
                "key": "void",
                "type": "intrinsic",
                "isReturn": true
              }
            ]
          }
        },
        "onInfoIconClick": {
          "type": "object",
          "optional": true,
          "typeDefinition": {
            "typeString": "() => void",
            "isFunction": true,
            "props": [
              {
                "key": "void",
                "type": "intrinsic",
                "isReturn": true
              }
            ]
          }
        },
        "onPressEnter": {
          "type": "object",
          "optional": true,
          "description": "Handles the Enter key press event in the textarea",
          "typeDefinition": {
            "typeString": "(e: any) => void",
            "isFunction": true,
            "props": [
              {
                "key": "e",
                "type": "any",
                "isParam": true,
                "optional": false
              },
              {
                "key": "void",
                "type": "intrinsic",
                "isReturn": true
              }
            ]
          }
        },
        "placeholder": {
          "type": "string",
          "description": "Displays hint text when the textarea is empty",
          "optional": true
        },
        "ref": {
          "type": "Ref",
          "optional": true,
          "description": "Provides direct DOM access to the textarea element",
          "typeDefinition": {
            "typeString": "Ref"
          }
        },
        "rows": {
          "type": "number",
          "description": "Specifies the visible number of lines in the textarea",
          "optional": true
        },
        "showCount": {
          "type": "boolean",
          "description": "Displays the current character count below the textarea",
          "optional": true
        },
        "showInfoIcon": {
          "type": "boolean",
          "description": "show info icon along with label",
          "optional": true
        },
        "showOptionalText": {
          "type": "boolean",
          "description": "show optional text along with label",
          "optional": true
        },
        "size": {
          "type": "InputSize",
          "optional": true,
          "description": "Controls the visual size/padding of the textarea",
          "typeDefinition": {
            "typeString": "InputSize"
          }
        },
        "status": {
          "type": "union",
          "optional": true,
          "description": "Indicates validation state of the textarea input",
          "typeDefinition": {
            "typeString": " | error",
            "props": [
              {
                "key": "",
                "type": "string"
              },
              {
                "key": "error",
                "type": "string"
              }
            ]
          }
        },
        "value": {
          "type": "union",
          "optional": true,
          "description": "Controls the textarea content in controlled component mode",
          "typeDefinition": {
            "typeString": "string | number | typeOperator",
            "props": [
              {
                "key": "string",
                "type": "intrinsic"
              },
              {
                "key": "number",
                "type": "intrinsic"
              },
              {
                "key": "typeOperator",
                "type": "typeOperator"
              }
            ]
          }
        }
      },
      "componentTypeName": "TextAreaProps"
    },
    {
      "name": "Image",
      "description": "The Image component displays visual content, supporting various formats like JPEG, PNG, and GIF. It allows for customization of size, alignment, and alt text, enhancing accessibility. Ideal for enriching user interfaces, it seamlessly integrates graphics into web and mobile applications, improving engagement and aesthetic appeal.",
      "props": {
        "alt": {
          "type": "string",
          "description": "Alternative text description for accessibility",
          "optional": true
        },
        "fallback": {
          "type": "string",
          "description": "Fallback image source to display if main image fails to load",
          "optional": true
        },
        "height": {
          "type": "union",
          "optional": true,
          "description": "Height dimension of the image in pixels",
          "typeDefinition": {
            "typeString": "string | number",
            "props": [
              {
                "key": "string",
                "type": "intrinsic"
              },
              {
                "key": "number",
                "type": "intrinsic"
              }
            ]
          }
        },
        "onError": {
          "type": "object",
          "optional": true,
          "description": "Callback function triggered when image fails to load",
          "typeDefinition": {
            "typeString": "(e: SyntheticEvent) => void",
            "isFunction": true,
            "props": [
              {
                "key": "e",
                "type": "SyntheticEvent",
                "isParam": true,
                "optional": false,
                "typeDefinition": {
                  "typeString": "SyntheticEvent"
                }
              },
              {
                "key": "void",
                "type": "intrinsic",
                "isReturn": true
              }
            ]
          }
        },
        "placeholder": {
          "type": "ReactNode",
          "optional": true,
          "description": "Temporary content shown while image is loading",
          "typeDefinition": {
            "typeString": "ReactNode"
          }
        },
        "preview": {
          "type": "union",
          "optional": true,
          "description": "Controls preview modal behavior when clicking the image",
          "typeDefinition": {
            "typeString": "boolean | ImagePreviewType",
            "props": [
              {
                "key": "boolean",
                "type": "intrinsic"
              },
              {
                "key": "ImagePreviewType",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "ImagePreviewType"
                }
              }
            ]
          }
        },
        "src": {
          "type": "string",
          "description": "URL of the image to be displayed",
          "optional": true
        },
        "width": {
          "type": "union",
          "optional": true,
          "description": "Width dimension of the image in pixels",
          "typeDefinition": {
            "typeString": "string | number",
            "props": [
              {
                "key": "string",
                "type": "intrinsic"
              },
              {
                "key": "number",
                "type": "intrinsic"
              }
            ]
          }
        }
      },
      "componentTypeName": "ImageProps"
    },
    {
      "name": "Icon",
      "description": "The Icon component is a versatile graphical element designed to visually represent actions, objects, or concepts. It enhances user interfaces by providing intuitive symbols, ensuring clarity and engagement. Ideal for applications and websites, it supports various styles and sizes for seamless integration.",
      "props": {
        "color": {
          "type": "string",
          "description": "Sets the icon's fill color using hex code or named color value",
          "optional": true
        },
        "height": {
          "type": "number",
          "description": "Explicitly sets icon height in pixels, overriding the default size",
          "optional": true
        },
        "hoverColor": {
          "type": "string",
          "description": "Specifies the icon's color on mouse hover interaction",
          "optional": true
        },
        "name": {
          "type": "union",
          "optional": true,
          "description": "Unique identifier that determines which icon to render from the IconMap collection",
          "typeDefinition": {
            "typeString": " | wallet-add | wallet | activity-outline | airplaine-outline | alert-circle-outline | alert-octagon-outline | alert-triangle-outline | align-center-outline | align-justify-outline | align-left-outline | align-right-outline | anchor-outline | aperture-outline | arrow-down-outline | arrow-down-long-outline | arrow-down-circle-outline | arrow-down-left-outline | arrow-down-right-outline | arrow-left-circle-outline | arrow-left-outline | arrow-right-circle-outline | arrow-right-outline | arrow-up-circle-outline | arrow-up-left-outline | arrow-up-outline | arrow-up-long-outline | arrow-up-right-outline | at-sign-outline | award-outline | bar-chart2outline | bar-chart-outline | battery-charging-outline | battery-outline | bell-off-outline | bell-outline | bluetooth-outline | bnpl-outline | bold-outline | book-open-outline | book-outline | bookmark-outline | box-outline | briefcase-outline | calendar-outline | camera-off-outline | camera-outline | cash-loan-money-rp-outline | cast-outline | cat-outline | chat-outline | check-circle | check-circle-outline | check-outline | check-square-outline | chevron-down-outline | chevron-left-outline | chevron-right-outline | chevron-up-outline | chevrons-down-outline | chevrons-left-outline | chevrons-right-outline | chevrons-up-outline | chrome-outline | circle-outline | clipboard-outline | clock-outline | close-outline | cloud-drizzle-outline | cloud-lightning-outline | cloud-off-outline | cloud-outline | cloud-rain-outline | cloud-snow-outline | code-outline | codepen-outline | codesandbox-outline | coffee-outline | columns-outline | command-outline | community-outline | compass-outline | copy-outline | corner-down-left-outline | corner-down-right-outline | corner-left-down-outline | corner-left-up-outline | corner-right-down-outline | corner-right-up-outline | corner-up-left-outline | corner-up-right-outline | cpu-outline | credit-card-outline | crop-outline | database-outline | delete-outline | disc-outline | distributor-outline | divide-circle-outline | divide-outline | divide-square-outline | dollar-sign-outline | dot | download-cloud-outline | download-outline | dribbble-outline | droplet-outline | edc-outline | edit2-outline | edit3-outline | edit-outline | external-link-outline | eye-off-outline | eye-outline | facebook-outline | fast-forward-outline | feather-outline | figma-outline | file-minus-outline | file-outline | file-plus-outline | file-text-outline | film-outline | filter-outline | flag-outline | folder-minus-outline | folder-outline | folder-plus-outline | framer-outline | frown-outline | gift-outline | git-branch-outline | git-commit-outline | git-merge-outline | git-pull-request-outline | gitlab-outline | grid-outline | hand-card-outline | hard-drive-outline | hash-outline | headphones-outline | heart-outline | help-circle-outline | hexagon-outline | home-outline | image-outline | inbox-outline | info-circle | info-outline | info-triangle | instagram-outline | incomplete-loan-outline | italic-outline | key-outline | layers-outline | layout-outline | life-buoy-outline | link2-outline | link-outline | linkedin-outline | list-outline | loader-outline | location-outline | lock-outline | log-in-outline | log-out-outline | mail-outline | map-outline | map-pin-outline | maximize2-outline | maximize-outline | meh-outline | menu-outline | merchant-outline | message-circle-outline | message-square-outline | mic-off-outline | mic-outline | minimize2-outline | minimize-outline | minus-circle-outline | minus-outline | minus-square-outline | money-in-outline | monitor-outline | moon-outline | more-horizontal-outline | more-vertical-outline | mouse-pointer-outline | move-outline | music-outline | navigation2-outline | navigation-outline | octagon-outline | package-outline | paper-scroll | paperclip-outline | partnership-outline | pause-circle-outline | pause-outline | pen-tool-outline | percent-outline | phone-call-outline | phone-forwarded-outline | phone-incoming-outline | phone-missed-outline | phone-off-outline | phone-outgoing-outline | phone-outline | pie-chart-outline | play-circle-outline | play-outline | plus-circle-outline | plus-outline | plus-square-outline | pocket-outline | power-outline | printer-outline | radio-outline | receipt-outline | refresh-ccw-outline | refresh-cw-outline | refund-money-rp-outline | repeat-outline | rewind-outline | rotate-ccw-outline | rotate-cw-outline | save-outline | scanner-outline | scissors-outline | search-outline | send-outline | send-money-rp | server-outline | settings-outline | share2-outline | share-outline | shield-off-outline | shield-outline | shopping-bag-outline | shopping-cart-outline | shuffle-outline | sidebar-outline | skip-back-outline | skip-forward-outline | slack-outline | slash-outline | sliders-outline | smartphone-outline | smile-outline | speaker-outline | square-outline | star-outline | stop-circle-outline | sun-outline | sunrise-outline | sunset-outline | supplier-outline | tablet-outline | tag-outline | target1-outline | target-outline | terminal-outline | thermometer-outline | thumbs-down-outline | thumbs-up-outline | toggle-left-outline | toggle-right-outline | tool-outline | trash2-outline | trash-outline | trello-outline | trending-down-outline | trending-up-outline | triangle-outline | truck-outline | tv-outline | twitch-outline | twitter-outline | type-outline | umbrella-outline | underline-outline | unlock-outline | upload-cloud-outline | upload-outline | user-check-outline | user-minus-outline | user-outline | user-plus-outline | user-xoutline | users-outline | video-of-outline | video-outline | voicemail-outline | volume1-outline | volume2-outline | volume-outline | volume-xoutline | watch-outline | web-outline | wifi1-outline | wifi-off-outline | wifi-outline | wind-outline | xcircle-outline | xoctagon-outline | xsquare-outline | youtube-outline | zap-off-outline | zap-outline | zoom-in-outline | zoom-out-outline",
            "props": [
              {
                "key": "",
                "type": "string"
              },
              {
                "key": "wallet-add",
                "type": "string"
              },
              {
                "key": "wallet",
                "type": "string"
              },
              {
                "key": "activity-outline",
                "type": "string"
              },
              {
                "key": "airplaine-outline",
                "type": "string"
              },
              {
                "key": "alert-circle-outline",
                "type": "string"
              },
              {
                "key": "alert-octagon-outline",
                "type": "string"
              },
              {
                "key": "alert-triangle-outline",
                "type": "string"
              },
              {
                "key": "align-center-outline",
                "type": "string"
              },
              {
                "key": "align-justify-outline",
                "type": "string"
              },
              {
                "key": "align-left-outline",
                "type": "string"
              },
              {
                "key": "align-right-outline",
                "type": "string"
              },
              {
                "key": "anchor-outline",
                "type": "string"
              },
              {
                "key": "aperture-outline",
                "type": "string"
              },
              {
                "key": "arrow-down-outline",
                "type": "string"
              },
              {
                "key": "arrow-down-long-outline",
                "type": "string"
              },
              {
                "key": "arrow-down-circle-outline",
                "type": "string"
              },
              {
                "key": "arrow-down-left-outline",
                "type": "string"
              },
              {
                "key": "arrow-down-right-outline",
                "type": "string"
              },
              {
                "key": "arrow-left-circle-outline",
                "type": "string"
              },
              {
                "key": "arrow-left-outline",
                "type": "string"
              },
              {
                "key": "arrow-right-circle-outline",
                "type": "string"
              },
              {
                "key": "arrow-right-outline",
                "type": "string"
              },
              {
                "key": "arrow-up-circle-outline",
                "type": "string"
              },
              {
                "key": "arrow-up-left-outline",
                "type": "string"
              },
              {
                "key": "arrow-up-outline",
                "type": "string"
              },
              {
                "key": "arrow-up-long-outline",
                "type": "string"
              },
              {
                "key": "arrow-up-right-outline",
                "type": "string"
              },
              {
                "key": "at-sign-outline",
                "type": "string"
              },
              {
                "key": "award-outline",
                "type": "string"
              },
              {
                "key": "bar-chart2outline",
                "type": "string"
              },
              {
                "key": "bar-chart-outline",
                "type": "string"
              },
              {
                "key": "battery-charging-outline",
                "type": "string"
              },
              {
                "key": "battery-outline",
                "type": "string"
              },
              {
                "key": "bell-off-outline",
                "type": "string"
              },
              {
                "key": "bell-outline",
                "type": "string"
              },
              {
                "key": "bluetooth-outline",
                "type": "string"
              },
              {
                "key": "bnpl-outline",
                "type": "string"
              },
              {
                "key": "bold-outline",
                "type": "string"
              },
              {
                "key": "book-open-outline",
                "type": "string"
              },
              {
                "key": "book-outline",
                "type": "string"
              },
              {
                "key": "bookmark-outline",
                "type": "string"
              },
              {
                "key": "box-outline",
                "type": "string"
              },
              {
                "key": "briefcase-outline",
                "type": "string"
              },
              {
                "key": "calendar-outline",
                "type": "string"
              },
              {
                "key": "camera-off-outline",
                "type": "string"
              },
              {
                "key": "camera-outline",
                "type": "string"
              },
              {
                "key": "cash-loan-money-rp-outline",
                "type": "string"
              },
              {
                "key": "cast-outline",
                "type": "string"
              },
              {
                "key": "cat-outline",
                "type": "string"
              },
              {
                "key": "chat-outline",
                "type": "string"
              },
              {
                "key": "check-circle",
                "type": "string"
              },
              {
                "key": "check-circle-outline",
                "type": "string"
              },
              {
                "key": "check-outline",
                "type": "string"
              },
              {
                "key": "check-square-outline",
                "type": "string"
              },
              {
                "key": "chevron-down-outline",
                "type": "string"
              },
              {
                "key": "chevron-left-outline",
                "type": "string"
              },
              {
                "key": "chevron-right-outline",
                "type": "string"
              },
              {
                "key": "chevron-up-outline",
                "type": "string"
              },
              {
                "key": "chevrons-down-outline",
                "type": "string"
              },
              {
                "key": "chevrons-left-outline",
                "type": "string"
              },
              {
                "key": "chevrons-right-outline",
                "type": "string"
              },
              {
                "key": "chevrons-up-outline",
                "type": "string"
              },
              {
                "key": "chrome-outline",
                "type": "string"
              },
              {
                "key": "circle-outline",
                "type": "string"
              },
              {
                "key": "clipboard-outline",
                "type": "string"
              },
              {
                "key": "clock-outline",
                "type": "string"
              },
              {
                "key": "close-outline",
                "type": "string"
              },
              {
                "key": "cloud-drizzle-outline",
                "type": "string"
              },
              {
                "key": "cloud-lightning-outline",
                "type": "string"
              },
              {
                "key": "cloud-off-outline",
                "type": "string"
              },
              {
                "key": "cloud-outline",
                "type": "string"
              },
              {
                "key": "cloud-rain-outline",
                "type": "string"
              },
              {
                "key": "cloud-snow-outline",
                "type": "string"
              },
              {
                "key": "code-outline",
                "type": "string"
              },
              {
                "key": "codepen-outline",
                "type": "string"
              },
              {
                "key": "codesandbox-outline",
                "type": "string"
              },
              {
                "key": "coffee-outline",
                "type": "string"
              },
              {
                "key": "columns-outline",
                "type": "string"
              },
              {
                "key": "command-outline",
                "type": "string"
              },
              {
                "key": "community-outline",
                "type": "string"
              },
              {
                "key": "compass-outline",
                "type": "string"
              },
              {
                "key": "copy-outline",
                "type": "string"
              },
              {
                "key": "corner-down-left-outline",
                "type": "string"
              },
              {
                "key": "corner-down-right-outline",
                "type": "string"
              },
              {
                "key": "corner-left-down-outline",
                "type": "string"
              },
              {
                "key": "corner-left-up-outline",
                "type": "string"
              },
              {
                "key": "corner-right-down-outline",
                "type": "string"
              },
              {
                "key": "corner-right-up-outline",
                "type": "string"
              },
              {
                "key": "corner-up-left-outline",
                "type": "string"
              },
              {
                "key": "corner-up-right-outline",
                "type": "string"
              },
              {
                "key": "cpu-outline",
                "type": "string"
              },
              {
                "key": "credit-card-outline",
                "type": "string"
              },
              {
                "key": "crop-outline",
                "type": "string"
              },
              {
                "key": "database-outline",
                "type": "string"
              },
              {
                "key": "delete-outline",
                "type": "string"
              },
              {
                "key": "disc-outline",
                "type": "string"
              },
              {
                "key": "distributor-outline",
                "type": "string"
              },
              {
                "key": "divide-circle-outline",
                "type": "string"
              },
              {
                "key": "divide-outline",
                "type": "string"
              },
              {
                "key": "divide-square-outline",
                "type": "string"
              },
              {
                "key": "dollar-sign-outline",
                "type": "string"
              },
              {
                "key": "dot",
                "type": "string"
              },
              {
                "key": "download-cloud-outline",
                "type": "string"
              },
              {
                "key": "download-outline",
                "type": "string"
              },
              {
                "key": "dribbble-outline",
                "type": "string"
              },
              {
                "key": "droplet-outline",
                "type": "string"
              },
              {
                "key": "edc-outline",
                "type": "string"
              },
              {
                "key": "edit2-outline",
                "type": "string"
              },
              {
                "key": "edit3-outline",
                "type": "string"
              },
              {
                "key": "edit-outline",
                "type": "string"
              },
              {
                "key": "external-link-outline",
                "type": "string"
              },
              {
                "key": "eye-off-outline",
                "type": "string"
              },
              {
                "key": "eye-outline",
                "type": "string"
              },
              {
                "key": "facebook-outline",
                "type": "string"
              },
              {
                "key": "fast-forward-outline",
                "type": "string"
              },
              {
                "key": "feather-outline",
                "type": "string"
              },
              {
                "key": "figma-outline",
                "type": "string"
              },
              {
                "key": "file-minus-outline",
                "type": "string"
              },
              {
                "key": "file-outline",
                "type": "string"
              },
              {
                "key": "file-plus-outline",
                "type": "string"
              },
              {
                "key": "file-text-outline",
                "type": "string"
              },
              {
                "key": "film-outline",
                "type": "string"
              },
              {
                "key": "filter-outline",
                "type": "string"
              },
              {
                "key": "flag-outline",
                "type": "string"
              },
              {
                "key": "folder-minus-outline",
                "type": "string"
              },
              {
                "key": "folder-outline",
                "type": "string"
              },
              {
                "key": "folder-plus-outline",
                "type": "string"
              },
              {
                "key": "framer-outline",
                "type": "string"
              },
              {
                "key": "frown-outline",
                "type": "string"
              },
              {
                "key": "gift-outline",
                "type": "string"
              },
              {
                "key": "git-branch-outline",
                "type": "string"
              },
              {
                "key": "git-commit-outline",
                "type": "string"
              },
              {
                "key": "git-merge-outline",
                "type": "string"
              },
              {
                "key": "git-pull-request-outline",
                "type": "string"
              },
              {
                "key": "gitlab-outline",
                "type": "string"
              },
              {
                "key": "grid-outline",
                "type": "string"
              },
              {
                "key": "hand-card-outline",
                "type": "string"
              },
              {
                "key": "hard-drive-outline",
                "type": "string"
              },
              {
                "key": "hash-outline",
                "type": "string"
              },
              {
                "key": "headphones-outline",
                "type": "string"
              },
              {
                "key": "heart-outline",
                "type": "string"
              },
              {
                "key": "help-circle-outline",
                "type": "string"
              },
              {
                "key": "hexagon-outline",
                "type": "string"
              },
              {
                "key": "home-outline",
                "type": "string"
              },
              {
                "key": "image-outline",
                "type": "string"
              },
              {
                "key": "inbox-outline",
                "type": "string"
              },
              {
                "key": "info-circle",
                "type": "string"
              },
              {
                "key": "info-outline",
                "type": "string"
              },
              {
                "key": "info-triangle",
                "type": "string"
              },
              {
                "key": "instagram-outline",
                "type": "string"
              },
              {
                "key": "incomplete-loan-outline",
                "type": "string"
              },
              {
                "key": "italic-outline",
                "type": "string"
              },
              {
                "key": "key-outline",
                "type": "string"
              },
              {
                "key": "layers-outline",
                "type": "string"
              },
              {
                "key": "layout-outline",
                "type": "string"
              },
              {
                "key": "life-buoy-outline",
                "type": "string"
              },
              {
                "key": "link2-outline",
                "type": "string"
              },
              {
                "key": "link-outline",
                "type": "string"
              },
              {
                "key": "linkedin-outline",
                "type": "string"
              },
              {
                "key": "list-outline",
                "type": "string"
              },
              {
                "key": "loader-outline",
                "type": "string"
              },
              {
                "key": "location-outline",
                "type": "string"
              },
              {
                "key": "lock-outline",
                "type": "string"
              },
              {
                "key": "log-in-outline",
                "type": "string"
              },
              {
                "key": "log-out-outline",
                "type": "string"
              },
              {
                "key": "mail-outline",
                "type": "string"
              },
              {
                "key": "map-outline",
                "type": "string"
              },
              {
                "key": "map-pin-outline",
                "type": "string"
              },
              {
                "key": "maximize2-outline",
                "type": "string"
              },
              {
                "key": "maximize-outline",
                "type": "string"
              },
              {
                "key": "meh-outline",
                "type": "string"
              },
              {
                "key": "menu-outline",
                "type": "string"
              },
              {
                "key": "merchant-outline",
                "type": "string"
              },
              {
                "key": "message-circle-outline",
                "type": "string"
              },
              {
                "key": "message-square-outline",
                "type": "string"
              },
              {
                "key": "mic-off-outline",
                "type": "string"
              },
              {
                "key": "mic-outline",
                "type": "string"
              },
              {
                "key": "minimize2-outline",
                "type": "string"
              },
              {
                "key": "minimize-outline",
                "type": "string"
              },
              {
                "key": "minus-circle-outline",
                "type": "string"
              },
              {
                "key": "minus-outline",
                "type": "string"
              },
              {
                "key": "minus-square-outline",
                "type": "string"
              },
              {
                "key": "money-in-outline",
                "type": "string"
              },
              {
                "key": "monitor-outline",
                "type": "string"
              },
              {
                "key": "moon-outline",
                "type": "string"
              },
              {
                "key": "more-horizontal-outline",
                "type": "string"
              },
              {
                "key": "more-vertical-outline",
                "type": "string"
              },
              {
                "key": "mouse-pointer-outline",
                "type": "string"
              },
              {
                "key": "move-outline",
                "type": "string"
              },
              {
                "key": "music-outline",
                "type": "string"
              },
              {
                "key": "navigation2-outline",
                "type": "string"
              },
              {
                "key": "navigation-outline",
                "type": "string"
              },
              {
                "key": "octagon-outline",
                "type": "string"
              },
              {
                "key": "package-outline",
                "type": "string"
              },
              {
                "key": "paper-scroll",
                "type": "string"
              },
              {
                "key": "paperclip-outline",
                "type": "string"
              },
              {
                "key": "partnership-outline",
                "type": "string"
              },
              {
                "key": "pause-circle-outline",
                "type": "string"
              },
              {
                "key": "pause-outline",
                "type": "string"
              },
              {
                "key": "pen-tool-outline",
                "type": "string"
              },
              {
                "key": "percent-outline",
                "type": "string"
              },
              {
                "key": "phone-call-outline",
                "type": "string"
              },
              {
                "key": "phone-forwarded-outline",
                "type": "string"
              },
              {
                "key": "phone-incoming-outline",
                "type": "string"
              },
              {
                "key": "phone-missed-outline",
                "type": "string"
              },
              {
                "key": "phone-off-outline",
                "type": "string"
              },
              {
                "key": "phone-outgoing-outline",
                "type": "string"
              },
              {
                "key": "phone-outline",
                "type": "string"
              },
              {
                "key": "pie-chart-outline",
                "type": "string"
              },
              {
                "key": "play-circle-outline",
                "type": "string"
              },
              {
                "key": "play-outline",
                "type": "string"
              },
              {
                "key": "plus-circle-outline",
                "type": "string"
              },
              {
                "key": "plus-outline",
                "type": "string"
              },
              {
                "key": "plus-square-outline",
                "type": "string"
              },
              {
                "key": "pocket-outline",
                "type": "string"
              },
              {
                "key": "power-outline",
                "type": "string"
              },
              {
                "key": "printer-outline",
                "type": "string"
              },
              {
                "key": "radio-outline",
                "type": "string"
              },
              {
                "key": "receipt-outline",
                "type": "string"
              },
              {
                "key": "refresh-ccw-outline",
                "type": "string"
              },
              {
                "key": "refresh-cw-outline",
                "type": "string"
              },
              {
                "key": "refund-money-rp-outline",
                "type": "string"
              },
              {
                "key": "repeat-outline",
                "type": "string"
              },
              {
                "key": "rewind-outline",
                "type": "string"
              },
              {
                "key": "rotate-ccw-outline",
                "type": "string"
              },
              {
                "key": "rotate-cw-outline",
                "type": "string"
              },
              {
                "key": "save-outline",
                "type": "string"
              },
              {
                "key": "scanner-outline",
                "type": "string"
              },
              {
                "key": "scissors-outline",
                "type": "string"
              },
              {
                "key": "search-outline",
                "type": "string"
              },
              {
                "key": "send-outline",
                "type": "string"
              },
              {
                "key": "send-money-rp",
                "type": "string"
              },
              {
                "key": "server-outline",
                "type": "string"
              },
              {
                "key": "settings-outline",
                "type": "string"
              },
              {
                "key": "share2-outline",
                "type": "string"
              },
              {
                "key": "share-outline",
                "type": "string"
              },
              {
                "key": "shield-off-outline",
                "type": "string"
              },
              {
                "key": "shield-outline",
                "type": "string"
              },
              {
                "key": "shopping-bag-outline",
                "type": "string"
              },
              {
                "key": "shopping-cart-outline",
                "type": "string"
              },
              {
                "key": "shuffle-outline",
                "type": "string"
              },
              {
                "key": "sidebar-outline",
                "type": "string"
              },
              {
                "key": "skip-back-outline",
                "type": "string"
              },
              {
                "key": "skip-forward-outline",
                "type": "string"
              },
              {
                "key": "slack-outline",
                "type": "string"
              },
              {
                "key": "slash-outline",
                "type": "string"
              },
              {
                "key": "sliders-outline",
                "type": "string"
              },
              {
                "key": "smartphone-outline",
                "type": "string"
              },
              {
                "key": "smile-outline",
                "type": "string"
              },
              {
                "key": "speaker-outline",
                "type": "string"
              },
              {
                "key": "square-outline",
                "type": "string"
              },
              {
                "key": "star-outline",
                "type": "string"
              },
              {
                "key": "stop-circle-outline",
                "type": "string"
              },
              {
                "key": "sun-outline",
                "type": "string"
              },
              {
                "key": "sunrise-outline",
                "type": "string"
              },
              {
                "key": "sunset-outline",
                "type": "string"
              },
              {
                "key": "supplier-outline",
                "type": "string"
              },
              {
                "key": "tablet-outline",
                "type": "string"
              },
              {
                "key": "tag-outline",
                "type": "string"
              },
              {
                "key": "target1-outline",
                "type": "string"
              },
              {
                "key": "target-outline",
                "type": "string"
              },
              {
                "key": "terminal-outline",
                "type": "string"
              },
              {
                "key": "thermometer-outline",
                "type": "string"
              },
              {
                "key": "thumbs-down-outline",
                "type": "string"
              },
              {
                "key": "thumbs-up-outline",
                "type": "string"
              },
              {
                "key": "toggle-left-outline",
                "type": "string"
              },
              {
                "key": "toggle-right-outline",
                "type": "string"
              },
              {
                "key": "tool-outline",
                "type": "string"
              },
              {
                "key": "trash2-outline",
                "type": "string"
              },
              {
                "key": "trash-outline",
                "type": "string"
              },
              {
                "key": "trello-outline",
                "type": "string"
              },
              {
                "key": "trending-down-outline",
                "type": "string"
              },
              {
                "key": "trending-up-outline",
                "type": "string"
              },
              {
                "key": "triangle-outline",
                "type": "string"
              },
              {
                "key": "truck-outline",
                "type": "string"
              },
              {
                "key": "tv-outline",
                "type": "string"
              },
              {
                "key": "twitch-outline",
                "type": "string"
              },
              {
                "key": "twitter-outline",
                "type": "string"
              },
              {
                "key": "type-outline",
                "type": "string"
              },
              {
                "key": "umbrella-outline",
                "type": "string"
              },
              {
                "key": "underline-outline",
                "type": "string"
              },
              {
                "key": "unlock-outline",
                "type": "string"
              },
              {
                "key": "upload-cloud-outline",
                "type": "string"
              },
              {
                "key": "upload-outline",
                "type": "string"
              },
              {
                "key": "user-check-outline",
                "type": "string"
              },
              {
                "key": "user-minus-outline",
                "type": "string"
              },
              {
                "key": "user-outline",
                "type": "string"
              },
              {
                "key": "user-plus-outline",
                "type": "string"
              },
              {
                "key": "user-xoutline",
                "type": "string"
              },
              {
                "key": "users-outline",
                "type": "string"
              },
              {
                "key": "video-of-outline",
                "type": "string"
              },
              {
                "key": "video-outline",
                "type": "string"
              },
              {
                "key": "voicemail-outline",
                "type": "string"
              },
              {
                "key": "volume1-outline",
                "type": "string"
              },
              {
                "key": "volume2-outline",
                "type": "string"
              },
              {
                "key": "volume-outline",
                "type": "string"
              },
              {
                "key": "volume-xoutline",
                "type": "string"
              },
              {
                "key": "watch-outline",
                "type": "string"
              },
              {
                "key": "web-outline",
                "type": "string"
              },
              {
                "key": "wifi1-outline",
                "type": "string"
              },
              {
                "key": "wifi-off-outline",
                "type": "string"
              },
              {
                "key": "wifi-outline",
                "type": "string"
              },
              {
                "key": "wind-outline",
                "type": "string"
              },
              {
                "key": "xcircle-outline",
                "type": "string"
              },
              {
                "key": "xoctagon-outline",
                "type": "string"
              },
              {
                "key": "xsquare-outline",
                "type": "string"
              },
              {
                "key": "youtube-outline",
                "type": "string"
              },
              {
                "key": "zap-off-outline",
                "type": "string"
              },
              {
                "key": "zap-outline",
                "type": "string"
              },
              {
                "key": "zoom-in-outline",
                "type": "string"
              },
              {
                "key": "zoom-out-outline",
                "type": "string"
              }
            ]
          }
        },
        "onClick": {
          "type": "object",
          "optional": true,
          "description": "Callback function triggered when icon is clicked by user",
          "typeDefinition": {
            "typeString": "() => void",
            "isFunction": true,
            "props": [
              {
                "key": "void",
                "type": "intrinsic",
                "isReturn": true
              }
            ]
          }
        },
        "size": {
          "type": "union",
          "optional": true,
          "description": "Controls icon dimensions using predefined size variants from iconSizeMap",
          "typeDefinition": {
            "typeString": "xs | sm | md | lg | xl",
            "props": [
              {
                "key": "xs",
                "type": "string"
              },
              {
                "key": "sm",
                "type": "string"
              },
              {
                "key": "md",
                "type": "string"
              },
              {
                "key": "lg",
                "type": "string"
              },
              {
                "key": "xl",
                "type": "string"
              }
            ]
          }
        },
        "useCurrentColor": {
          "type": "boolean",
          "description": "Enables icon to inherit its color from parent element styling",
          "optional": true
        },
        "width": {
          "type": "number",
          "description": "Explicitly sets icon width in pixels, overriding the default size",
          "optional": true
        }
      },
      "componentTypeName": "IconProps"
    },
    {
      "name": "Empty",
      "description": "The Empty component serves as a placeholder, indicating the absence of content or data. It is useful for maintaining layout consistency and guiding users when no information is available, enhancing user experience by clearly communicating emptiness without clutter.",
      "props": {},
      "componentTypeName": "EmptyProps"
    },
    {
      "name": "Dropdown",
      "description": "The Dropdown component is a user interface element that allows users to select an option from a list. It enhances navigation by conserving space and providing a clean, organized way to present multiple choices, making it ideal for forms and menus.",
      "props": {
        "align": {
          "type": "Align",
          "optional": true,
          "typeDefinition": {
            "typeString": "Align"
          }
        },
        "arrow": {
          "type": "union",
          "optional": true,
          "description": "Shows or hides the dropdown arrow indicator",
          "typeDefinition": {
            "typeString": "boolean | DropdownArrowOptions",
            "props": [
              {
                "key": "boolean",
                "type": "intrinsic"
              },
              {
                "key": "DropdownArrowOptions",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "DropdownArrowOptions"
                }
              }
            ]
          }
        },
        "autoAdjustOverflow": {
          "type": "union",
          "optional": true,
          "description": "Enables automatic repositioning when dropdown would render outside viewport",
          "typeDefinition": {
            "typeString": "boolean | AdjustOverflow",
            "props": [
              {
                "key": "boolean",
                "type": "intrinsic"
              },
              {
                "key": "AdjustOverflow",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "AdjustOverflow"
                }
              }
            ]
          }
        },
        "autoFocus": {
          "type": "boolean",
          "description": "Automatically focuses the first menu item when dropdown opens",
          "optional": true
        },
        "children": {
          "type": "ReactNode",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactNode"
          }
        },
        "className": {
          "type": "string",
          "description": "Custom CSS class name for additional styling",
          "optional": true
        },
        "destroyPopupOnHide": {
          "type": "boolean",
          "description": "Removes dropdown menu from DOM when hidden to free up memory",
          "optional": true
        },
        "disabled": {
          "type": "boolean",
          "description": "Prevents user interaction with the dropdown menu",
          "optional": true
        },
        "dropdownRender": {
          "type": "object",
          "optional": true,
          "description": "Allows custom rendering of the dropdown menu content",
          "typeDefinition": {
            "typeString": "(originNode: ReactNode) => ReactNode",
            "isFunction": true,
            "props": [
              {
                "key": "originNode",
                "type": "ReactNode",
                "isParam": true,
                "optional": false,
                "typeDefinition": {
                  "typeString": "ReactNode"
                }
              },
              {
                "key": "ReactNode",
                "type": "reference",
                "isReturn": true,
                "typeDefinition": {
                  "typeString": "ReactNode"
                }
              }
            ]
          }
        },
        "forceRender": {
          "type": "boolean",
          "optional": true
        },
        "getPopupContainer": {
          "type": "object",
          "optional": true,
          "description": "Specifies the parent DOM element that will contain the dropdown menu",
          "typeDefinition": {
            "typeString": "(triggerNode: HTMLElement) => HTMLElement",
            "isFunction": true,
            "props": [
              {
                "key": "triggerNode",
                "type": "HTMLElement",
                "isParam": true,
                "optional": false,
                "typeDefinition": {
                  "typeString": "HTMLElement"
                }
              },
              {
                "key": "HTMLElement",
                "type": "reference",
                "isReturn": true,
                "typeDefinition": {
                  "typeString": "HTMLElement"
                }
              }
            ]
          }
        },
        "menu": {
          "type": "MenuProps",
          "optional": true,
          "description": "Configuration object for dropdown menu items and behavior",
          "typeDefinition": {
            "typeString": "{ about?: string, accessKey?: string, activeKey?: string, aria-activedescendant?: string, aria-atomic?: Booleanish, aria-autocomplete?: 'list' | 'none' | 'inline' | 'both', aria-busy?: Booleanish, aria-checked?: boolean | 'true' | 'false' | 'mixed', aria-colcount?: number, aria-colindex?: number, aria-colspan?: number, aria-controls?: string, aria-current?: boolean | 'time' | 'step' | 'date' | 'true' | 'false' | 'page' | 'location', aria-describedby?: string, aria-details?: string, aria-disabled?: Booleanish, aria-dropeffect?: 'link' | 'none' | 'copy' | 'execute' | 'move' | 'popup', aria-errormessage?: string, aria-expanded?: Booleanish, aria-flowto?: string, aria-grabbed?: Booleanish, aria-haspopup?: boolean | 'dialog' | 'menu' | 'grid' | 'listbox' | 'tree' | 'true' | 'false', aria-hidden?: Booleanish, aria-invalid?: boolean | 'true' | 'false' | 'grammar' | 'spelling', aria-keyshortcuts?: string, aria-label?: string, aria-labelledby?: string, aria-level?: number, aria-live?: 'off' | 'assertive' | 'polite', aria-modal?: Booleanish, aria-multiline?: Booleanish, aria-multiselectable?: Booleanish, aria-orientation?: 'horizontal' | 'vertical', aria-owns?: string, aria-placeholder?: string, aria-posinset?: number, aria-pressed?: boolean | 'true' | 'false' | 'mixed', aria-readonly?: Booleanish, aria-relevant?: 'text' | 'additions' | 'additions removals' | 'additions text' | 'all' | 'removals' | 'removals additions' | 'removals text' | 'text additions' | 'text removals', aria-required?: Booleanish, aria-roledescription?: string, aria-rowcount?: number, aria-rowindex?: number, aria-rowspan?: number, aria-selected?: Booleanish, aria-setsize?: number, aria-sort?: 'none' | 'ascending' | 'descending' | 'other', aria-valuemax?: number, aria-valuemin?: number, aria-valuenow?: number, aria-valuetext?: string, autoCapitalize?: string, autoCorrect?: string, autoFocus?: boolean, autoSave?: string, builtinPlacements?: BuiltinPlacements, children?: ReactNode, className?: string, color?: string, content?: string, contentEditable?: 'inherit' | Booleanish, contextMenu?: string, dangerouslySetInnerHTML?: { __html: string | TrustedHTML }, datatype?: string, defaultActiveFirst?: boolean, defaultChecked?: boolean, defaultMotions?: Partial, defaultOpenKeys?: string[], defaultSelectedKeys?: string[], defaultValue?: string | number | typeOperator, direction?: 'ltr' | 'rtl', disabled?: boolean, draggable?: Booleanish, expandIcon?: RenderIconType, forceSubMenuRender?: boolean, getPopupContainer?: (node: HTMLElement) => HTMLElement, hidden?: boolean, id?: string, inlineCollapsed?: boolean, inlineIndent?: number, inlist?: any, inputMode?: 'text' | 'search' | 'none' | 'email' | 'tel' | 'url' | 'numeric' | 'decimal', is?: string, itemIcon?: RenderIconType, itemID?: string, itemProp?: string, itemRef?: string, items?: ItemType[], itemScope?: boolean, itemType?: string, lang?: string, mode?: MenuMode, motion?: CSSMotionProps, multiple?: boolean, nonce?: string, onAbort?: ReactEventHandler, onAbortCapture?: ReactEventHandler, onAnimationEnd?: AnimationEventHandler, onAnimationEndCapture?: AnimationEventHandler, onAnimationIteration?: AnimationEventHandler, onAnimationIterationCapture?: AnimationEventHandler, onAnimationStart?: AnimationEventHandler, onAnimationStartCapture?: AnimationEventHandler, onAuxClick?: MouseEventHandler, onAuxClickCapture?: MouseEventHandler, onBeforeInput?: FormEventHandler, onBeforeInputCapture?: FormEventHandler, onBlur?: FocusEventHandler, onBlurCapture?: FocusEventHandler, onCanPlay?: ReactEventHandler, onCanPlayCapture?: ReactEventHandler, onCanPlayThrough?: ReactEventHandler, onCanPlayThroughCapture?: ReactEventHandler, onChange?: FormEventHandler, onChangeCapture?: FormEventHandler, onClick?: MenuClickEventHandler, onClickCapture?: MouseEventHandler, onCompositionEnd?: CompositionEventHandler, onCompositionEndCapture?: CompositionEventHandler, onCompositionStart?: CompositionEventHandler, onCompositionStartCapture?: CompositionEventHandler, onCompositionUpdate?: CompositionEventHandler, onCompositionUpdateCapture?: CompositionEventHandler, onContextMenu?: MouseEventHandler, onContextMenuCapture?: MouseEventHandler, onCopy?: ClipboardEventHandler, onCopyCapture?: ClipboardEventHandler, onCut?: ClipboardEventHandler, onCutCapture?: ClipboardEventHandler, onDeselect?: SelectEventHandler, onDoubleClick?: MouseEventHandler, onDoubleClickCapture?: MouseEventHandler, onDrag?: DragEventHandler, onDragCapture?: DragEventHandler, onDragEnd?: DragEventHandler, onDragEndCapture?: DragEventHandler, onDragEnter?: DragEventHandler, onDragEnterCapture?: DragEventHandler, onDragExit?: DragEventHandler, onDragExitCapture?: DragEventHandler, onDragLeave?: DragEventHandler, onDragLeaveCapture?: DragEventHandler, onDragOver?: DragEventHandler, onDragOverCapture?: DragEventHandler, onDragStart?: DragEventHandler, onDragStartCapture?: DragEventHandler, onDrop?: DragEventHandler, onDropCapture?: DragEventHandler, onDurationChange?: ReactEventHandler, onDurationChangeCapture?: ReactEventHandler, onEmptied?: ReactEventHandler, onEmptiedCapture?: ReactEventHandler, onEncrypted?: ReactEventHandler, onEncryptedCapture?: ReactEventHandler, onEnded?: ReactEventHandler, onEndedCapture?: ReactEventHandler, onError?: ReactEventHandler, onErrorCapture?: ReactEventHandler, onFocus?: FocusEventHandler, onFocusCapture?: FocusEventHandler, onGotPointerCapture?: PointerEventHandler, onGotPointerCaptureCapture?: PointerEventHandler, onInput?: FormEventHandler, onInputCapture?: FormEventHandler, onInvalid?: FormEventHandler, onInvalidCapture?: FormEventHandler, onKeyDown?: KeyboardEventHandler, onKeyDownCapture?: KeyboardEventHandler, onKeyPress?: KeyboardEventHandler, onKeyPressCapture?: KeyboardEventHandler, onKeyUp?: KeyboardEventHandler, onKeyUpCapture?: KeyboardEventHandler, onLoad?: ReactEventHandler, onLoadCapture?: ReactEventHandler, onLoadedData?: ReactEventHandler, onLoadedDataCapture?: ReactEventHandler, onLoadedMetadata?: ReactEventHandler, onLoadedMetadataCapture?: ReactEventHandler, onLoadStart?: ReactEventHandler, onLoadStartCapture?: ReactEventHandler, onLostPointerCapture?: PointerEventHandler, onLostPointerCaptureCapture?: PointerEventHandler, onMouseDown?: MouseEventHandler, onMouseDownCapture?: MouseEventHandler, onMouseEnter?: MouseEventHandler, onMouseLeave?: MouseEventHandler, onMouseMove?: MouseEventHandler, onMouseMoveCapture?: MouseEventHandler, onMouseOut?: MouseEventHandler, onMouseOutCapture?: MouseEventHandler, onMouseOver?: MouseEventHandler, onMouseOverCapture?: MouseEventHandler, onMouseUp?: MouseEventHandler, onMouseUpCapture?: MouseEventHandler, onOpenChange?: (openKeys: string[]) => void, onPaste?: ClipboardEventHandler, onPasteCapture?: ClipboardEventHandler, onPause?: ReactEventHandler, onPauseCapture?: ReactEventHandler, onPlay?: ReactEventHandler, onPlayCapture?: ReactEventHandler, onPlaying?: ReactEventHandler, onPlayingCapture?: ReactEventHandler, onPointerCancel?: PointerEventHandler, onPointerCancelCapture?: PointerEventHandler, onPointerDown?: PointerEventHandler, onPointerDownCapture?: PointerEventHandler, onPointerEnter?: PointerEventHandler, onPointerEnterCapture?: PointerEventHandler, onPointerLeave?: PointerEventHandler, onPointerLeaveCapture?: PointerEventHandler, onPointerMove?: PointerEventHandler, onPointerMoveCapture?: PointerEventHandler, onPointerOut?: PointerEventHandler, onPointerOutCapture?: PointerEventHandler, onPointerOver?: PointerEventHandler, onPointerOverCapture?: PointerEventHandler, onPointerUp?: PointerEventHandler, onPointerUpCapture?: PointerEventHandler, onProgress?: ReactEventHandler, onProgressCapture?: ReactEventHandler, onRateChange?: ReactEventHandler, onRateChangeCapture?: ReactEventHandler, onReset?: FormEventHandler, onResetCapture?: FormEventHandler, onResize?: ReactEventHandler, onResizeCapture?: ReactEventHandler, onScroll?: UIEventHandler, onScrollCapture?: UIEventHandler, onSeeked?: ReactEventHandler, onSeekedCapture?: ReactEventHandler, onSeeking?: ReactEventHandler, onSeekingCapture?: ReactEventHandler, onSelect?: SelectEventHandler, onSelectCapture?: ReactEventHandler, onStalled?: ReactEventHandler, onStalledCapture?: ReactEventHandler, onSubmit?: FormEventHandler, onSubmitCapture?: FormEventHandler, onSuspend?: ReactEventHandler, onSuspendCapture?: ReactEventHandler, onTimeUpdate?: ReactEventHandler, onTimeUpdateCapture?: ReactEventHandler, onTouchCancel?: TouchEventHandler, onTouchCancelCapture?: TouchEventHandler, onTouchEnd?: TouchEventHandler, onTouchEndCapture?: TouchEventHandler, onTouchMove?: TouchEventHandler, onTouchMoveCapture?: TouchEventHandler, onTouchStart?: TouchEventHandler, onTouchStartCapture?: TouchEventHandler, onTransitionEnd?: TransitionEventHandler, onTransitionEndCapture?: TransitionEventHandler, onVolumeChange?: ReactEventHandler, onVolumeChangeCapture?: ReactEventHandler, onWaiting?: ReactEventHandler, onWaitingCapture?: ReactEventHandler, onWheel?: WheelEventHandler, onWheelCapture?: WheelEventHandler, openKeys?: string[], overflowedIndicator?: ReactNode, placeholder?: string, prefix?: string, prefixCls?: string, property?: string, radioGroup?: string, rel?: string, resource?: string, results?: number, rev?: string, role?: AriaRole, rootClassName?: string, security?: string, selectable?: boolean, selectedKeys?: string[], slot?: string, spellCheck?: Booleanish, style?: CSSProperties, subMenuCloseDelay?: number, subMenuOpenDelay?: number, suppressContentEditableWarning?: boolean, suppressHydrationWarning?: boolean, tabIndex?: number, theme?: MenuTheme, title?: string, translate?: 'no' | 'yes', triggerSubMenuAction?: TriggerSubMenuAction, typeof?: string, unselectable?: 'off' | 'on', vocab?: string }",
            "props": [
              {
                "key": "about",
                "type": "string",
                "optional": true
              },
              {
                "key": "accessKey",
                "type": "string",
                "optional": true
              },
              {
                "key": "activeKey",
                "type": "string",
                "optional": true
              },
              {
                "key": "aria-activedescendant",
                "type": "string",
                "optional": true
              },
              {
                "key": "aria-atomic",
                "type": "Booleanish",
                "optional": true,
                "typeDefinition": {
                  "typeString": "Booleanish"
                }
              },
              {
                "key": "aria-autocomplete",
                "type": "'list' | 'none' | 'inline' | 'both'",
                "optional": true,
                "typeDefinition": {
                  "typeString": "list | none | inline | both",
                  "props": [
                    {
                      "key": "list",
                      "type": "string"
                    },
                    {
                      "key": "none",
                      "type": "string"
                    },
                    {
                      "key": "inline",
                      "type": "string"
                    },
                    {
                      "key": "both",
                      "type": "string"
                    }
                  ]
                }
              },
              {
                "key": "aria-busy",
                "type": "Booleanish",
                "optional": true,
                "typeDefinition": {
                  "typeString": "Booleanish"
                }
              },
              {
                "key": "aria-checked",
                "type": "boolean | 'true' | 'false' | 'mixed'",
                "optional": true,
                "typeDefinition": {
                  "typeString": "boolean | true | false | mixed",
                  "props": [
                    {
                      "key": "boolean",
                      "type": "intrinsic"
                    },
                    {
                      "key": "true",
                      "type": "string"
                    },
                    {
                      "key": "false",
                      "type": "string"
                    },
                    {
                      "key": "mixed",
                      "type": "string"
                    }
                  ]
                }
              },
              {
                "key": "aria-colcount",
                "type": "number",
                "optional": true
              },
              {
                "key": "aria-colindex",
                "type": "number",
                "optional": true
              },
              {
                "key": "aria-colspan",
                "type": "number",
                "optional": true
              },
              {
                "key": "aria-controls",
                "type": "string",
                "optional": true
              },
              {
                "key": "aria-current",
                "type": "boolean | 'time' | 'step' | 'date' | 'true' | 'false' | 'page' | 'location'",
                "optional": true,
                "typeDefinition": {
                  "typeString": "boolean | time | step | date | true | false | page | location",
                  "props": [
                    {
                      "key": "boolean",
                      "type": "intrinsic"
                    },
                    {
                      "key": "time",
                      "type": "string"
                    },
                    {
                      "key": "step",
                      "type": "string"
                    },
                    {
                      "key": "date",
                      "type": "string"
                    },
                    {
                      "key": "true",
                      "type": "string"
                    },
                    {
                      "key": "false",
                      "type": "string"
                    },
                    {
                      "key": "page",
                      "type": "string"
                    },
                    {
                      "key": "location",
                      "type": "string"
                    }
                  ]
                }
              },
              {
                "key": "aria-describedby",
                "type": "string",
                "optional": true
              },
              {
                "key": "aria-details",
                "type": "string",
                "optional": true
              },
              {
                "key": "aria-disabled",
                "type": "Booleanish",
                "optional": true,
                "typeDefinition": {
                  "typeString": "Booleanish"
                }
              },
              {
                "key": "aria-dropeffect",
                "type": "'link' | 'none' | 'copy' | 'execute' | 'move' | 'popup'",
                "optional": true,
                "typeDefinition": {
                  "typeString": "link | none | copy | execute | move | popup",
                  "props": [
                    {
                      "key": "link",
                      "type": "string"
                    },
                    {
                      "key": "none",
                      "type": "string"
                    },
                    {
                      "key": "copy",
                      "type": "string"
                    },
                    {
                      "key": "execute",
                      "type": "string"
                    },
                    {
                      "key": "move",
                      "type": "string"
                    },
                    {
                      "key": "popup",
                      "type": "string"
                    }
                  ]
                }
              },
              {
                "key": "aria-errormessage",
                "type": "string",
                "optional": true
              },
              {
                "key": "aria-expanded",
                "type": "Booleanish",
                "optional": true,
                "typeDefinition": {
                  "typeString": "Booleanish"
                }
              },
              {
                "key": "aria-flowto",
                "type": "string",
                "optional": true
              },
              {
                "key": "aria-grabbed",
                "type": "Booleanish",
                "optional": true,
                "typeDefinition": {
                  "typeString": "Booleanish"
                }
              },
              {
                "key": "aria-haspopup",
                "type": "boolean | 'dialog' | 'menu' | 'grid' | 'listbox' | 'tree' | 'true' | 'false'",
                "optional": true,
                "typeDefinition": {
                  "typeString": "boolean | dialog | menu | grid | listbox | tree | true | false",
                  "props": [
                    {
                      "key": "boolean",
                      "type": "intrinsic"
                    },
                    {
                      "key": "dialog",
                      "type": "string"
                    },
                    {
                      "key": "menu",
                      "type": "string"
                    },
                    {
                      "key": "grid",
                      "type": "string"
                    },
                    {
                      "key": "listbox",
                      "type": "string"
                    },
                    {
                      "key": "tree",
                      "type": "string"
                    },
                    {
                      "key": "true",
                      "type": "string"
                    },
                    {
                      "key": "false",
                      "type": "string"
                    }
                  ]
                }
              },
              {
                "key": "aria-hidden",
                "type": "Booleanish",
                "optional": true,
                "typeDefinition": {
                  "typeString": "Booleanish"
                }
              },
              {
                "key": "aria-invalid",
                "type": "boolean | 'true' | 'false' | 'grammar' | 'spelling'",
                "optional": true,
                "typeDefinition": {
                  "typeString": "boolean | true | false | grammar | spelling",
                  "props": [
                    {
                      "key": "boolean",
                      "type": "intrinsic"
                    },
                    {
                      "key": "true",
                      "type": "string"
                    },
                    {
                      "key": "false",
                      "type": "string"
                    },
                    {
                      "key": "grammar",
                      "type": "string"
                    },
                    {
                      "key": "spelling",
                      "type": "string"
                    }
                  ]
                }
              },
              {
                "key": "aria-keyshortcuts",
                "type": "string",
                "optional": true
              },
              {
                "key": "aria-label",
                "type": "string",
                "optional": true
              },
              {
                "key": "aria-labelledby",
                "type": "string",
                "optional": true
              },
              {
                "key": "aria-level",
                "type": "number",
                "optional": true
              },
              {
                "key": "aria-live",
                "type": "'off' | 'assertive' | 'polite'",
                "optional": true,
                "typeDefinition": {
                  "typeString": "off | assertive | polite",
                  "props": [
                    {
                      "key": "off",
                      "type": "string"
                    },
                    {
                      "key": "assertive",
                      "type": "string"
                    },
                    {
                      "key": "polite",
                      "type": "string"
                    }
                  ]
                }
              },
              {
                "key": "aria-modal",
                "type": "Booleanish",
                "optional": true,
                "typeDefinition": {
                  "typeString": "Booleanish"
                }
              },
              {
                "key": "aria-multiline",
                "type": "Booleanish",
                "optional": true,
                "typeDefinition": {
                  "typeString": "Booleanish"
                }
              },
              {
                "key": "aria-multiselectable",
                "type": "Booleanish",
                "optional": true,
                "typeDefinition": {
                  "typeString": "Booleanish"
                }
              },
              {
                "key": "aria-orientation",
                "type": "'horizontal' | 'vertical'",
                "optional": true,
                "typeDefinition": {
                  "typeString": "horizontal | vertical",
                  "props": [
                    {
                      "key": "horizontal",
                      "type": "string"
                    },
                    {
                      "key": "vertical",
                      "type": "string"
                    }
                  ]
                }
              },
              {
                "key": "aria-owns",
                "type": "string",
                "optional": true
              },
              {
                "key": "aria-placeholder",
                "type": "string",
                "optional": true
              },
              {
                "key": "aria-posinset",
                "type": "number",
                "optional": true
              },
              {
                "key": "aria-pressed",
                "type": "boolean | 'true' | 'false' | 'mixed'",
                "optional": true,
                "typeDefinition": {
                  "typeString": "boolean | true | false | mixed",
                  "props": [
                    {
                      "key": "boolean",
                      "type": "intrinsic"
                    },
                    {
                      "key": "true",
                      "type": "string"
                    },
                    {
                      "key": "false",
                      "type": "string"
                    },
                    {
                      "key": "mixed",
                      "type": "string"
                    }
                  ]
                }
              },
              {
                "key": "aria-readonly",
                "type": "Booleanish",
                "optional": true,
                "typeDefinition": {
                  "typeString": "Booleanish"
                }
              },
              {
                "key": "aria-relevant",
                "type": "'text' | 'additions' | 'additions removals' | 'additions text' | 'all' | 'removals' | 'removals additions' | 'removals text' | 'text additions' | 'text removals'",
                "optional": true,
                "typeDefinition": {
                  "typeString": "text | additions | additions removals | additions text | all | removals | removals additions | removals text | text additions | text removals",
                  "props": [
                    {
                      "key": "text",
                      "type": "string"
                    },
                    {
                      "key": "additions",
                      "type": "string"
                    },
                    {
                      "key": "additions removals",
                      "type": "string"
                    },
                    {
                      "key": "additions text",
                      "type": "string"
                    },
                    {
                      "key": "all",
                      "type": "string"
                    },
                    {
                      "key": "removals",
                      "type": "string"
                    },
                    {
                      "key": "removals additions",
                      "type": "string"
                    },
                    {
                      "key": "removals text",
                      "type": "string"
                    },
                    {
                      "key": "text additions",
                      "type": "string"
                    },
                    {
                      "key": "text removals",
                      "type": "string"
                    }
                  ]
                }
              },
              {
                "key": "aria-required",
                "type": "Booleanish",
                "optional": true,
                "typeDefinition": {
                  "typeString": "Booleanish"
                }
              },
              {
                "key": "aria-roledescription",
                "type": "string",
                "optional": true
              },
              {
                "key": "aria-rowcount",
                "type": "number",
                "optional": true
              },
              {
                "key": "aria-rowindex",
                "type": "number",
                "optional": true
              },
              {
                "key": "aria-rowspan",
                "type": "number",
                "optional": true
              },
              {
                "key": "aria-selected",
                "type": "Booleanish",
                "optional": true,
                "typeDefinition": {
                  "typeString": "Booleanish"
                }
              },
              {
                "key": "aria-setsize",
                "type": "number",
                "optional": true
              },
              {
                "key": "aria-sort",
                "type": "'none' | 'ascending' | 'descending' | 'other'",
                "optional": true,
                "typeDefinition": {
                  "typeString": "none | ascending | descending | other",
                  "props": [
                    {
                      "key": "none",
                      "type": "string"
                    },
                    {
                      "key": "ascending",
                      "type": "string"
                    },
                    {
                      "key": "descending",
                      "type": "string"
                    },
                    {
                      "key": "other",
                      "type": "string"
                    }
                  ]
                }
              },
              {
                "key": "aria-valuemax",
                "type": "number",
                "optional": true
              },
              {
                "key": "aria-valuemin",
                "type": "number",
                "optional": true
              },
              {
                "key": "aria-valuenow",
                "type": "number",
                "optional": true
              },
              {
                "key": "aria-valuetext",
                "type": "string",
                "optional": true
              },
              {
                "key": "autoCapitalize",
                "type": "string",
                "optional": true
              },
              {
                "key": "autoCorrect",
                "type": "string",
                "optional": true
              },
              {
                "key": "autoFocus",
                "type": "boolean",
                "optional": true
              },
              {
                "key": "autoSave",
                "type": "string",
                "optional": true
              },
              {
                "key": "builtinPlacements",
                "type": "BuiltinPlacements",
                "optional": true,
                "typeDefinition": {
                  "typeString": "BuiltinPlacements"
                }
              },
              {
                "key": "children",
                "type": "ReactNode",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactNode"
                }
              },
              {
                "key": "className",
                "type": "string",
                "optional": true
              },
              {
                "key": "color",
                "type": "string",
                "optional": true
              },
              {
                "key": "content",
                "type": "string",
                "optional": true
              },
              {
                "key": "contentEditable",
                "type": "'inherit' | Booleanish",
                "optional": true,
                "typeDefinition": {
                  "typeString": "inherit | Booleanish",
                  "props": [
                    {
                      "key": "inherit",
                      "type": "string"
                    },
                    {
                      "key": "Booleanish",
                      "type": "reference",
                      "typeDefinition": {
                        "typeString": "Booleanish"
                      }
                    }
                  ]
                }
              },
              {
                "key": "contextMenu",
                "type": "string",
                "optional": true
              },
              {
                "key": "dangerouslySetInnerHTML",
                "type": "{ __html: string | TrustedHTML }",
                "optional": true,
                "typeDefinition": {
                  "typeString": "{ __html: string | TrustedHTML }",
                  "props": [
                    {
                      "key": "__html",
                      "type": "string | TrustedHTML",
                      "typeDefinition": {
                        "typeString": "string | TrustedHTML",
                        "props": [
                          {
                            "key": "string",
                            "type": "intrinsic"
                          },
                          {
                            "key": "TrustedHTML",
                            "type": "reference",
                            "typeDefinition": {
                              "typeString": "TrustedHTML"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "key": "datatype",
                "type": "string",
                "optional": true
              },
              {
                "key": "defaultActiveFirst",
                "type": "boolean",
                "optional": true
              },
              {
                "key": "defaultChecked",
                "type": "boolean",
                "optional": true
              },
              {
                "key": "defaultMotions",
                "type": "Partial",
                "optional": true,
                "typeDefinition": {
                  "typeString": "Partial"
                }
              },
              {
                "key": "defaultOpenKeys",
                "type": "string[]",
                "optional": true,
                "typeDefinition": {
                  "typeString": "string[]",
                  "isArray": true,
                  "props": [
                    {
                      "key": "string",
                      "type": "intrinsic"
                    }
                  ]
                }
              },
              {
                "key": "defaultSelectedKeys",
                "type": "string[]",
                "optional": true,
                "typeDefinition": {
                  "typeString": "string[]",
                  "isArray": true,
                  "props": [
                    {
                      "key": "string",
                      "type": "intrinsic"
                    }
                  ]
                }
              },
              {
                "key": "defaultValue",
                "type": "string | number | typeOperator",
                "optional": true,
                "typeDefinition": {
                  "typeString": "string | number | typeOperator",
                  "props": [
                    {
                      "key": "string",
                      "type": "intrinsic"
                    },
                    {
                      "key": "number",
                      "type": "intrinsic"
                    },
                    {
                      "key": "typeOperator",
                      "type": "typeOperator"
                    }
                  ]
                }
              },
              {
                "key": "direction",
                "type": "'ltr' | 'rtl'",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ltr | rtl",
                  "props": [
                    {
                      "key": "ltr",
                      "type": "string"
                    },
                    {
                      "key": "rtl",
                      "type": "string"
                    }
                  ]
                }
              },
              {
                "key": "disabled",
                "type": "boolean",
                "optional": true
              },
              {
                "key": "draggable",
                "type": "Booleanish",
                "optional": true,
                "typeDefinition": {
                  "typeString": "Booleanish"
                }
              },
              {
                "key": "expandIcon",
                "type": "RenderIconType",
                "optional": true,
                "typeDefinition": {
                  "typeString": "RenderIconType"
                }
              },
              {
                "key": "forceSubMenuRender",
                "type": "boolean",
                "optional": true
              },
              {
                "key": "getPopupContainer",
                "type": "(node: HTMLElement) => HTMLElement",
                "optional": true,
                "typeDefinition": {
                  "typeString": "(node: HTMLElement) => HTMLElement",
                  "isFunction": true,
                  "props": [
                    {
                      "key": "node",
                      "type": "HTMLElement",
                      "isParam": true,
                      "optional": false,
                      "typeDefinition": {
                        "typeString": "HTMLElement"
                      }
                    },
                    {
                      "key": "HTMLElement",
                      "type": "reference",
                      "isReturn": true,
                      "typeDefinition": {
                        "typeString": "HTMLElement"
                      }
                    }
                  ]
                }
              },
              {
                "key": "hidden",
                "type": "boolean",
                "optional": true
              },
              {
                "key": "id",
                "type": "string",
                "optional": true
              },
              {
                "key": "inlineCollapsed",
                "type": "boolean",
                "optional": true
              },
              {
                "key": "inlineIndent",
                "type": "number",
                "optional": true
              },
              {
                "key": "inlist",
                "type": "any",
                "optional": true
              },
              {
                "key": "inputMode",
                "type": "'text' | 'search' | 'none' | 'email' | 'tel' | 'url' | 'numeric' | 'decimal'",
                "optional": true,
                "typeDefinition": {
                  "typeString": "text | search | none | email | tel | url | numeric | decimal",
                  "props": [
                    {
                      "key": "text",
                      "type": "string"
                    },
                    {
                      "key": "search",
                      "type": "string"
                    },
                    {
                      "key": "none",
                      "type": "string"
                    },
                    {
                      "key": "email",
                      "type": "string"
                    },
                    {
                      "key": "tel",
                      "type": "string"
                    },
                    {
                      "key": "url",
                      "type": "string"
                    },
                    {
                      "key": "numeric",
                      "type": "string"
                    },
                    {
                      "key": "decimal",
                      "type": "string"
                    }
                  ]
                }
              },
              {
                "key": "is",
                "type": "string",
                "optional": true
              },
              {
                "key": "itemIcon",
                "type": "RenderIconType",
                "optional": true,
                "typeDefinition": {
                  "typeString": "RenderIconType"
                }
              },
              {
                "key": "itemID",
                "type": "string",
                "optional": true
              },
              {
                "key": "itemProp",
                "type": "string",
                "optional": true
              },
              {
                "key": "itemRef",
                "type": "string",
                "optional": true
              },
              {
                "key": "items",
                "type": "ItemType[]",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ItemType[]",
                  "isArray": true,
                  "props": [
                    {
                      "key": "ItemType",
                      "type": "reference",
                      "typeDefinition": {
                        "typeString": "ItemType"
                      }
                    }
                  ]
                }
              },
              {
                "key": "itemScope",
                "type": "boolean",
                "optional": true
              },
              {
                "key": "itemType",
                "type": "string",
                "optional": true
              },
              {
                "key": "lang",
                "type": "string",
                "optional": true
              },
              {
                "key": "mode",
                "type": "MenuMode",
                "optional": true,
                "typeDefinition": {
                  "typeString": "MenuMode"
                }
              },
              {
                "key": "motion",
                "type": "CSSMotionProps",
                "optional": true,
                "typeDefinition": {
                  "typeString": "CSSMotionProps"
                }
              },
              {
                "key": "multiple",
                "type": "boolean",
                "optional": true
              },
              {
                "key": "nonce",
                "type": "string",
                "optional": true
              },
              {
                "key": "onAbort",
                "type": "ReactEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactEventHandler"
                }
              },
              {
                "key": "onAbortCapture",
                "type": "ReactEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactEventHandler"
                }
              },
              {
                "key": "onAnimationEnd",
                "type": "AnimationEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "AnimationEventHandler"
                }
              },
              {
                "key": "onAnimationEndCapture",
                "type": "AnimationEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "AnimationEventHandler"
                }
              },
              {
                "key": "onAnimationIteration",
                "type": "AnimationEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "AnimationEventHandler"
                }
              },
              {
                "key": "onAnimationIterationCapture",
                "type": "AnimationEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "AnimationEventHandler"
                }
              },
              {
                "key": "onAnimationStart",
                "type": "AnimationEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "AnimationEventHandler"
                }
              },
              {
                "key": "onAnimationStartCapture",
                "type": "AnimationEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "AnimationEventHandler"
                }
              },
              {
                "key": "onAuxClick",
                "type": "MouseEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "MouseEventHandler"
                }
              },
              {
                "key": "onAuxClickCapture",
                "type": "MouseEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "MouseEventHandler"
                }
              },
              {
                "key": "onBeforeInput",
                "type": "FormEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "FormEventHandler"
                }
              },
              {
                "key": "onBeforeInputCapture",
                "type": "FormEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "FormEventHandler"
                }
              },
              {
                "key": "onBlur",
                "type": "FocusEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "FocusEventHandler"
                }
              },
              {
                "key": "onBlurCapture",
                "type": "FocusEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "FocusEventHandler"
                }
              },
              {
                "key": "onCanPlay",
                "type": "ReactEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactEventHandler"
                }
              },
              {
                "key": "onCanPlayCapture",
                "type": "ReactEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactEventHandler"
                }
              },
              {
                "key": "onCanPlayThrough",
                "type": "ReactEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactEventHandler"
                }
              },
              {
                "key": "onCanPlayThroughCapture",
                "type": "ReactEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactEventHandler"
                }
              },
              {
                "key": "onChange",
                "type": "FormEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "FormEventHandler"
                }
              },
              {
                "key": "onChangeCapture",
                "type": "FormEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "FormEventHandler"
                }
              },
              {
                "key": "onClick",
                "type": "MenuClickEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "MenuClickEventHandler"
                }
              },
              {
                "key": "onClickCapture",
                "type": "MouseEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "MouseEventHandler"
                }
              },
              {
                "key": "onCompositionEnd",
                "type": "CompositionEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "CompositionEventHandler"
                }
              },
              {
                "key": "onCompositionEndCapture",
                "type": "CompositionEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "CompositionEventHandler"
                }
              },
              {
                "key": "onCompositionStart",
                "type": "CompositionEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "CompositionEventHandler"
                }
              },
              {
                "key": "onCompositionStartCapture",
                "type": "CompositionEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "CompositionEventHandler"
                }
              },
              {
                "key": "onCompositionUpdate",
                "type": "CompositionEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "CompositionEventHandler"
                }
              },
              {
                "key": "onCompositionUpdateCapture",
                "type": "CompositionEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "CompositionEventHandler"
                }
              },
              {
                "key": "onContextMenu",
                "type": "MouseEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "MouseEventHandler"
                }
              },
              {
                "key": "onContextMenuCapture",
                "type": "MouseEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "MouseEventHandler"
                }
              },
              {
                "key": "onCopy",
                "type": "ClipboardEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ClipboardEventHandler"
                }
              },
              {
                "key": "onCopyCapture",
                "type": "ClipboardEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ClipboardEventHandler"
                }
              },
              {
                "key": "onCut",
                "type": "ClipboardEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ClipboardEventHandler"
                }
              },
              {
                "key": "onCutCapture",
                "type": "ClipboardEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ClipboardEventHandler"
                }
              },
              {
                "key": "onDeselect",
                "type": "SelectEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "SelectEventHandler"
                }
              },
              {
                "key": "onDoubleClick",
                "type": "MouseEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "MouseEventHandler"
                }
              },
              {
                "key": "onDoubleClickCapture",
                "type": "MouseEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "MouseEventHandler"
                }
              },
              {
                "key": "onDrag",
                "type": "DragEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "DragEventHandler"
                }
              },
              {
                "key": "onDragCapture",
                "type": "DragEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "DragEventHandler"
                }
              },
              {
                "key": "onDragEnd",
                "type": "DragEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "DragEventHandler"
                }
              },
              {
                "key": "onDragEndCapture",
                "type": "DragEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "DragEventHandler"
                }
              },
              {
                "key": "onDragEnter",
                "type": "DragEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "DragEventHandler"
                }
              },
              {
                "key": "onDragEnterCapture",
                "type": "DragEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "DragEventHandler"
                }
              },
              {
                "key": "onDragExit",
                "type": "DragEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "DragEventHandler"
                }
              },
              {
                "key": "onDragExitCapture",
                "type": "DragEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "DragEventHandler"
                }
              },
              {
                "key": "onDragLeave",
                "type": "DragEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "DragEventHandler"
                }
              },
              {
                "key": "onDragLeaveCapture",
                "type": "DragEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "DragEventHandler"
                }
              },
              {
                "key": "onDragOver",
                "type": "DragEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "DragEventHandler"
                }
              },
              {
                "key": "onDragOverCapture",
                "type": "DragEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "DragEventHandler"
                }
              },
              {
                "key": "onDragStart",
                "type": "DragEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "DragEventHandler"
                }
              },
              {
                "key": "onDragStartCapture",
                "type": "DragEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "DragEventHandler"
                }
              },
              {
                "key": "onDrop",
                "type": "DragEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "DragEventHandler"
                }
              },
              {
                "key": "onDropCapture",
                "type": "DragEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "DragEventHandler"
                }
              },
              {
                "key": "onDurationChange",
                "type": "ReactEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactEventHandler"
                }
              },
              {
                "key": "onDurationChangeCapture",
                "type": "ReactEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactEventHandler"
                }
              },
              {
                "key": "onEmptied",
                "type": "ReactEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactEventHandler"
                }
              },
              {
                "key": "onEmptiedCapture",
                "type": "ReactEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactEventHandler"
                }
              },
              {
                "key": "onEncrypted",
                "type": "ReactEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactEventHandler"
                }
              },
              {
                "key": "onEncryptedCapture",
                "type": "ReactEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactEventHandler"
                }
              },
              {
                "key": "onEnded",
                "type": "ReactEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactEventHandler"
                }
              },
              {
                "key": "onEndedCapture",
                "type": "ReactEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactEventHandler"
                }
              },
              {
                "key": "onError",
                "type": "ReactEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactEventHandler"
                }
              },
              {
                "key": "onErrorCapture",
                "type": "ReactEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactEventHandler"
                }
              },
              {
                "key": "onFocus",
                "type": "FocusEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "FocusEventHandler"
                }
              },
              {
                "key": "onFocusCapture",
                "type": "FocusEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "FocusEventHandler"
                }
              },
              {
                "key": "onGotPointerCapture",
                "type": "PointerEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "PointerEventHandler"
                }
              },
              {
                "key": "onGotPointerCaptureCapture",
                "type": "PointerEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "PointerEventHandler"
                }
              },
              {
                "key": "onInput",
                "type": "FormEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "FormEventHandler"
                }
              },
              {
                "key": "onInputCapture",
                "type": "FormEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "FormEventHandler"
                }
              },
              {
                "key": "onInvalid",
                "type": "FormEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "FormEventHandler"
                }
              },
              {
                "key": "onInvalidCapture",
                "type": "FormEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "FormEventHandler"
                }
              },
              {
                "key": "onKeyDown",
                "type": "KeyboardEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "KeyboardEventHandler"
                }
              },
              {
                "key": "onKeyDownCapture",
                "type": "KeyboardEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "KeyboardEventHandler"
                }
              },
              {
                "key": "onKeyPress",
                "type": "KeyboardEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "KeyboardEventHandler"
                }
              },
              {
                "key": "onKeyPressCapture",
                "type": "KeyboardEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "KeyboardEventHandler"
                }
              },
              {
                "key": "onKeyUp",
                "type": "KeyboardEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "KeyboardEventHandler"
                }
              },
              {
                "key": "onKeyUpCapture",
                "type": "KeyboardEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "KeyboardEventHandler"
                }
              },
              {
                "key": "onLoad",
                "type": "ReactEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactEventHandler"
                }
              },
              {
                "key": "onLoadCapture",
                "type": "ReactEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactEventHandler"
                }
              },
              {
                "key": "onLoadedData",
                "type": "ReactEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactEventHandler"
                }
              },
              {
                "key": "onLoadedDataCapture",
                "type": "ReactEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactEventHandler"
                }
              },
              {
                "key": "onLoadedMetadata",
                "type": "ReactEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactEventHandler"
                }
              },
              {
                "key": "onLoadedMetadataCapture",
                "type": "ReactEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactEventHandler"
                }
              },
              {
                "key": "onLoadStart",
                "type": "ReactEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactEventHandler"
                }
              },
              {
                "key": "onLoadStartCapture",
                "type": "ReactEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactEventHandler"
                }
              },
              {
                "key": "onLostPointerCapture",
                "type": "PointerEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "PointerEventHandler"
                }
              },
              {
                "key": "onLostPointerCaptureCapture",
                "type": "PointerEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "PointerEventHandler"
                }
              },
              {
                "key": "onMouseDown",
                "type": "MouseEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "MouseEventHandler"
                }
              },
              {
                "key": "onMouseDownCapture",
                "type": "MouseEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "MouseEventHandler"
                }
              },
              {
                "key": "onMouseEnter",
                "type": "MouseEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "MouseEventHandler"
                }
              },
              {
                "key": "onMouseLeave",
                "type": "MouseEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "MouseEventHandler"
                }
              },
              {
                "key": "onMouseMove",
                "type": "MouseEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "MouseEventHandler"
                }
              },
              {
                "key": "onMouseMoveCapture",
                "type": "MouseEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "MouseEventHandler"
                }
              },
              {
                "key": "onMouseOut",
                "type": "MouseEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "MouseEventHandler"
                }
              },
              {
                "key": "onMouseOutCapture",
                "type": "MouseEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "MouseEventHandler"
                }
              },
              {
                "key": "onMouseOver",
                "type": "MouseEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "MouseEventHandler"
                }
              },
              {
                "key": "onMouseOverCapture",
                "type": "MouseEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "MouseEventHandler"
                }
              },
              {
                "key": "onMouseUp",
                "type": "MouseEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "MouseEventHandler"
                }
              },
              {
                "key": "onMouseUpCapture",
                "type": "MouseEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "MouseEventHandler"
                }
              },
              {
                "key": "onOpenChange",
                "type": "(openKeys: string[]) => void",
                "optional": true,
                "typeDefinition": {
                  "typeString": "(openKeys: string[]) => void",
                  "isFunction": true,
                  "props": [
                    {
                      "key": "openKeys",
                      "type": "string[]",
                      "isParam": true,
                      "optional": false,
                      "typeDefinition": {
                        "typeString": "string[]",
                        "isArray": true,
                        "props": [
                          {
                            "key": "string",
                            "type": "intrinsic"
                          }
                        ]
                      }
                    },
                    {
                      "key": "void",
                      "type": "intrinsic",
                      "isReturn": true
                    }
                  ]
                }
              },
              {
                "key": "onPaste",
                "type": "ClipboardEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ClipboardEventHandler"
                }
              },
              {
                "key": "onPasteCapture",
                "type": "ClipboardEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ClipboardEventHandler"
                }
              },
              {
                "key": "onPause",
                "type": "ReactEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactEventHandler"
                }
              },
              {
                "key": "onPauseCapture",
                "type": "ReactEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactEventHandler"
                }
              },
              {
                "key": "onPlay",
                "type": "ReactEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactEventHandler"
                }
              },
              {
                "key": "onPlayCapture",
                "type": "ReactEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactEventHandler"
                }
              },
              {
                "key": "onPlaying",
                "type": "ReactEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactEventHandler"
                }
              },
              {
                "key": "onPlayingCapture",
                "type": "ReactEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactEventHandler"
                }
              },
              {
                "key": "onPointerCancel",
                "type": "PointerEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "PointerEventHandler"
                }
              },
              {
                "key": "onPointerCancelCapture",
                "type": "PointerEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "PointerEventHandler"
                }
              },
              {
                "key": "onPointerDown",
                "type": "PointerEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "PointerEventHandler"
                }
              },
              {
                "key": "onPointerDownCapture",
                "type": "PointerEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "PointerEventHandler"
                }
              },
              {
                "key": "onPointerEnter",
                "type": "PointerEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "PointerEventHandler"
                }
              },
              {
                "key": "onPointerEnterCapture",
                "type": "PointerEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "PointerEventHandler"
                }
              },
              {
                "key": "onPointerLeave",
                "type": "PointerEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "PointerEventHandler"
                }
              },
              {
                "key": "onPointerLeaveCapture",
                "type": "PointerEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "PointerEventHandler"
                }
              },
              {
                "key": "onPointerMove",
                "type": "PointerEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "PointerEventHandler"
                }
              },
              {
                "key": "onPointerMoveCapture",
                "type": "PointerEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "PointerEventHandler"
                }
              },
              {
                "key": "onPointerOut",
                "type": "PointerEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "PointerEventHandler"
                }
              },
              {
                "key": "onPointerOutCapture",
                "type": "PointerEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "PointerEventHandler"
                }
              },
              {
                "key": "onPointerOver",
                "type": "PointerEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "PointerEventHandler"
                }
              },
              {
                "key": "onPointerOverCapture",
                "type": "PointerEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "PointerEventHandler"
                }
              },
              {
                "key": "onPointerUp",
                "type": "PointerEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "PointerEventHandler"
                }
              },
              {
                "key": "onPointerUpCapture",
                "type": "PointerEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "PointerEventHandler"
                }
              },
              {
                "key": "onProgress",
                "type": "ReactEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactEventHandler"
                }
              },
              {
                "key": "onProgressCapture",
                "type": "ReactEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactEventHandler"
                }
              },
              {
                "key": "onRateChange",
                "type": "ReactEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactEventHandler"
                }
              },
              {
                "key": "onRateChangeCapture",
                "type": "ReactEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactEventHandler"
                }
              },
              {
                "key": "onReset",
                "type": "FormEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "FormEventHandler"
                }
              },
              {
                "key": "onResetCapture",
                "type": "FormEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "FormEventHandler"
                }
              },
              {
                "key": "onResize",
                "type": "ReactEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactEventHandler"
                }
              },
              {
                "key": "onResizeCapture",
                "type": "ReactEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactEventHandler"
                }
              },
              {
                "key": "onScroll",
                "type": "UIEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "UIEventHandler"
                }
              },
              {
                "key": "onScrollCapture",
                "type": "UIEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "UIEventHandler"
                }
              },
              {
                "key": "onSeeked",
                "type": "ReactEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactEventHandler"
                }
              },
              {
                "key": "onSeekedCapture",
                "type": "ReactEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactEventHandler"
                }
              },
              {
                "key": "onSeeking",
                "type": "ReactEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactEventHandler"
                }
              },
              {
                "key": "onSeekingCapture",
                "type": "ReactEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactEventHandler"
                }
              },
              {
                "key": "onSelect",
                "type": "SelectEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "SelectEventHandler"
                }
              },
              {
                "key": "onSelectCapture",
                "type": "ReactEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactEventHandler"
                }
              },
              {
                "key": "onStalled",
                "type": "ReactEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactEventHandler"
                }
              },
              {
                "key": "onStalledCapture",
                "type": "ReactEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactEventHandler"
                }
              },
              {
                "key": "onSubmit",
                "type": "FormEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "FormEventHandler"
                }
              },
              {
                "key": "onSubmitCapture",
                "type": "FormEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "FormEventHandler"
                }
              },
              {
                "key": "onSuspend",
                "type": "ReactEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactEventHandler"
                }
              },
              {
                "key": "onSuspendCapture",
                "type": "ReactEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactEventHandler"
                }
              },
              {
                "key": "onTimeUpdate",
                "type": "ReactEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactEventHandler"
                }
              },
              {
                "key": "onTimeUpdateCapture",
                "type": "ReactEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactEventHandler"
                }
              },
              {
                "key": "onTouchCancel",
                "type": "TouchEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "TouchEventHandler"
                }
              },
              {
                "key": "onTouchCancelCapture",
                "type": "TouchEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "TouchEventHandler"
                }
              },
              {
                "key": "onTouchEnd",
                "type": "TouchEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "TouchEventHandler"
                }
              },
              {
                "key": "onTouchEndCapture",
                "type": "TouchEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "TouchEventHandler"
                }
              },
              {
                "key": "onTouchMove",
                "type": "TouchEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "TouchEventHandler"
                }
              },
              {
                "key": "onTouchMoveCapture",
                "type": "TouchEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "TouchEventHandler"
                }
              },
              {
                "key": "onTouchStart",
                "type": "TouchEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "TouchEventHandler"
                }
              },
              {
                "key": "onTouchStartCapture",
                "type": "TouchEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "TouchEventHandler"
                }
              },
              {
                "key": "onTransitionEnd",
                "type": "TransitionEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "TransitionEventHandler"
                }
              },
              {
                "key": "onTransitionEndCapture",
                "type": "TransitionEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "TransitionEventHandler"
                }
              },
              {
                "key": "onVolumeChange",
                "type": "ReactEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactEventHandler"
                }
              },
              {
                "key": "onVolumeChangeCapture",
                "type": "ReactEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactEventHandler"
                }
              },
              {
                "key": "onWaiting",
                "type": "ReactEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactEventHandler"
                }
              },
              {
                "key": "onWaitingCapture",
                "type": "ReactEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactEventHandler"
                }
              },
              {
                "key": "onWheel",
                "type": "WheelEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "WheelEventHandler"
                }
              },
              {
                "key": "onWheelCapture",
                "type": "WheelEventHandler",
                "optional": true,
                "typeDefinition": {
                  "typeString": "WheelEventHandler"
                }
              },
              {
                "key": "openKeys",
                "type": "string[]",
                "optional": true,
                "typeDefinition": {
                  "typeString": "string[]",
                  "isArray": true,
                  "props": [
                    {
                      "key": "string",
                      "type": "intrinsic"
                    }
                  ]
                }
              },
              {
                "key": "overflowedIndicator",
                "type": "ReactNode",
                "optional": true,
                "typeDefinition": {
                  "typeString": "ReactNode"
                }
              },
              {
                "key": "placeholder",
                "type": "string",
                "optional": true
              },
              {
                "key": "prefix",
                "type": "string",
                "optional": true
              },
              {
                "key": "prefixCls",
                "type": "string",
                "optional": true
              },
              {
                "key": "property",
                "type": "string",
                "optional": true
              },
              {
                "key": "radioGroup",
                "type": "string",
                "optional": true
              },
              {
                "key": "rel",
                "type": "string",
                "optional": true
              },
              {
                "key": "resource",
                "type": "string",
                "optional": true
              },
              {
                "key": "results",
                "type": "number",
                "optional": true
              },
              {
                "key": "rev",
                "type": "string",
                "optional": true
              },
              {
                "key": "role",
                "type": "AriaRole",
                "optional": true,
                "typeDefinition": {
                  "typeString": "AriaRole"
                }
              },
              {
                "key": "rootClassName",
                "type": "string",
                "optional": true
              },
              {
                "key": "security",
                "type": "string",
                "optional": true
              },
              {
                "key": "selectable",
                "type": "boolean",
                "optional": true
              },
              {
                "key": "selectedKeys",
                "type": "string[]",
                "optional": true,
                "typeDefinition": {
                  "typeString": "string[]",
                  "isArray": true,
                  "props": [
                    {
                      "key": "string",
                      "type": "intrinsic"
                    }
                  ]
                }
              },
              {
                "key": "slot",
                "type": "string",
                "optional": true
              },
              {
                "key": "spellCheck",
                "type": "Booleanish",
                "optional": true,
                "typeDefinition": {
                  "typeString": "Booleanish"
                }
              },
              {
                "key": "style",
                "type": "CSSProperties",
                "optional": true,
                "typeDefinition": {
                  "typeString": "CSSProperties"
                }
              },
              {
                "key": "subMenuCloseDelay",
                "type": "number",
                "optional": true
              },
              {
                "key": "subMenuOpenDelay",
                "type": "number",
                "optional": true
              },
              {
                "key": "suppressContentEditableWarning",
                "type": "boolean",
                "optional": true
              },
              {
                "key": "suppressHydrationWarning",
                "type": "boolean",
                "optional": true
              },
              {
                "key": "tabIndex",
                "type": "number",
                "optional": true
              },
              {
                "key": "theme",
                "type": "MenuTheme",
                "optional": true,
                "typeDefinition": {
                  "typeString": "MenuTheme"
                }
              },
              {
                "key": "title",
                "type": "string",
                "optional": true
              },
              {
                "key": "translate",
                "type": "'no' | 'yes'",
                "optional": true,
                "typeDefinition": {
                  "typeString": "no | yes",
                  "props": [
                    {
                      "key": "no",
                      "type": "string"
                    },
                    {
                      "key": "yes",
                      "type": "string"
                    }
                  ]
                }
              },
              {
                "key": "triggerSubMenuAction",
                "type": "TriggerSubMenuAction",
                "optional": true,
                "typeDefinition": {
                  "typeString": "TriggerSubMenuAction"
                }
              },
              {
                "key": "typeof",
                "type": "string",
                "optional": true
              },
              {
                "key": "unselectable",
                "type": "'off' | 'on'",
                "optional": true,
                "typeDefinition": {
                  "typeString": "off | on",
                  "props": [
                    {
                      "key": "off",
                      "type": "string"
                    },
                    {
                      "key": "on",
                      "type": "string"
                    }
                  ]
                }
              },
              {
                "key": "vocab",
                "type": "string",
                "optional": true
              }
            ]
          }
        },
        "mouseEnterDelay": {
          "type": "number",
          "optional": true
        },
        "mouseLeaveDelay": {
          "type": "number",
          "optional": true
        },
        "onOpenChange": {
          "type": "object",
          "optional": true,
          "description": "Fires when dropdown menu visibility changes",
          "typeDefinition": {
            "typeString": "(open: boolean) => void",
            "isFunction": true,
            "props": [
              {
                "key": "open",
                "type": "boolean",
                "isParam": true,
                "optional": false
              },
              {
                "key": "void",
                "type": "intrinsic",
                "isReturn": true
              }
            ]
          }
        },
        "onVisibleChange": {
          "type": "object",
          "optional": true,
          "typeDefinition": {
            "typeString": "(open: boolean) => void",
            "isFunction": true,
            "props": [
              {
                "key": "open",
                "type": "boolean",
                "isParam": true,
                "optional": false
              },
              {
                "key": "void",
                "type": "intrinsic",
                "isReturn": true
              }
            ]
          }
        },
        "open": {
          "type": "boolean",
          "description": "Controls the visibility state of the dropdown menu",
          "optional": true
        },
        "openClassName": {
          "type": "string",
          "optional": true
        },
        "overlay": {
          "type": "union",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactElement | OverlayFunc",
            "props": [
              {
                "key": "ReactElement",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "ReactElement"
                }
              },
              {
                "key": "OverlayFunc",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "OverlayFunc"
                }
              }
            ]
          }
        },
        "overlayClassName": {
          "type": "string",
          "description": "Additional CSS class name applied to dropdown menu wrapper",
          "optional": true
        },
        "overlayStyle": {
          "type": "CSSProperties",
          "optional": true,
          "description": "Custom CSS styles applied to dropdown menu wrapper",
          "typeDefinition": {
            "typeString": "CSSProperties"
          }
        },
        "placement": {
          "type": "union",
          "optional": true,
          "description": "Determines the dropdown menu position relative to its trigger element",
          "typeDefinition": {
            "typeString": "bottomLeft | bottomRight | topLeft | topRight | topCenter | bottomCenter | top | bottom",
            "props": [
              {
                "key": "bottomLeft",
                "type": "string"
              },
              {
                "key": "bottomRight",
                "type": "string"
              },
              {
                "key": "topLeft",
                "type": "string"
              },
              {
                "key": "topRight",
                "type": "string"
              },
              {
                "key": "topCenter",
                "type": "string"
              },
              {
                "key": "bottomCenter",
                "type": "string"
              },
              {
                "key": "top",
                "type": "string"
              },
              {
                "key": "bottom",
                "type": "string"
              }
            ]
          }
        },
        "prefixCls": {
          "type": "string",
          "optional": true
        },
        "rootClassName": {
          "type": "string",
          "optional": true
        },
        "transitionName": {
          "type": "string",
          "optional": true
        },
        "trigger": {
          "type": "array",
          "optional": true,
          "description": "Defines how the dropdown menu is activated (click, hover, etc)",
          "typeDefinition": {
            "typeString": "'contextMenu' | 'click' | 'hover'[]",
            "isArray": true,
            "props": [
              {
                "key": "'contextMenu' | 'click' | 'hover'",
                "type": "union",
                "typeDefinition": {
                  "typeString": "contextMenu | click | hover",
                  "props": [
                    {
                      "key": "contextMenu",
                      "type": "string"
                    },
                    {
                      "key": "click",
                      "type": "string"
                    },
                    {
                      "key": "hover",
                      "type": "string"
                    }
                  ]
                }
              }
            ]
          }
        },
        "visible": {
          "type": "boolean",
          "optional": true
        }
      },
      "componentTypeName": "DropdownProps"
    },
    {
      "name": "Divider",
      "description": "The Divider component is a versatile UI element that visually separates content, enhancing layout clarity. It can be styled with various thicknesses, colors, and orientations, making it ideal for organizing information in both horizontal and vertical formats, ensuring a clean and structured design.",
      "props": {
        "className": {
          "type": "string",
          "description": "Custom CSS class name for styling the divider element",
          "optional": true
        },
        "dashed": {
          "type": "boolean",
          "description": "Renders the divider line with a dashed style instead of solid",
          "optional": true
        },
        "type": {
          "type": "union",
          "optional": true,
          "description": "Sets the divider orientation to either horizontal or vertical",
          "typeDefinition": {
            "typeString": "horizontal | vertical",
            "props": [
              {
                "key": "horizontal",
                "type": "string"
              },
              {
                "key": "vertical",
                "type": "string"
              }
            ]
          }
        }
      },
      "componentTypeName": "DividerProps"
    },
    {
      "name": "Descriptions",
      "description": "The Descriptions component provides a structured way to display key information in a clear and organized format. It allows for multiple items to be presented with labels and values, enhancing readability and user experience in applications that require detailed data presentation.",
      "props": {}
    },
    {
      "name": "DateRangePicker",
      "description": "The DateRangePicker component allows users to select a range of dates effortlessly. It features an intuitive interface, customizable date formats, and supports various date validations, making it ideal for applications requiring date filtering or scheduling functionalities. Enhance user experience with seamless date selection.",
      "props": {}
    },
    {
      "name": "DatePicker",
      "description": "The DatePicker component allows users to select dates from a calendar interface. It features customizable date formats, range selection, and easy navigation through months and years, enhancing user experience in date input for forms and applications. Ideal for scheduling and event planning functionalities.",
      "props": {
        "allowClear": {
          "type": "union",
          "optional": true,
          "description": "Enables clearing the selected date value",
          "typeDefinition": {
            "typeString": "boolean | { clearIcon?: ReactNode }",
            "props": [
              {
                "key": "boolean",
                "type": "intrinsic"
              },
              {
                "key": "{ clearIcon?: ReactNode }",
                "type": "reflection",
                "typeDefinition": {
                  "typeString": "{ clearIcon?: ReactNode }",
                  "props": [
                    {
                      "key": "clearIcon",
                      "type": "ReactNode",
                      "optional": true,
                      "typeDefinition": {
                        "typeString": "ReactNode"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        "autoFocus": {
          "type": "boolean",
          "description": "Focuses the date picker input field when component mounts",
          "optional": true
        },
        "changeOnBlur": {
          "type": "boolean",
          "description": "Updates the date value when input loses focus without requiring explicit confirmation",
          "optional": true
        },
        "className": {
          "type": "string",
          "description": "Additional CSS class name for custom styling",
          "optional": true
        },
        "defaultPickerValue": {
          "type": "Dayjs",
          "optional": true,
          "description": "Sets the initial visible date in calendar when picker opens",
          "typeDefinition": {
            "typeString": "Dayjs"
          }
        },
        "defaultValue": {
          "type": "Dayjs",
          "optional": true,
          "description": "Pre-selects a date value when component mounts",
          "typeDefinition": {
            "typeString": "Dayjs"
          }
        },
        "disabled": {
          "type": "boolean",
          "description": "Prevents user interaction with the date picker",
          "optional": true
        },
        "disableFutureDate": {
          "type": "boolean",
          "description": "Restricts date selection to past dates only",
          "optional": true
        },
        "format": {
          "type": "union",
          "optional": true,
          "description": "Specifies how the selected date should be displayed in the input field",
          "typeDefinition": {
            "typeString": "string | CustomFormat | string | CustomFormat[]",
            "props": [
              {
                "key": "string",
                "type": "intrinsic"
              },
              {
                "key": "CustomFormat",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "CustomFormat"
                }
              },
              {
                "key": "string | CustomFormat[]",
                "type": "array",
                "typeDefinition": {
                  "typeString": "string | CustomFormat[]",
                  "isArray": true,
                  "props": [
                    {
                      "key": "string | CustomFormat",
                      "type": "union",
                      "typeDefinition": {
                        "typeString": "string | CustomFormat",
                        "props": [
                          {
                            "key": "string",
                            "type": "intrinsic"
                          },
                          {
                            "key": "CustomFormat",
                            "type": "reference",
                            "typeDefinition": {
                              "typeString": "CustomFormat"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        "help": {
          "type": "union",
          "optional": true,
          "description": "Description of the input",
          "typeDefinition": {
            "typeString": "null | string",
            "props": [
              {
                "key": "null",
                "type": "object"
              },
              {
                "key": "string",
                "type": "intrinsic"
              }
            ]
          }
        },
        "id": {
          "type": "string",
          "description": "The ID for input",
          "optional": true
        },
        "label": {
          "type": "string",
          "description": "label of the input",
          "optional": true
        },
        "onChange": {
          "type": "object",
          "optional": true,
          "description": "Fires when user selects a new date or clears the selection",
          "typeDefinition": {
            "typeString": "(value: 'null' | Dayjs, dateString: string) => void",
            "isFunction": true,
            "props": [
              {
                "key": "value",
                "type": "'null' | Dayjs",
                "isParam": true,
                "optional": false,
                "typeDefinition": {
                  "typeString": "null | Dayjs",
                  "props": [
                    {
                      "key": "null",
                      "type": "object"
                    },
                    {
                      "key": "Dayjs",
                      "type": "reference",
                      "typeDefinition": {
                        "typeString": "Dayjs"
                      }
                    }
                  ]
                }
              },
              {
                "key": "dateString",
                "type": "string",
                "isParam": true,
                "optional": false
              },
              {
                "key": "void",
                "type": "intrinsic",
                "isReturn": true
              }
            ]
          }
        },
        "onInfoIconClick": {
          "type": "object",
          "optional": true,
          "typeDefinition": {
            "typeString": "() => void",
            "isFunction": true,
            "props": [
              {
                "key": "void",
                "type": "intrinsic",
                "isReturn": true
              }
            ]
          }
        },
        "onOk": {
          "type": "object",
          "optional": true,
          "description": "Triggers when user confirms date selection via OK button",
          "typeDefinition": {
            "typeString": "(date: Dayjs) => void",
            "isFunction": true,
            "props": [
              {
                "key": "date",
                "type": "Dayjs",
                "isParam": true,
                "optional": false,
                "typeDefinition": {
                  "typeString": "Dayjs"
                }
              },
              {
                "key": "void",
                "type": "intrinsic",
                "isReturn": true
              }
            ]
          }
        },
        "open": {
          "type": "boolean",
          "description": "Controls whether the calendar dropdown is visible",
          "optional": true
        },
        "placeholder": {
          "type": "string",
          "description": "Text shown in the input field when no date is selected",
          "optional": true
        },
        "placement": {
          "type": "union",
          "optional": true,
          "description": "Determines the position of calendar dropdown relative to input",
          "typeDefinition": {
            "typeString": "bottomLeft | bottomRight | topLeft | topRight",
            "props": [
              {
                "key": "bottomLeft",
                "type": "string"
              },
              {
                "key": "bottomRight",
                "type": "string"
              },
              {
                "key": "topLeft",
                "type": "string"
              },
              {
                "key": "topRight",
                "type": "string"
              }
            ]
          }
        },
        "popupClassName": {
          "type": "string",
          "description": "Additional CSS class name for the calendar dropdown panel",
          "optional": true
        },
        "showInfoIcon": {
          "type": "boolean",
          "description": "show info icon along with label",
          "optional": true
        },
        "showOptionalText": {
          "type": "boolean",
          "description": "show optional text along with label",
          "optional": true
        },
        "showToday": {
          "type": "boolean",
          "description": "Adds a button to quickly select the current date",
          "optional": true
        },
        "size": {
          "type": "union",
          "optional": true,
          "description": "Controls the height of input field between compact and default sizes",
          "typeDefinition": {
            "typeString": "sm | lg",
            "props": [
              {
                "key": "sm",
                "type": "string"
              },
              {
                "key": "lg",
                "type": "string"
              }
            ]
          }
        },
        "status": {
          "type": "union",
          "optional": true,
          "description": "Indicates validation state through visual feedback",
          "typeDefinition": {
            "typeString": " | error",
            "props": [
              {
                "key": "",
                "type": "string"
              },
              {
                "key": "error",
                "type": "string"
              }
            ]
          }
        },
        "value": {
          "type": "union",
          "optional": true,
          "description": "Controls the currently selected date in controlled mode",
          "typeDefinition": {
            "typeString": "null | Dayjs",
            "props": [
              {
                "key": "null",
                "type": "object"
              },
              {
                "key": "Dayjs",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "Dayjs"
                }
              }
            ]
          }
        },
        "width": {
          "type": "number",
          "description": "Sets custom width for the date picker input field",
          "optional": true
        }
      },
      "componentTypeName": "DatePickerProps"
    },
    {
      "name": "Col",
      "description": "The Col component is a flexible grid layout element that allows for responsive design. It enables the arrangement of content in columns, adapting to various screen sizes while maintaining alignment and spacing. Ideal for creating structured layouts in web applications.",
      "props": {
        "about": {
          "type": "string",
          "optional": true
        },
        "accessKey": {
          "type": "string",
          "optional": true
        },
        "autoCapitalize": {
          "type": "string",
          "optional": true
        },
        "autoCorrect": {
          "type": "string",
          "optional": true
        },
        "autoFocus": {
          "type": "boolean",
          "optional": true
        },
        "autoSave": {
          "type": "string",
          "optional": true
        },
        "children": {
          "type": "ReactNode",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactNode"
          }
        },
        "className": {
          "type": "string",
          "optional": true
        },
        "color": {
          "type": "string",
          "optional": true
        },
        "content": {
          "type": "string",
          "optional": true
        },
        "contentEditable": {
          "type": "union",
          "optional": true,
          "typeDefinition": {
            "typeString": "inherit | Booleanish",
            "props": [
              {
                "key": "inherit",
                "type": "string"
              },
              {
                "key": "Booleanish",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "Booleanish"
                }
              }
            ]
          }
        },
        "contextMenu": {
          "type": "string",
          "optional": true
        },
        "dangerouslySetInnerHTML": {
          "type": "object",
          "optional": true,
          "typeDefinition": {
            "typeString": "{ __html: string | TrustedHTML }",
            "props": [
              {
                "key": "__html",
                "type": "string | TrustedHTML",
                "typeDefinition": {
                  "typeString": "string | TrustedHTML",
                  "props": [
                    {
                      "key": "string",
                      "type": "intrinsic"
                    },
                    {
                      "key": "TrustedHTML",
                      "type": "reference",
                      "typeDefinition": {
                        "typeString": "TrustedHTML"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        "datatype": {
          "type": "string",
          "optional": true
        },
        "defaultChecked": {
          "type": "boolean",
          "optional": true
        },
        "defaultValue": {
          "type": "union",
          "optional": true,
          "typeDefinition": {
            "typeString": "string | number | typeOperator",
            "props": [
              {
                "key": "string",
                "type": "intrinsic"
              },
              {
                "key": "number",
                "type": "intrinsic"
              },
              {
                "key": "typeOperator",
                "type": "typeOperator"
              }
            ]
          }
        },
        "dir": {
          "type": "string",
          "optional": true
        },
        "draggable": {
          "type": "Booleanish",
          "optional": true,
          "typeDefinition": {
            "typeString": "Booleanish"
          }
        },
        "flex": {
          "type": "FlexType",
          "optional": true,
          "description": "Sets flex layout properties for the column",
          "typeDefinition": {
            "typeString": "FlexType"
          }
        },
        "hidden": {
          "type": "boolean",
          "optional": true
        },
        "id": {
          "type": "string",
          "optional": true
        },
        "inlist": {
          "type": "any",
          "optional": true
        },
        "inputMode": {
          "type": "union",
          "optional": true,
          "description": "Hints at the type of data that might be entered by the user while editing the element or its contents",
          "typeDefinition": {
            "typeString": "text | search | none | email | tel | url | numeric | decimal",
            "props": [
              {
                "key": "text",
                "type": "string"
              },
              {
                "key": "search",
                "type": "string"
              },
              {
                "key": "none",
                "type": "string"
              },
              {
                "key": "email",
                "type": "string"
              },
              {
                "key": "tel",
                "type": "string"
              },
              {
                "key": "url",
                "type": "string"
              },
              {
                "key": "numeric",
                "type": "string"
              },
              {
                "key": "decimal",
                "type": "string"
              }
            ]
          }
        },
        "is": {
          "type": "string",
          "description": "Specify that a standard HTML element should behave like a defined custom built-in element",
          "optional": true
        },
        "itemID": {
          "type": "string",
          "optional": true
        },
        "itemProp": {
          "type": "string",
          "optional": true
        },
        "itemRef": {
          "type": "string",
          "optional": true
        },
        "itemScope": {
          "type": "boolean",
          "optional": true
        },
        "itemType": {
          "type": "string",
          "optional": true
        },
        "lang": {
          "type": "string",
          "optional": true
        },
        "lg": {
          "type": "union",
          "optional": true,
          "description": "Column properties for large screens (≥992px)",
          "typeDefinition": {
            "typeString": "ColSpanType | ColSize",
            "props": [
              {
                "key": "ColSpanType",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "ColSpanType"
                }
              },
              {
                "key": "ColSize",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "ColSize"
                }
              }
            ]
          }
        },
        "md": {
          "type": "union",
          "optional": true,
          "description": "Column properties for medium screens (≥768px)",
          "typeDefinition": {
            "typeString": "ColSpanType | ColSize",
            "props": [
              {
                "key": "ColSpanType",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "ColSpanType"
                }
              },
              {
                "key": "ColSize",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "ColSize"
                }
              }
            ]
          }
        },
        "nonce": {
          "type": "string",
          "optional": true
        },
        "offset": {
          "type": "ColSpanType",
          "optional": true,
          "description": "Number of columns to offset from the left",
          "typeDefinition": {
            "typeString": "ColSpanType"
          }
        },
        "onAbort": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onAbortCapture": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onAnimationEnd": {
          "type": "AnimationEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "AnimationEventHandler"
          }
        },
        "onAnimationEndCapture": {
          "type": "AnimationEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "AnimationEventHandler"
          }
        },
        "onAnimationIteration": {
          "type": "AnimationEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "AnimationEventHandler"
          }
        },
        "onAnimationIterationCapture": {
          "type": "AnimationEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "AnimationEventHandler"
          }
        },
        "onAnimationStart": {
          "type": "AnimationEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "AnimationEventHandler"
          }
        },
        "onAnimationStartCapture": {
          "type": "AnimationEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "AnimationEventHandler"
          }
        },
        "onAuxClick": {
          "type": "MouseEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "MouseEventHandler"
          }
        },
        "onAuxClickCapture": {
          "type": "MouseEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "MouseEventHandler"
          }
        },
        "onBeforeInput": {
          "type": "FormEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "FormEventHandler"
          }
        },
        "onBeforeInputCapture": {
          "type": "FormEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "FormEventHandler"
          }
        },
        "onBlur": {
          "type": "FocusEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "FocusEventHandler"
          }
        },
        "onBlurCapture": {
          "type": "FocusEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "FocusEventHandler"
          }
        },
        "onCanPlay": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onCanPlayCapture": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onCanPlayThrough": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onCanPlayThroughCapture": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onChange": {
          "type": "FormEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "FormEventHandler"
          }
        },
        "onChangeCapture": {
          "type": "FormEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "FormEventHandler"
          }
        },
        "onClick": {
          "type": "MouseEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "MouseEventHandler"
          }
        },
        "onClickCapture": {
          "type": "MouseEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "MouseEventHandler"
          }
        },
        "onCompositionEnd": {
          "type": "CompositionEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "CompositionEventHandler"
          }
        },
        "onCompositionEndCapture": {
          "type": "CompositionEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "CompositionEventHandler"
          }
        },
        "onCompositionStart": {
          "type": "CompositionEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "CompositionEventHandler"
          }
        },
        "onCompositionStartCapture": {
          "type": "CompositionEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "CompositionEventHandler"
          }
        },
        "onCompositionUpdate": {
          "type": "CompositionEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "CompositionEventHandler"
          }
        },
        "onCompositionUpdateCapture": {
          "type": "CompositionEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "CompositionEventHandler"
          }
        },
        "onContextMenu": {
          "type": "MouseEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "MouseEventHandler"
          }
        },
        "onContextMenuCapture": {
          "type": "MouseEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "MouseEventHandler"
          }
        },
        "onCopy": {
          "type": "ClipboardEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ClipboardEventHandler"
          }
        },
        "onCopyCapture": {
          "type": "ClipboardEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ClipboardEventHandler"
          }
        },
        "onCut": {
          "type": "ClipboardEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ClipboardEventHandler"
          }
        },
        "onCutCapture": {
          "type": "ClipboardEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ClipboardEventHandler"
          }
        },
        "onDoubleClick": {
          "type": "MouseEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "MouseEventHandler"
          }
        },
        "onDoubleClickCapture": {
          "type": "MouseEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "MouseEventHandler"
          }
        },
        "onDrag": {
          "type": "DragEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "DragEventHandler"
          }
        },
        "onDragCapture": {
          "type": "DragEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "DragEventHandler"
          }
        },
        "onDragEnd": {
          "type": "DragEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "DragEventHandler"
          }
        },
        "onDragEndCapture": {
          "type": "DragEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "DragEventHandler"
          }
        },
        "onDragEnter": {
          "type": "DragEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "DragEventHandler"
          }
        },
        "onDragEnterCapture": {
          "type": "DragEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "DragEventHandler"
          }
        },
        "onDragExit": {
          "type": "DragEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "DragEventHandler"
          }
        },
        "onDragExitCapture": {
          "type": "DragEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "DragEventHandler"
          }
        },
        "onDragLeave": {
          "type": "DragEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "DragEventHandler"
          }
        },
        "onDragLeaveCapture": {
          "type": "DragEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "DragEventHandler"
          }
        },
        "onDragOver": {
          "type": "DragEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "DragEventHandler"
          }
        },
        "onDragOverCapture": {
          "type": "DragEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "DragEventHandler"
          }
        },
        "onDragStart": {
          "type": "DragEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "DragEventHandler"
          }
        },
        "onDragStartCapture": {
          "type": "DragEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "DragEventHandler"
          }
        },
        "onDrop": {
          "type": "DragEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "DragEventHandler"
          }
        },
        "onDropCapture": {
          "type": "DragEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "DragEventHandler"
          }
        },
        "onDurationChange": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onDurationChangeCapture": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onEmptied": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onEmptiedCapture": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onEncrypted": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onEncryptedCapture": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onEnded": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onEndedCapture": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onError": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onErrorCapture": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onFocus": {
          "type": "FocusEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "FocusEventHandler"
          }
        },
        "onFocusCapture": {
          "type": "FocusEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "FocusEventHandler"
          }
        },
        "onGotPointerCapture": {
          "type": "PointerEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "PointerEventHandler"
          }
        },
        "onGotPointerCaptureCapture": {
          "type": "PointerEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "PointerEventHandler"
          }
        },
        "onInput": {
          "type": "FormEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "FormEventHandler"
          }
        },
        "onInputCapture": {
          "type": "FormEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "FormEventHandler"
          }
        },
        "onInvalid": {
          "type": "FormEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "FormEventHandler"
          }
        },
        "onInvalidCapture": {
          "type": "FormEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "FormEventHandler"
          }
        },
        "onKeyDown": {
          "type": "KeyboardEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "KeyboardEventHandler"
          }
        },
        "onKeyDownCapture": {
          "type": "KeyboardEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "KeyboardEventHandler"
          }
        },
        "onKeyPress": {
          "type": "KeyboardEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "KeyboardEventHandler"
          }
        },
        "onKeyPressCapture": {
          "type": "KeyboardEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "KeyboardEventHandler"
          }
        },
        "onKeyUp": {
          "type": "KeyboardEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "KeyboardEventHandler"
          }
        },
        "onKeyUpCapture": {
          "type": "KeyboardEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "KeyboardEventHandler"
          }
        },
        "onLoad": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onLoadCapture": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onLoadedData": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onLoadedDataCapture": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onLoadedMetadata": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onLoadedMetadataCapture": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onLoadStart": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onLoadStartCapture": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onLostPointerCapture": {
          "type": "PointerEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "PointerEventHandler"
          }
        },
        "onLostPointerCaptureCapture": {
          "type": "PointerEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "PointerEventHandler"
          }
        },
        "onMouseDown": {
          "type": "MouseEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "MouseEventHandler"
          }
        },
        "onMouseDownCapture": {
          "type": "MouseEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "MouseEventHandler"
          }
        },
        "onMouseEnter": {
          "type": "MouseEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "MouseEventHandler"
          }
        },
        "onMouseLeave": {
          "type": "MouseEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "MouseEventHandler"
          }
        },
        "onMouseMove": {
          "type": "MouseEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "MouseEventHandler"
          }
        },
        "onMouseMoveCapture": {
          "type": "MouseEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "MouseEventHandler"
          }
        },
        "onMouseOut": {
          "type": "MouseEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "MouseEventHandler"
          }
        },
        "onMouseOutCapture": {
          "type": "MouseEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "MouseEventHandler"
          }
        },
        "onMouseOver": {
          "type": "MouseEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "MouseEventHandler"
          }
        },
        "onMouseOverCapture": {
          "type": "MouseEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "MouseEventHandler"
          }
        },
        "onMouseUp": {
          "type": "MouseEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "MouseEventHandler"
          }
        },
        "onMouseUpCapture": {
          "type": "MouseEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "MouseEventHandler"
          }
        },
        "onPaste": {
          "type": "ClipboardEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ClipboardEventHandler"
          }
        },
        "onPasteCapture": {
          "type": "ClipboardEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ClipboardEventHandler"
          }
        },
        "onPause": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onPauseCapture": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onPlay": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onPlayCapture": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onPlaying": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onPlayingCapture": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onPointerCancel": {
          "type": "PointerEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "PointerEventHandler"
          }
        },
        "onPointerCancelCapture": {
          "type": "PointerEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "PointerEventHandler"
          }
        },
        "onPointerDown": {
          "type": "PointerEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "PointerEventHandler"
          }
        },
        "onPointerDownCapture": {
          "type": "PointerEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "PointerEventHandler"
          }
        },
        "onPointerEnter": {
          "type": "PointerEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "PointerEventHandler"
          }
        },
        "onPointerEnterCapture": {
          "type": "PointerEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "PointerEventHandler"
          }
        },
        "onPointerLeave": {
          "type": "PointerEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "PointerEventHandler"
          }
        },
        "onPointerLeaveCapture": {
          "type": "PointerEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "PointerEventHandler"
          }
        },
        "onPointerMove": {
          "type": "PointerEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "PointerEventHandler"
          }
        },
        "onPointerMoveCapture": {
          "type": "PointerEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "PointerEventHandler"
          }
        },
        "onPointerOut": {
          "type": "PointerEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "PointerEventHandler"
          }
        },
        "onPointerOutCapture": {
          "type": "PointerEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "PointerEventHandler"
          }
        },
        "onPointerOver": {
          "type": "PointerEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "PointerEventHandler"
          }
        },
        "onPointerOverCapture": {
          "type": "PointerEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "PointerEventHandler"
          }
        },
        "onPointerUp": {
          "type": "PointerEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "PointerEventHandler"
          }
        },
        "onPointerUpCapture": {
          "type": "PointerEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "PointerEventHandler"
          }
        },
        "onProgress": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onProgressCapture": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onRateChange": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onRateChangeCapture": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onReset": {
          "type": "FormEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "FormEventHandler"
          }
        },
        "onResetCapture": {
          "type": "FormEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "FormEventHandler"
          }
        },
        "onResize": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onResizeCapture": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onScroll": {
          "type": "UIEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "UIEventHandler"
          }
        },
        "onScrollCapture": {
          "type": "UIEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "UIEventHandler"
          }
        },
        "onSeeked": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onSeekedCapture": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onSeeking": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onSeekingCapture": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onSelect": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onSelectCapture": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onStalled": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onStalledCapture": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onSubmit": {
          "type": "FormEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "FormEventHandler"
          }
        },
        "onSubmitCapture": {
          "type": "FormEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "FormEventHandler"
          }
        },
        "onSuspend": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onSuspendCapture": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onTimeUpdate": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onTimeUpdateCapture": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onTouchCancel": {
          "type": "TouchEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "TouchEventHandler"
          }
        },
        "onTouchCancelCapture": {
          "type": "TouchEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "TouchEventHandler"
          }
        },
        "onTouchEnd": {
          "type": "TouchEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "TouchEventHandler"
          }
        },
        "onTouchEndCapture": {
          "type": "TouchEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "TouchEventHandler"
          }
        },
        "onTouchMove": {
          "type": "TouchEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "TouchEventHandler"
          }
        },
        "onTouchMoveCapture": {
          "type": "TouchEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "TouchEventHandler"
          }
        },
        "onTouchStart": {
          "type": "TouchEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "TouchEventHandler"
          }
        },
        "onTouchStartCapture": {
          "type": "TouchEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "TouchEventHandler"
          }
        },
        "onTransitionEnd": {
          "type": "TransitionEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "TransitionEventHandler"
          }
        },
        "onTransitionEndCapture": {
          "type": "TransitionEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "TransitionEventHandler"
          }
        },
        "onVolumeChange": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onVolumeChangeCapture": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onWaiting": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onWaitingCapture": {
          "type": "ReactEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "ReactEventHandler"
          }
        },
        "onWheel": {
          "type": "WheelEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "WheelEventHandler"
          }
        },
        "onWheelCapture": {
          "type": "WheelEventHandler",
          "optional": true,
          "typeDefinition": {
            "typeString": "WheelEventHandler"
          }
        },
        "order": {
          "type": "ColSpanType",
          "optional": true,
          "description": "Specifies the order of the column in flex layout",
          "typeDefinition": {
            "typeString": "ColSpanType"
          }
        },
        "placeholder": {
          "type": "string",
          "optional": true
        },
        "prefix": {
          "type": "string",
          "optional": true
        },
        "prefixCls": {
          "type": "string",
          "optional": true
        },
        "property": {
          "type": "string",
          "optional": true
        },
        "pull": {
          "type": "ColSpanType",
          "optional": true,
          "description": "Number of columns to pull the column left",
          "typeDefinition": {
            "typeString": "ColSpanType"
          }
        },
        "push": {
          "type": "ColSpanType",
          "optional": true,
          "description": "Number of columns to push the column right",
          "typeDefinition": {
            "typeString": "ColSpanType"
          }
        },
        "radioGroup": {
          "type": "string",
          "optional": true
        },
        "rel": {
          "type": "string",
          "optional": true
        },
        "resource": {
          "type": "string",
          "optional": true
        },
        "results": {
          "type": "number",
          "optional": true
        },
        "rev": {
          "type": "string",
          "optional": true
        },
        "role": {
          "type": "AriaRole",
          "optional": true,
          "typeDefinition": {
            "typeString": "AriaRole"
          }
        },
        "security": {
          "type": "string",
          "optional": true
        },
        "slot": {
          "type": "string",
          "optional": true
        },
        "sm": {
          "type": "union",
          "optional": true,
          "description": "Column properties for small screens (≥576px)",
          "typeDefinition": {
            "typeString": "ColSpanType | ColSize",
            "props": [
              {
                "key": "ColSpanType",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "ColSpanType"
                }
              },
              {
                "key": "ColSize",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "ColSize"
                }
              }
            ]
          }
        },
        "span": {
          "type": "ColSpanType",
          "optional": true,
          "description": "Number of grid columns the column should span",
          "typeDefinition": {
            "typeString": "ColSpanType"
          }
        },
        "spellCheck": {
          "type": "Booleanish",
          "optional": true,
          "typeDefinition": {
            "typeString": "Booleanish"
          }
        },
        "style": {
          "type": "CSSProperties",
          "optional": true,
          "typeDefinition": {
            "typeString": "CSSProperties"
          }
        },
        "suppressContentEditableWarning": {
          "type": "boolean",
          "optional": true
        },
        "suppressHydrationWarning": {
          "type": "boolean",
          "optional": true
        },
        "tabIndex": {
          "type": "number",
          "optional": true
        },
        "title": {
          "type": "string",
          "optional": true
        },
        "translate": {
          "type": "union",
          "optional": true,
          "typeDefinition": {
            "typeString": "no | yes",
            "props": [
              {
                "key": "no",
                "type": "string"
              },
              {
                "key": "yes",
                "type": "string"
              }
            ]
          }
        },
        "typeof": {
          "type": "string",
          "optional": true
        },
        "unselectable": {
          "type": "union",
          "optional": true,
          "typeDefinition": {
            "typeString": "off | on",
            "props": [
              {
                "key": "off",
                "type": "string"
              },
              {
                "key": "on",
                "type": "string"
              }
            ]
          }
        },
        "vocab": {
          "type": "string",
          "optional": true
        },
        "xl": {
          "type": "union",
          "optional": true,
          "description": "Column properties for extra large screens (≥1200px)",
          "typeDefinition": {
            "typeString": "ColSpanType | ColSize",
            "props": [
              {
                "key": "ColSpanType",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "ColSpanType"
                }
              },
              {
                "key": "ColSize",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "ColSize"
                }
              }
            ]
          }
        },
        "xs": {
          "type": "union",
          "optional": true,
          "description": "Column properties for extra small screens (<576px)",
          "typeDefinition": {
            "typeString": "ColSpanType | ColSize",
            "props": [
              {
                "key": "ColSpanType",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "ColSpanType"
                }
              },
              {
                "key": "ColSize",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "ColSize"
                }
              }
            ]
          }
        },
        "xxl": {
          "type": "union",
          "optional": true,
          "description": "Column properties for extra extra large screens (≥1600px)",
          "typeDefinition": {
            "typeString": "ColSpanType | ColSize",
            "props": [
              {
                "key": "ColSpanType",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "ColSpanType"
                }
              },
              {
                "key": "ColSize",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "ColSize"
                }
              }
            ]
          }
        }
      },
      "componentTypeName": "ColProps"
    },
    {
      "name": "Checkbox",
      "description": "The Checkbox component allows users to make binary selections, offering a simple interface for toggling options on or off. It enhances forms by enabling multiple selections, ensuring clear user interaction and feedback. Ideal for settings, preferences, and lists, it promotes efficient data input and user engagement.",
      "props": {
        "autoFocus": {
          "type": "boolean",
          "description": "When true, the checkbox will automatically receive focus when mounted",
          "optional": true
        },
        "checked": {
          "type": "boolean",
          "description": "Controls the checked state of the checkbox. Use this for controlled components",
          "optional": true
        },
        "children": {
          "type": "union",
          "optional": true,
          "description": "Content to display next to the checkbox. Can be text or a JSX element",
          "typeDefinition": {
            "typeString": "string | Element",
            "props": [
              {
                "key": "string",
                "type": "intrinsic"
              },
              {
                "key": "Element",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "Element"
                }
              }
            ]
          }
        },
        "className": {
          "type": "string",
          "description": "Additional CSS class names to apply for custom styling",
          "optional": true
        },
        "defaultChecked": {
          "type": "boolean",
          "description": "Sets the initial checked state for uncontrolled components",
          "optional": true
        },
        "disabled": {
          "type": "boolean",
          "description": "When true, prevents user interaction with the checkbox",
          "optional": true
        },
        "id": {
          "type": "string",
          "description": "Unique identifier for the checkbox element",
          "optional": true
        },
        "indeterminate": {
          "type": "boolean",
          "description": "Shows a minus symbol instead of a check mark when true. Useful for nested checkboxes",
          "optional": true
        },
        "onChange": {
          "type": "object",
          "optional": true,
          "description": "Handler called when checkbox state changes. Receives the new checked state as argument",
          "typeDefinition": {
            "typeString": "(value: boolean) => void",
            "isFunction": true,
            "props": [
              {
                "key": "value",
                "type": "boolean",
                "isParam": true,
                "optional": false
              },
              {
                "key": "void",
                "type": "intrinsic",
                "isReturn": true
              }
            ]
          }
        },
        "size": {
          "type": "union",
          "optional": true,
          "description": "Controls the size of the checkbox. 'sm' (16px) or 'lg' (20px)",
          "typeDefinition": {
            "typeString": "sm | lg",
            "props": [
              {
                "key": "sm",
                "type": "string"
              },
              {
                "key": "lg",
                "type": "string"
              }
            ]
          }
        }
      },
      "componentTypeName": "CheckboxProps"
    },
    {
      "name": "CardWrapper",
      "description": "The CardWrapper component is a versatile container designed to elegantly display content. It features customizable styles, responsive design, and a clean layout, making it ideal for showcasing cards with images, text, and actions. Perfect for enhancing user experience in web applications.",
      "props": {
        "border": {
          "type": "string",
          "description": "Specifies the card's border style, width and color",
          "optional": true
        },
        "borderRadius": {
          "type": "string",
          "description": "Controls the roundness of the card's corners",
          "optional": true
        },
        "boxShadow": {
          "type": "string",
          "description": "Defines the drop shadow effect around the card's edges",
          "optional": true
        },
        "children": {
          "type": "ReactNode",
          "description": "Content to be rendered inside the card wrapper",
          "typeDefinition": {
            "typeString": "ReactNode"
          }
        },
        "className": {
          "type": "string",
          "description": "Additional CSS class names for custom styling",
          "optional": true
        },
        "flexDirection": {
          "type": "FlexDirection",
          "optional": true,
          "description": "Controls how child elements are arranged vertically or horizontally within the card",
          "typeDefinition": {
            "typeString": "FlexDirection"
          }
        },
        "padding": {
          "type": "string",
          "description": "Specifies the inner spacing between the card's content and its edges",
          "optional": true
        },
        "width": {
          "type": "string",
          "description": "Sets the horizontal size of the card container",
          "optional": true
        }
      },
      "componentTypeName": "CardWrapperProps"
    },
    {
      "name": "Card",
      "description": "The Card component is a versatile UI element that encapsulates content and actions. It features a clean design, often with an image, title, and description, making it ideal for displaying information in a structured format. Perfect for showcasing products, articles, or user profiles.",
      "props": {
        "actions": {
          "type": "array",
          "optional": true,
          "description": "Array of action elements to render at bottom of card",
          "typeDefinition": {
            "typeString": "ReactNode[]",
            "isArray": true,
            "props": [
              {
                "key": "ReactNode",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "ReactNode"
                }
              }
            ]
          }
        },
        "activeTabKey": {
          "type": "string",
          "description": "Key of currently active tab",
          "optional": true
        },
        "bordered": {
          "type": "boolean",
          "description": "Whether to show card border",
          "optional": true
        },
        "classNames": {
          "type": "string",
          "description": "Additional CSS class names",
          "optional": true
        },
        "cover": {
          "type": "ReactNode",
          "optional": true,
          "description": "Card cover element displayed at top",
          "typeDefinition": {
            "typeString": "ReactNode"
          }
        },
        "defaultActiveTabKey": {
          "type": "string",
          "description": "Initial active tab key when uncontrolled",
          "optional": true
        },
        "extra": {
          "type": "ReactNode",
          "optional": true,
          "description": "Extra content in top-right corner of card",
          "typeDefinition": {
            "typeString": "ReactNode"
          }
        },
        "hoverable": {
          "type": "boolean",
          "description": "Lift card slightly on hover",
          "optional": true
        },
        "loading": {
          "type": "boolean",
          "description": "Shows loading state",
          "optional": true
        },
        "onTabChange": {
          "type": "object",
          "optional": true,
          "description": "Callback when active tab is changed",
          "typeDefinition": {
            "typeString": "(key: string) => void",
            "isFunction": true,
            "props": [
              {
                "key": "key",
                "type": "string",
                "isParam": true,
                "optional": false
              },
              {
                "key": "void",
                "type": "intrinsic",
                "isReturn": true
              }
            ]
          }
        },
        "size": {
          "type": "CardSize",
          "optional": true,
          "description": "Size of card - 'default' or 'small'",
          "typeDefinition": {
            "typeString": "CardSize"
          }
        },
        "styles": {
          "type": "CSSProperties",
          "optional": true,
          "description": "Inline styles object",
          "typeDefinition": {
            "typeString": "CSSProperties"
          }
        },
        "tabBarExtraContent": {
          "type": "ReactNode",
          "optional": true,
          "description": "Extra content in tab bar",
          "typeDefinition": {
            "typeString": "ReactNode"
          }
        },
        "tabList": {
          "type": "array",
          "optional": true,
          "description": "Configuration for card tabs",
          "typeDefinition": {
            "typeString": "CardTabListType[]",
            "isArray": true,
            "props": [
              {
                "key": "CardTabListType",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "CardTabListType"
                }
              }
            ]
          }
        },
        "tabProps": {
          "type": "TabsProps",
          "optional": true,
          "description": "Additional props for tab elements",
          "typeDefinition": {
            "typeString": "{ activeTab: string, callback?: (key: string) => void, defaultTabKey?: string, items: undefined | Tab[], position?: TabPosition, size?: SizeType }",
            "props": [
              {
                "key": "activeTab",
                "type": "string"
              },
              {
                "key": "callback",
                "type": "(key: string) => void",
                "optional": true,
                "typeDefinition": {
                  "typeString": "(key: string) => void",
                  "isFunction": true,
                  "props": [
                    {
                      "key": "key",
                      "type": "string",
                      "isParam": true,
                      "optional": false
                    },
                    {
                      "key": "void",
                      "type": "intrinsic",
                      "isReturn": true
                    }
                  ]
                }
              },
              {
                "key": "defaultTabKey",
                "type": "string",
                "optional": true
              },
              {
                "key": "items",
                "type": "undefined | Tab[]",
                "typeDefinition": {
                  "typeString": "undefined | Tab[]",
                  "props": [
                    {
                      "key": "undefined",
                      "type": "intrinsic"
                    },
                    {
                      "key": "Tab[]",
                      "type": "array",
                      "typeDefinition": {
                        "typeString": "Tab[]",
                        "isArray": true,
                        "props": [
                          {
                            "key": "Tab",
                            "type": "reference",
                            "typeDefinition": {
                              "typeString": "Tab"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "key": "position",
                "type": "TabPosition",
                "optional": true,
                "typeDefinition": {
                  "typeString": "TabPosition"
                }
              },
              {
                "key": "size",
                "type": "SizeType",
                "optional": true,
                "typeDefinition": {
                  "typeString": "SizeType"
                }
              }
            ]
          }
        },
        "title": {
          "type": "ReactNode",
          "optional": true,
          "description": "Card title displayed at top",
          "typeDefinition": {
            "typeString": "ReactNode"
          }
        },
        "type": {
          "type": "literal",
          "optional": true,
          "description": "Card style type - 'inner' for nested cards"
        }
      },
      "componentTypeName": "CardProps"
    },
    {
      "name": "Button",
      "description": "The Button component is a versatile UI element designed for user interaction. It triggers actions or events when clicked, featuring customizable styles, sizes, and labels. Ideal for forms, navigation, and calls to action, it enhances user experience by providing clear feedback and accessibility.",
      "props": {
        "block": {
          "type": "boolean",
          "description": "Makes the button expand to fill the full width of its container",
          "optional": true
        },
        "children": {
          "type": "string",
          "description": "Text content displayed inside the button",
          "optional": true
        },
        "className": {
          "type": "string",
          "description": "Additional CSS class names for custom styling",
          "optional": true
        },
        "danger": {
          "type": "boolean",
          "description": "Applies danger/error styling to the button",
          "optional": true
        },
        "disabled": {
          "type": "boolean",
          "description": "When true, prevents user interaction with the button",
          "optional": true
        },
        "href": {
          "type": "string",
          "description": "URL that the button will navigate to when clicked",
          "optional": true
        },
        "icon": {
          "type": "union",
          "optional": true,
          "description": "Name of the icon to display in the button. No icon shown if empty",
          "typeDefinition": {
            "typeString": " | wallet-add | wallet | activity-outline | airplaine-outline | alert-circle-outline | alert-octagon-outline | alert-triangle-outline | align-center-outline | align-justify-outline | align-left-outline | align-right-outline | anchor-outline | aperture-outline | arrow-down-outline | arrow-down-long-outline | arrow-down-circle-outline | arrow-down-left-outline | arrow-down-right-outline | arrow-left-circle-outline | arrow-left-outline | arrow-right-circle-outline | arrow-right-outline | arrow-up-circle-outline | arrow-up-left-outline | arrow-up-outline | arrow-up-long-outline | arrow-up-right-outline | at-sign-outline | award-outline | bar-chart2outline | bar-chart-outline | battery-charging-outline | battery-outline | bell-off-outline | bell-outline | bluetooth-outline | bnpl-outline | bold-outline | book-open-outline | book-outline | bookmark-outline | box-outline | briefcase-outline | calendar-outline | camera-off-outline | camera-outline | cash-loan-money-rp-outline | cast-outline | cat-outline | chat-outline | check-circle | check-circle-outline | check-outline | check-square-outline | chevron-down-outline | chevron-left-outline | chevron-right-outline | chevron-up-outline | chevrons-down-outline | chevrons-left-outline | chevrons-right-outline | chevrons-up-outline | chrome-outline | circle-outline | clipboard-outline | clock-outline | close-outline | cloud-drizzle-outline | cloud-lightning-outline | cloud-off-outline | cloud-outline | cloud-rain-outline | cloud-snow-outline | code-outline | codepen-outline | codesandbox-outline | coffee-outline | columns-outline | command-outline | community-outline | compass-outline | copy-outline | corner-down-left-outline | corner-down-right-outline | corner-left-down-outline | corner-left-up-outline | corner-right-down-outline | corner-right-up-outline | corner-up-left-outline | corner-up-right-outline | cpu-outline | credit-card-outline | crop-outline | database-outline | delete-outline | disc-outline | distributor-outline | divide-circle-outline | divide-outline | divide-square-outline | dollar-sign-outline | dot | download-cloud-outline | download-outline | dribbble-outline | droplet-outline | edc-outline | edit2-outline | edit3-outline | edit-outline | external-link-outline | eye-off-outline | eye-outline | facebook-outline | fast-forward-outline | feather-outline | figma-outline | file-minus-outline | file-outline | file-plus-outline | file-text-outline | film-outline | filter-outline | flag-outline | folder-minus-outline | folder-outline | folder-plus-outline | framer-outline | frown-outline | gift-outline | git-branch-outline | git-commit-outline | git-merge-outline | git-pull-request-outline | gitlab-outline | grid-outline | hand-card-outline | hard-drive-outline | hash-outline | headphones-outline | heart-outline | help-circle-outline | hexagon-outline | home-outline | image-outline | inbox-outline | info-circle | info-outline | info-triangle | instagram-outline | incomplete-loan-outline | italic-outline | key-outline | layers-outline | layout-outline | life-buoy-outline | link2-outline | link-outline | linkedin-outline | list-outline | loader-outline | location-outline | lock-outline | log-in-outline | log-out-outline | mail-outline | map-outline | map-pin-outline | maximize2-outline | maximize-outline | meh-outline | menu-outline | merchant-outline | message-circle-outline | message-square-outline | mic-off-outline | mic-outline | minimize2-outline | minimize-outline | minus-circle-outline | minus-outline | minus-square-outline | money-in-outline | monitor-outline | moon-outline | more-horizontal-outline | more-vertical-outline | mouse-pointer-outline | move-outline | music-outline | navigation2-outline | navigation-outline | octagon-outline | package-outline | paper-scroll | paperclip-outline | partnership-outline | pause-circle-outline | pause-outline | pen-tool-outline | percent-outline | phone-call-outline | phone-forwarded-outline | phone-incoming-outline | phone-missed-outline | phone-off-outline | phone-outgoing-outline | phone-outline | pie-chart-outline | play-circle-outline | play-outline | plus-circle-outline | plus-outline | plus-square-outline | pocket-outline | power-outline | printer-outline | radio-outline | receipt-outline | refresh-ccw-outline | refresh-cw-outline | refund-money-rp-outline | repeat-outline | rewind-outline | rotate-ccw-outline | rotate-cw-outline | save-outline | scanner-outline | scissors-outline | search-outline | send-outline | send-money-rp | server-outline | settings-outline | share2-outline | share-outline | shield-off-outline | shield-outline | shopping-bag-outline | shopping-cart-outline | shuffle-outline | sidebar-outline | skip-back-outline | skip-forward-outline | slack-outline | slash-outline | sliders-outline | smartphone-outline | smile-outline | speaker-outline | square-outline | star-outline | stop-circle-outline | sun-outline | sunrise-outline | sunset-outline | supplier-outline | tablet-outline | tag-outline | target1-outline | target-outline | terminal-outline | thermometer-outline | thumbs-down-outline | thumbs-up-outline | toggle-left-outline | toggle-right-outline | tool-outline | trash2-outline | trash-outline | trello-outline | trending-down-outline | trending-up-outline | triangle-outline | truck-outline | tv-outline | twitch-outline | twitter-outline | type-outline | umbrella-outline | underline-outline | unlock-outline | upload-cloud-outline | upload-outline | user-check-outline | user-minus-outline | user-outline | user-plus-outline | user-xoutline | users-outline | video-of-outline | video-outline | voicemail-outline | volume1-outline | volume2-outline | volume-outline | volume-xoutline | watch-outline | web-outline | wifi1-outline | wifi-off-outline | wifi-outline | wind-outline | xcircle-outline | xoctagon-outline | xsquare-outline | youtube-outline | zap-off-outline | zap-outline | zoom-in-outline | zoom-out-outline",
            "props": [
              {
                "key": "",
                "type": "string"
              },
              {
                "key": "wallet-add",
                "type": "string"
              },
              {
                "key": "wallet",
                "type": "string"
              },
              {
                "key": "activity-outline",
                "type": "string"
              },
              {
                "key": "airplaine-outline",
                "type": "string"
              },
              {
                "key": "alert-circle-outline",
                "type": "string"
              },
              {
                "key": "alert-octagon-outline",
                "type": "string"
              },
              {
                "key": "alert-triangle-outline",
                "type": "string"
              },
              {
                "key": "align-center-outline",
                "type": "string"
              },
              {
                "key": "align-justify-outline",
                "type": "string"
              },
              {
                "key": "align-left-outline",
                "type": "string"
              },
              {
                "key": "align-right-outline",
                "type": "string"
              },
              {
                "key": "anchor-outline",
                "type": "string"
              },
              {
                "key": "aperture-outline",
                "type": "string"
              },
              {
                "key": "arrow-down-outline",
                "type": "string"
              },
              {
                "key": "arrow-down-long-outline",
                "type": "string"
              },
              {
                "key": "arrow-down-circle-outline",
                "type": "string"
              },
              {
                "key": "arrow-down-left-outline",
                "type": "string"
              },
              {
                "key": "arrow-down-right-outline",
                "type": "string"
              },
              {
                "key": "arrow-left-circle-outline",
                "type": "string"
              },
              {
                "key": "arrow-left-outline",
                "type": "string"
              },
              {
                "key": "arrow-right-circle-outline",
                "type": "string"
              },
              {
                "key": "arrow-right-outline",
                "type": "string"
              },
              {
                "key": "arrow-up-circle-outline",
                "type": "string"
              },
              {
                "key": "arrow-up-left-outline",
                "type": "string"
              },
              {
                "key": "arrow-up-outline",
                "type": "string"
              },
              {
                "key": "arrow-up-long-outline",
                "type": "string"
              },
              {
                "key": "arrow-up-right-outline",
                "type": "string"
              },
              {
                "key": "at-sign-outline",
                "type": "string"
              },
              {
                "key": "award-outline",
                "type": "string"
              },
              {
                "key": "bar-chart2outline",
                "type": "string"
              },
              {
                "key": "bar-chart-outline",
                "type": "string"
              },
              {
                "key": "battery-charging-outline",
                "type": "string"
              },
              {
                "key": "battery-outline",
                "type": "string"
              },
              {
                "key": "bell-off-outline",
                "type": "string"
              },
              {
                "key": "bell-outline",
                "type": "string"
              },
              {
                "key": "bluetooth-outline",
                "type": "string"
              },
              {
                "key": "bnpl-outline",
                "type": "string"
              },
              {
                "key": "bold-outline",
                "type": "string"
              },
              {
                "key": "book-open-outline",
                "type": "string"
              },
              {
                "key": "book-outline",
                "type": "string"
              },
              {
                "key": "bookmark-outline",
                "type": "string"
              },
              {
                "key": "box-outline",
                "type": "string"
              },
              {
                "key": "briefcase-outline",
                "type": "string"
              },
              {
                "key": "calendar-outline",
                "type": "string"
              },
              {
                "key": "camera-off-outline",
                "type": "string"
              },
              {
                "key": "camera-outline",
                "type": "string"
              },
              {
                "key": "cash-loan-money-rp-outline",
                "type": "string"
              },
              {
                "key": "cast-outline",
                "type": "string"
              },
              {
                "key": "cat-outline",
                "type": "string"
              },
              {
                "key": "chat-outline",
                "type": "string"
              },
              {
                "key": "check-circle",
                "type": "string"
              },
              {
                "key": "check-circle-outline",
                "type": "string"
              },
              {
                "key": "check-outline",
                "type": "string"
              },
              {
                "key": "check-square-outline",
                "type": "string"
              },
              {
                "key": "chevron-down-outline",
                "type": "string"
              },
              {
                "key": "chevron-left-outline",
                "type": "string"
              },
              {
                "key": "chevron-right-outline",
                "type": "string"
              },
              {
                "key": "chevron-up-outline",
                "type": "string"
              },
              {
                "key": "chevrons-down-outline",
                "type": "string"
              },
              {
                "key": "chevrons-left-outline",
                "type": "string"
              },
              {
                "key": "chevrons-right-outline",
                "type": "string"
              },
              {
                "key": "chevrons-up-outline",
                "type": "string"
              },
              {
                "key": "chrome-outline",
                "type": "string"
              },
              {
                "key": "circle-outline",
                "type": "string"
              },
              {
                "key": "clipboard-outline",
                "type": "string"
              },
              {
                "key": "clock-outline",
                "type": "string"
              },
              {
                "key": "close-outline",
                "type": "string"
              },
              {
                "key": "cloud-drizzle-outline",
                "type": "string"
              },
              {
                "key": "cloud-lightning-outline",
                "type": "string"
              },
              {
                "key": "cloud-off-outline",
                "type": "string"
              },
              {
                "key": "cloud-outline",
                "type": "string"
              },
              {
                "key": "cloud-rain-outline",
                "type": "string"
              },
              {
                "key": "cloud-snow-outline",
                "type": "string"
              },
              {
                "key": "code-outline",
                "type": "string"
              },
              {
                "key": "codepen-outline",
                "type": "string"
              },
              {
                "key": "codesandbox-outline",
                "type": "string"
              },
              {
                "key": "coffee-outline",
                "type": "string"
              },
              {
                "key": "columns-outline",
                "type": "string"
              },
              {
                "key": "command-outline",
                "type": "string"
              },
              {
                "key": "community-outline",
                "type": "string"
              },
              {
                "key": "compass-outline",
                "type": "string"
              },
              {
                "key": "copy-outline",
                "type": "string"
              },
              {
                "key": "corner-down-left-outline",
                "type": "string"
              },
              {
                "key": "corner-down-right-outline",
                "type": "string"
              },
              {
                "key": "corner-left-down-outline",
                "type": "string"
              },
              {
                "key": "corner-left-up-outline",
                "type": "string"
              },
              {
                "key": "corner-right-down-outline",
                "type": "string"
              },
              {
                "key": "corner-right-up-outline",
                "type": "string"
              },
              {
                "key": "corner-up-left-outline",
                "type": "string"
              },
              {
                "key": "corner-up-right-outline",
                "type": "string"
              },
              {
                "key": "cpu-outline",
                "type": "string"
              },
              {
                "key": "credit-card-outline",
                "type": "string"
              },
              {
                "key": "crop-outline",
                "type": "string"
              },
              {
                "key": "database-outline",
                "type": "string"
              },
              {
                "key": "delete-outline",
                "type": "string"
              },
              {
                "key": "disc-outline",
                "type": "string"
              },
              {
                "key": "distributor-outline",
                "type": "string"
              },
              {
                "key": "divide-circle-outline",
                "type": "string"
              },
              {
                "key": "divide-outline",
                "type": "string"
              },
              {
                "key": "divide-square-outline",
                "type": "string"
              },
              {
                "key": "dollar-sign-outline",
                "type": "string"
              },
              {
                "key": "dot",
                "type": "string"
              },
              {
                "key": "download-cloud-outline",
                "type": "string"
              },
              {
                "key": "download-outline",
                "type": "string"
              },
              {
                "key": "dribbble-outline",
                "type": "string"
              },
              {
                "key": "droplet-outline",
                "type": "string"
              },
              {
                "key": "edc-outline",
                "type": "string"
              },
              {
                "key": "edit2-outline",
                "type": "string"
              },
              {
                "key": "edit3-outline",
                "type": "string"
              },
              {
                "key": "edit-outline",
                "type": "string"
              },
              {
                "key": "external-link-outline",
                "type": "string"
              },
              {
                "key": "eye-off-outline",
                "type": "string"
              },
              {
                "key": "eye-outline",
                "type": "string"
              },
              {
                "key": "facebook-outline",
                "type": "string"
              },
              {
                "key": "fast-forward-outline",
                "type": "string"
              },
              {
                "key": "feather-outline",
                "type": "string"
              },
              {
                "key": "figma-outline",
                "type": "string"
              },
              {
                "key": "file-minus-outline",
                "type": "string"
              },
              {
                "key": "file-outline",
                "type": "string"
              },
              {
                "key": "file-plus-outline",
                "type": "string"
              },
              {
                "key": "file-text-outline",
                "type": "string"
              },
              {
                "key": "film-outline",
                "type": "string"
              },
              {
                "key": "filter-outline",
                "type": "string"
              },
              {
                "key": "flag-outline",
                "type": "string"
              },
              {
                "key": "folder-minus-outline",
                "type": "string"
              },
              {
                "key": "folder-outline",
                "type": "string"
              },
              {
                "key": "folder-plus-outline",
                "type": "string"
              },
              {
                "key": "framer-outline",
                "type": "string"
              },
              {
                "key": "frown-outline",
                "type": "string"
              },
              {
                "key": "gift-outline",
                "type": "string"
              },
              {
                "key": "git-branch-outline",
                "type": "string"
              },
              {
                "key": "git-commit-outline",
                "type": "string"
              },
              {
                "key": "git-merge-outline",
                "type": "string"
              },
              {
                "key": "git-pull-request-outline",
                "type": "string"
              },
              {
                "key": "gitlab-outline",
                "type": "string"
              },
              {
                "key": "grid-outline",
                "type": "string"
              },
              {
                "key": "hand-card-outline",
                "type": "string"
              },
              {
                "key": "hard-drive-outline",
                "type": "string"
              },
              {
                "key": "hash-outline",
                "type": "string"
              },
              {
                "key": "headphones-outline",
                "type": "string"
              },
              {
                "key": "heart-outline",
                "type": "string"
              },
              {
                "key": "help-circle-outline",
                "type": "string"
              },
              {
                "key": "hexagon-outline",
                "type": "string"
              },
              {
                "key": "home-outline",
                "type": "string"
              },
              {
                "key": "image-outline",
                "type": "string"
              },
              {
                "key": "inbox-outline",
                "type": "string"
              },
              {
                "key": "info-circle",
                "type": "string"
              },
              {
                "key": "info-outline",
                "type": "string"
              },
              {
                "key": "info-triangle",
                "type": "string"
              },
              {
                "key": "instagram-outline",
                "type": "string"
              },
              {
                "key": "incomplete-loan-outline",
                "type": "string"
              },
              {
                "key": "italic-outline",
                "type": "string"
              },
              {
                "key": "key-outline",
                "type": "string"
              },
              {
                "key": "layers-outline",
                "type": "string"
              },
              {
                "key": "layout-outline",
                "type": "string"
              },
              {
                "key": "life-buoy-outline",
                "type": "string"
              },
              {
                "key": "link2-outline",
                "type": "string"
              },
              {
                "key": "link-outline",
                "type": "string"
              },
              {
                "key": "linkedin-outline",
                "type": "string"
              },
              {
                "key": "list-outline",
                "type": "string"
              },
              {
                "key": "loader-outline",
                "type": "string"
              },
              {
                "key": "location-outline",
                "type": "string"
              },
              {
                "key": "lock-outline",
                "type": "string"
              },
              {
                "key": "log-in-outline",
                "type": "string"
              },
              {
                "key": "log-out-outline",
                "type": "string"
              },
              {
                "key": "mail-outline",
                "type": "string"
              },
              {
                "key": "map-outline",
                "type": "string"
              },
              {
                "key": "map-pin-outline",
                "type": "string"
              },
              {
                "key": "maximize2-outline",
                "type": "string"
              },
              {
                "key": "maximize-outline",
                "type": "string"
              },
              {
                "key": "meh-outline",
                "type": "string"
              },
              {
                "key": "menu-outline",
                "type": "string"
              },
              {
                "key": "merchant-outline",
                "type": "string"
              },
              {
                "key": "message-circle-outline",
                "type": "string"
              },
              {
                "key": "message-square-outline",
                "type": "string"
              },
              {
                "key": "mic-off-outline",
                "type": "string"
              },
              {
                "key": "mic-outline",
                "type": "string"
              },
              {
                "key": "minimize2-outline",
                "type": "string"
              },
              {
                "key": "minimize-outline",
                "type": "string"
              },
              {
                "key": "minus-circle-outline",
                "type": "string"
              },
              {
                "key": "minus-outline",
                "type": "string"
              },
              {
                "key": "minus-square-outline",
                "type": "string"
              },
              {
                "key": "money-in-outline",
                "type": "string"
              },
              {
                "key": "monitor-outline",
                "type": "string"
              },
              {
                "key": "moon-outline",
                "type": "string"
              },
              {
                "key": "more-horizontal-outline",
                "type": "string"
              },
              {
                "key": "more-vertical-outline",
                "type": "string"
              },
              {
                "key": "mouse-pointer-outline",
                "type": "string"
              },
              {
                "key": "move-outline",
                "type": "string"
              },
              {
                "key": "music-outline",
                "type": "string"
              },
              {
                "key": "navigation2-outline",
                "type": "string"
              },
              {
                "key": "navigation-outline",
                "type": "string"
              },
              {
                "key": "octagon-outline",
                "type": "string"
              },
              {
                "key": "package-outline",
                "type": "string"
              },
              {
                "key": "paper-scroll",
                "type": "string"
              },
              {
                "key": "paperclip-outline",
                "type": "string"
              },
              {
                "key": "partnership-outline",
                "type": "string"
              },
              {
                "key": "pause-circle-outline",
                "type": "string"
              },
              {
                "key": "pause-outline",
                "type": "string"
              },
              {
                "key": "pen-tool-outline",
                "type": "string"
              },
              {
                "key": "percent-outline",
                "type": "string"
              },
              {
                "key": "phone-call-outline",
                "type": "string"
              },
              {
                "key": "phone-forwarded-outline",
                "type": "string"
              },
              {
                "key": "phone-incoming-outline",
                "type": "string"
              },
              {
                "key": "phone-missed-outline",
                "type": "string"
              },
              {
                "key": "phone-off-outline",
                "type": "string"
              },
              {
                "key": "phone-outgoing-outline",
                "type": "string"
              },
              {
                "key": "phone-outline",
                "type": "string"
              },
              {
                "key": "pie-chart-outline",
                "type": "string"
              },
              {
                "key": "play-circle-outline",
                "type": "string"
              },
              {
                "key": "play-outline",
                "type": "string"
              },
              {
                "key": "plus-circle-outline",
                "type": "string"
              },
              {
                "key": "plus-outline",
                "type": "string"
              },
              {
                "key": "plus-square-outline",
                "type": "string"
              },
              {
                "key": "pocket-outline",
                "type": "string"
              },
              {
                "key": "power-outline",
                "type": "string"
              },
              {
                "key": "printer-outline",
                "type": "string"
              },
              {
                "key": "radio-outline",
                "type": "string"
              },
              {
                "key": "receipt-outline",
                "type": "string"
              },
              {
                "key": "refresh-ccw-outline",
                "type": "string"
              },
              {
                "key": "refresh-cw-outline",
                "type": "string"
              },
              {
                "key": "refund-money-rp-outline",
                "type": "string"
              },
              {
                "key": "repeat-outline",
                "type": "string"
              },
              {
                "key": "rewind-outline",
                "type": "string"
              },
              {
                "key": "rotate-ccw-outline",
                "type": "string"
              },
              {
                "key": "rotate-cw-outline",
                "type": "string"
              },
              {
                "key": "save-outline",
                "type": "string"
              },
              {
                "key": "scanner-outline",
                "type": "string"
              },
              {
                "key": "scissors-outline",
                "type": "string"
              },
              {
                "key": "search-outline",
                "type": "string"
              },
              {
                "key": "send-outline",
                "type": "string"
              },
              {
                "key": "send-money-rp",
                "type": "string"
              },
              {
                "key": "server-outline",
                "type": "string"
              },
              {
                "key": "settings-outline",
                "type": "string"
              },
              {
                "key": "share2-outline",
                "type": "string"
              },
              {
                "key": "share-outline",
                "type": "string"
              },
              {
                "key": "shield-off-outline",
                "type": "string"
              },
              {
                "key": "shield-outline",
                "type": "string"
              },
              {
                "key": "shopping-bag-outline",
                "type": "string"
              },
              {
                "key": "shopping-cart-outline",
                "type": "string"
              },
              {
                "key": "shuffle-outline",
                "type": "string"
              },
              {
                "key": "sidebar-outline",
                "type": "string"
              },
              {
                "key": "skip-back-outline",
                "type": "string"
              },
              {
                "key": "skip-forward-outline",
                "type": "string"
              },
              {
                "key": "slack-outline",
                "type": "string"
              },
              {
                "key": "slash-outline",
                "type": "string"
              },
              {
                "key": "sliders-outline",
                "type": "string"
              },
              {
                "key": "smartphone-outline",
                "type": "string"
              },
              {
                "key": "smile-outline",
                "type": "string"
              },
              {
                "key": "speaker-outline",
                "type": "string"
              },
              {
                "key": "square-outline",
                "type": "string"
              },
              {
                "key": "star-outline",
                "type": "string"
              },
              {
                "key": "stop-circle-outline",
                "type": "string"
              },
              {
                "key": "sun-outline",
                "type": "string"
              },
              {
                "key": "sunrise-outline",
                "type": "string"
              },
              {
                "key": "sunset-outline",
                "type": "string"
              },
              {
                "key": "supplier-outline",
                "type": "string"
              },
              {
                "key": "tablet-outline",
                "type": "string"
              },
              {
                "key": "tag-outline",
                "type": "string"
              },
              {
                "key": "target1-outline",
                "type": "string"
              },
              {
                "key": "target-outline",
                "type": "string"
              },
              {
                "key": "terminal-outline",
                "type": "string"
              },
              {
                "key": "thermometer-outline",
                "type": "string"
              },
              {
                "key": "thumbs-down-outline",
                "type": "string"
              },
              {
                "key": "thumbs-up-outline",
                "type": "string"
              },
              {
                "key": "toggle-left-outline",
                "type": "string"
              },
              {
                "key": "toggle-right-outline",
                "type": "string"
              },
              {
                "key": "tool-outline",
                "type": "string"
              },
              {
                "key": "trash2-outline",
                "type": "string"
              },
              {
                "key": "trash-outline",
                "type": "string"
              },
              {
                "key": "trello-outline",
                "type": "string"
              },
              {
                "key": "trending-down-outline",
                "type": "string"
              },
              {
                "key": "trending-up-outline",
                "type": "string"
              },
              {
                "key": "triangle-outline",
                "type": "string"
              },
              {
                "key": "truck-outline",
                "type": "string"
              },
              {
                "key": "tv-outline",
                "type": "string"
              },
              {
                "key": "twitch-outline",
                "type": "string"
              },
              {
                "key": "twitter-outline",
                "type": "string"
              },
              {
                "key": "type-outline",
                "type": "string"
              },
              {
                "key": "umbrella-outline",
                "type": "string"
              },
              {
                "key": "underline-outline",
                "type": "string"
              },
              {
                "key": "unlock-outline",
                "type": "string"
              },
              {
                "key": "upload-cloud-outline",
                "type": "string"
              },
              {
                "key": "upload-outline",
                "type": "string"
              },
              {
                "key": "user-check-outline",
                "type": "string"
              },
              {
                "key": "user-minus-outline",
                "type": "string"
              },
              {
                "key": "user-outline",
                "type": "string"
              },
              {
                "key": "user-plus-outline",
                "type": "string"
              },
              {
                "key": "user-xoutline",
                "type": "string"
              },
              {
                "key": "users-outline",
                "type": "string"
              },
              {
                "key": "video-of-outline",
                "type": "string"
              },
              {
                "key": "video-outline",
                "type": "string"
              },
              {
                "key": "voicemail-outline",
                "type": "string"
              },
              {
                "key": "volume1-outline",
                "type": "string"
              },
              {
                "key": "volume2-outline",
                "type": "string"
              },
              {
                "key": "volume-outline",
                "type": "string"
              },
              {
                "key": "volume-xoutline",
                "type": "string"
              },
              {
                "key": "watch-outline",
                "type": "string"
              },
              {
                "key": "web-outline",
                "type": "string"
              },
              {
                "key": "wifi1-outline",
                "type": "string"
              },
              {
                "key": "wifi-off-outline",
                "type": "string"
              },
              {
                "key": "wifi-outline",
                "type": "string"
              },
              {
                "key": "wind-outline",
                "type": "string"
              },
              {
                "key": "xcircle-outline",
                "type": "string"
              },
              {
                "key": "xoctagon-outline",
                "type": "string"
              },
              {
                "key": "xsquare-outline",
                "type": "string"
              },
              {
                "key": "youtube-outline",
                "type": "string"
              },
              {
                "key": "zap-off-outline",
                "type": "string"
              },
              {
                "key": "zap-outline",
                "type": "string"
              },
              {
                "key": "zoom-in-outline",
                "type": "string"
              },
              {
                "key": "zoom-out-outline",
                "type": "string"
              }
            ]
          }
        },
        "iconProps": {
          "type": "IconProps",
          "optional": true,
          "description": "Custom properties to configure the button's icon display",
          "typeDefinition": {
            "typeString": "{ color?: string, height?: number, hoverColor?: string, name?: '' | 'wallet-add' | 'wallet' | 'activity-outline' | 'airplaine-outline' | 'alert-circle-outline' | 'alert-octagon-outline' | 'alert-triangle-outline' | 'align-center-outline' | 'align-justify-outline' | 'align-left-outline' | 'align-right-outline' | 'anchor-outline' | 'aperture-outline' | 'arrow-down-outline' | 'arrow-down-long-outline' | 'arrow-down-circle-outline' | 'arrow-down-left-outline' | 'arrow-down-right-outline' | 'arrow-left-circle-outline' | 'arrow-left-outline' | 'arrow-right-circle-outline' | 'arrow-right-outline' | 'arrow-up-circle-outline' | 'arrow-up-left-outline' | 'arrow-up-outline' | 'arrow-up-long-outline' | 'arrow-up-right-outline' | 'at-sign-outline' | 'award-outline' | 'bar-chart2outline' | 'bar-chart-outline' | 'battery-charging-outline' | 'battery-outline' | 'bell-off-outline' | 'bell-outline' | 'bluetooth-outline' | 'bnpl-outline' | 'bold-outline' | 'book-open-outline' | 'book-outline' | 'bookmark-outline' | 'box-outline' | 'briefcase-outline' | 'calendar-outline' | 'camera-off-outline' | 'camera-outline' | 'cash-loan-money-rp-outline' | 'cast-outline' | 'cat-outline' | 'chat-outline' | 'check-circle' | 'check-circle-outline' | 'check-outline' | 'check-square-outline' | 'chevron-down-outline' | 'chevron-left-outline' | 'chevron-right-outline' | 'chevron-up-outline' | 'chevrons-down-outline' | 'chevrons-left-outline' | 'chevrons-right-outline' | 'chevrons-up-outline' | 'chrome-outline' | 'circle-outline' | 'clipboard-outline' | 'clock-outline' | 'close-outline' | 'cloud-drizzle-outline' | 'cloud-lightning-outline' | 'cloud-off-outline' | 'cloud-outline' | 'cloud-rain-outline' | 'cloud-snow-outline' | 'code-outline' | 'codepen-outline' | 'codesandbox-outline' | 'coffee-outline' | 'columns-outline' | 'command-outline' | 'community-outline' | 'compass-outline' | 'copy-outline' | 'corner-down-left-outline' | 'corner-down-right-outline' | 'corner-left-down-outline' | 'corner-left-up-outline' | 'corner-right-down-outline' | 'corner-right-up-outline' | 'corner-up-left-outline' | 'corner-up-right-outline' | 'cpu-outline' | 'credit-card-outline' | 'crop-outline' | 'database-outline' | 'delete-outline' | 'disc-outline' | 'distributor-outline' | 'divide-circle-outline' | 'divide-outline' | 'divide-square-outline' | 'dollar-sign-outline' | 'dot' | 'download-cloud-outline' | 'download-outline' | 'dribbble-outline' | 'droplet-outline' | 'edc-outline' | 'edit2-outline' | 'edit3-outline' | 'edit-outline' | 'external-link-outline' | 'eye-off-outline' | 'eye-outline' | 'facebook-outline' | 'fast-forward-outline' | 'feather-outline' | 'figma-outline' | 'file-minus-outline' | 'file-outline' | 'file-plus-outline' | 'file-text-outline' | 'film-outline' | 'filter-outline' | 'flag-outline' | 'folder-minus-outline' | 'folder-outline' | 'folder-plus-outline' | 'framer-outline' | 'frown-outline' | 'gift-outline' | 'git-branch-outline' | 'git-commit-outline' | 'git-merge-outline' | 'git-pull-request-outline' | 'gitlab-outline' | 'grid-outline' | 'hand-card-outline' | 'hard-drive-outline' | 'hash-outline' | 'headphones-outline' | 'heart-outline' | 'help-circle-outline' | 'hexagon-outline' | 'home-outline' | 'image-outline' | 'inbox-outline' | 'info-circle' | 'info-outline' | 'info-triangle' | 'instagram-outline' | 'incomplete-loan-outline' | 'italic-outline' | 'key-outline' | 'layers-outline' | 'layout-outline' | 'life-buoy-outline' | 'link2-outline' | 'link-outline' | 'linkedin-outline' | 'list-outline' | 'loader-outline' | 'location-outline' | 'lock-outline' | 'log-in-outline' | 'log-out-outline' | 'mail-outline' | 'map-outline' | 'map-pin-outline' | 'maximize2-outline' | 'maximize-outline' | 'meh-outline' | 'menu-outline' | 'merchant-outline' | 'message-circle-outline' | 'message-square-outline' | 'mic-off-outline' | 'mic-outline' | 'minimize2-outline' | 'minimize-outline' | 'minus-circle-outline' | 'minus-outline' | 'minus-square-outline' | 'money-in-outline' | 'monitor-outline' | 'moon-outline' | 'more-horizontal-outline' | 'more-vertical-outline' | 'mouse-pointer-outline' | 'move-outline' | 'music-outline' | 'navigation2-outline' | 'navigation-outline' | 'octagon-outline' | 'package-outline' | 'paper-scroll' | 'paperclip-outline' | 'partnership-outline' | 'pause-circle-outline' | 'pause-outline' | 'pen-tool-outline' | 'percent-outline' | 'phone-call-outline' | 'phone-forwarded-outline' | 'phone-incoming-outline' | 'phone-missed-outline' | 'phone-off-outline' | 'phone-outgoing-outline' | 'phone-outline' | 'pie-chart-outline' | 'play-circle-outline' | 'play-outline' | 'plus-circle-outline' | 'plus-outline' | 'plus-square-outline' | 'pocket-outline' | 'power-outline' | 'printer-outline' | 'radio-outline' | 'receipt-outline' | 'refresh-ccw-outline' | 'refresh-cw-outline' | 'refund-money-rp-outline' | 'repeat-outline' | 'rewind-outline' | 'rotate-ccw-outline' | 'rotate-cw-outline' | 'save-outline' | 'scanner-outline' | 'scissors-outline' | 'search-outline' | 'send-outline' | 'send-money-rp' | 'server-outline' | 'settings-outline' | 'share2-outline' | 'share-outline' | 'shield-off-outline' | 'shield-outline' | 'shopping-bag-outline' | 'shopping-cart-outline' | 'shuffle-outline' | 'sidebar-outline' | 'skip-back-outline' | 'skip-forward-outline' | 'slack-outline' | 'slash-outline' | 'sliders-outline' | 'smartphone-outline' | 'smile-outline' | 'speaker-outline' | 'square-outline' | 'star-outline' | 'stop-circle-outline' | 'sun-outline' | 'sunrise-outline' | 'sunset-outline' | 'supplier-outline' | 'tablet-outline' | 'tag-outline' | 'target1-outline' | 'target-outline' | 'terminal-outline' | 'thermometer-outline' | 'thumbs-down-outline' | 'thumbs-up-outline' | 'toggle-left-outline' | 'toggle-right-outline' | 'tool-outline' | 'trash2-outline' | 'trash-outline' | 'trello-outline' | 'trending-down-outline' | 'trending-up-outline' | 'triangle-outline' | 'truck-outline' | 'tv-outline' | 'twitch-outline' | 'twitter-outline' | 'type-outline' | 'umbrella-outline' | 'underline-outline' | 'unlock-outline' | 'upload-cloud-outline' | 'upload-outline' | 'user-check-outline' | 'user-minus-outline' | 'user-outline' | 'user-plus-outline' | 'user-xoutline' | 'users-outline' | 'video-of-outline' | 'video-outline' | 'voicemail-outline' | 'volume1-outline' | 'volume2-outline' | 'volume-outline' | 'volume-xoutline' | 'watch-outline' | 'web-outline' | 'wifi1-outline' | 'wifi-off-outline' | 'wifi-outline' | 'wind-outline' | 'xcircle-outline' | 'xoctagon-outline' | 'xsquare-outline' | 'youtube-outline' | 'zap-off-outline' | 'zap-outline' | 'zoom-in-outline' | 'zoom-out-outline', onClick?: () => void, size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl', useCurrentColor?: boolean, width?: number }",
            "props": [
              {
                "key": "color",
                "type": "string",
                "optional": true
              },
              {
                "key": "height",
                "type": "number",
                "optional": true
              },
              {
                "key": "hoverColor",
                "type": "string",
                "optional": true
              },
              {
                "key": "name",
                "type": "'' | 'wallet-add' | 'wallet' | 'activity-outline' | 'airplaine-outline' | 'alert-circle-outline' | 'alert-octagon-outline' | 'alert-triangle-outline' | 'align-center-outline' | 'align-justify-outline' | 'align-left-outline' | 'align-right-outline' | 'anchor-outline' | 'aperture-outline' | 'arrow-down-outline' | 'arrow-down-long-outline' | 'arrow-down-circle-outline' | 'arrow-down-left-outline' | 'arrow-down-right-outline' | 'arrow-left-circle-outline' | 'arrow-left-outline' | 'arrow-right-circle-outline' | 'arrow-right-outline' | 'arrow-up-circle-outline' | 'arrow-up-left-outline' | 'arrow-up-outline' | 'arrow-up-long-outline' | 'arrow-up-right-outline' | 'at-sign-outline' | 'award-outline' | 'bar-chart2outline' | 'bar-chart-outline' | 'battery-charging-outline' | 'battery-outline' | 'bell-off-outline' | 'bell-outline' | 'bluetooth-outline' | 'bnpl-outline' | 'bold-outline' | 'book-open-outline' | 'book-outline' | 'bookmark-outline' | 'box-outline' | 'briefcase-outline' | 'calendar-outline' | 'camera-off-outline' | 'camera-outline' | 'cash-loan-money-rp-outline' | 'cast-outline' | 'cat-outline' | 'chat-outline' | 'check-circle' | 'check-circle-outline' | 'check-outline' | 'check-square-outline' | 'chevron-down-outline' | 'chevron-left-outline' | 'chevron-right-outline' | 'chevron-up-outline' | 'chevrons-down-outline' | 'chevrons-left-outline' | 'chevrons-right-outline' | 'chevrons-up-outline' | 'chrome-outline' | 'circle-outline' | 'clipboard-outline' | 'clock-outline' | 'close-outline' | 'cloud-drizzle-outline' | 'cloud-lightning-outline' | 'cloud-off-outline' | 'cloud-outline' | 'cloud-rain-outline' | 'cloud-snow-outline' | 'code-outline' | 'codepen-outline' | 'codesandbox-outline' | 'coffee-outline' | 'columns-outline' | 'command-outline' | 'community-outline' | 'compass-outline' | 'copy-outline' | 'corner-down-left-outline' | 'corner-down-right-outline' | 'corner-left-down-outline' | 'corner-left-up-outline' | 'corner-right-down-outline' | 'corner-right-up-outline' | 'corner-up-left-outline' | 'corner-up-right-outline' | 'cpu-outline' | 'credit-card-outline' | 'crop-outline' | 'database-outline' | 'delete-outline' | 'disc-outline' | 'distributor-outline' | 'divide-circle-outline' | 'divide-outline' | 'divide-square-outline' | 'dollar-sign-outline' | 'dot' | 'download-cloud-outline' | 'download-outline' | 'dribbble-outline' | 'droplet-outline' | 'edc-outline' | 'edit2-outline' | 'edit3-outline' | 'edit-outline' | 'external-link-outline' | 'eye-off-outline' | 'eye-outline' | 'facebook-outline' | 'fast-forward-outline' | 'feather-outline' | 'figma-outline' | 'file-minus-outline' | 'file-outline' | 'file-plus-outline' | 'file-text-outline' | 'film-outline' | 'filter-outline' | 'flag-outline' | 'folder-minus-outline' | 'folder-outline' | 'folder-plus-outline' | 'framer-outline' | 'frown-outline' | 'gift-outline' | 'git-branch-outline' | 'git-commit-outline' | 'git-merge-outline' | 'git-pull-request-outline' | 'gitlab-outline' | 'grid-outline' | 'hand-card-outline' | 'hard-drive-outline' | 'hash-outline' | 'headphones-outline' | 'heart-outline' | 'help-circle-outline' | 'hexagon-outline' | 'home-outline' | 'image-outline' | 'inbox-outline' | 'info-circle' | 'info-outline' | 'info-triangle' | 'instagram-outline' | 'incomplete-loan-outline' | 'italic-outline' | 'key-outline' | 'layers-outline' | 'layout-outline' | 'life-buoy-outline' | 'link2-outline' | 'link-outline' | 'linkedin-outline' | 'list-outline' | 'loader-outline' | 'location-outline' | 'lock-outline' | 'log-in-outline' | 'log-out-outline' | 'mail-outline' | 'map-outline' | 'map-pin-outline' | 'maximize2-outline' | 'maximize-outline' | 'meh-outline' | 'menu-outline' | 'merchant-outline' | 'message-circle-outline' | 'message-square-outline' | 'mic-off-outline' | 'mic-outline' | 'minimize2-outline' | 'minimize-outline' | 'minus-circle-outline' | 'minus-outline' | 'minus-square-outline' | 'money-in-outline' | 'monitor-outline' | 'moon-outline' | 'more-horizontal-outline' | 'more-vertical-outline' | 'mouse-pointer-outline' | 'move-outline' | 'music-outline' | 'navigation2-outline' | 'navigation-outline' | 'octagon-outline' | 'package-outline' | 'paper-scroll' | 'paperclip-outline' | 'partnership-outline' | 'pause-circle-outline' | 'pause-outline' | 'pen-tool-outline' | 'percent-outline' | 'phone-call-outline' | 'phone-forwarded-outline' | 'phone-incoming-outline' | 'phone-missed-outline' | 'phone-off-outline' | 'phone-outgoing-outline' | 'phone-outline' | 'pie-chart-outline' | 'play-circle-outline' | 'play-outline' | 'plus-circle-outline' | 'plus-outline' | 'plus-square-outline' | 'pocket-outline' | 'power-outline' | 'printer-outline' | 'radio-outline' | 'receipt-outline' | 'refresh-ccw-outline' | 'refresh-cw-outline' | 'refund-money-rp-outline' | 'repeat-outline' | 'rewind-outline' | 'rotate-ccw-outline' | 'rotate-cw-outline' | 'save-outline' | 'scanner-outline' | 'scissors-outline' | 'search-outline' | 'send-outline' | 'send-money-rp' | 'server-outline' | 'settings-outline' | 'share2-outline' | 'share-outline' | 'shield-off-outline' | 'shield-outline' | 'shopping-bag-outline' | 'shopping-cart-outline' | 'shuffle-outline' | 'sidebar-outline' | 'skip-back-outline' | 'skip-forward-outline' | 'slack-outline' | 'slash-outline' | 'sliders-outline' | 'smartphone-outline' | 'smile-outline' | 'speaker-outline' | 'square-outline' | 'star-outline' | 'stop-circle-outline' | 'sun-outline' | 'sunrise-outline' | 'sunset-outline' | 'supplier-outline' | 'tablet-outline' | 'tag-outline' | 'target1-outline' | 'target-outline' | 'terminal-outline' | 'thermometer-outline' | 'thumbs-down-outline' | 'thumbs-up-outline' | 'toggle-left-outline' | 'toggle-right-outline' | 'tool-outline' | 'trash2-outline' | 'trash-outline' | 'trello-outline' | 'trending-down-outline' | 'trending-up-outline' | 'triangle-outline' | 'truck-outline' | 'tv-outline' | 'twitch-outline' | 'twitter-outline' | 'type-outline' | 'umbrella-outline' | 'underline-outline' | 'unlock-outline' | 'upload-cloud-outline' | 'upload-outline' | 'user-check-outline' | 'user-minus-outline' | 'user-outline' | 'user-plus-outline' | 'user-xoutline' | 'users-outline' | 'video-of-outline' | 'video-outline' | 'voicemail-outline' | 'volume1-outline' | 'volume2-outline' | 'volume-outline' | 'volume-xoutline' | 'watch-outline' | 'web-outline' | 'wifi1-outline' | 'wifi-off-outline' | 'wifi-outline' | 'wind-outline' | 'xcircle-outline' | 'xoctagon-outline' | 'xsquare-outline' | 'youtube-outline' | 'zap-off-outline' | 'zap-outline' | 'zoom-in-outline' | 'zoom-out-outline'",
                "optional": true,
                "typeDefinition": {
                  "typeString": " | wallet-add | wallet | activity-outline | airplaine-outline | alert-circle-outline | alert-octagon-outline | alert-triangle-outline | align-center-outline | align-justify-outline | align-left-outline | align-right-outline | anchor-outline | aperture-outline | arrow-down-outline | arrow-down-long-outline | arrow-down-circle-outline | arrow-down-left-outline | arrow-down-right-outline | arrow-left-circle-outline | arrow-left-outline | arrow-right-circle-outline | arrow-right-outline | arrow-up-circle-outline | arrow-up-left-outline | arrow-up-outline | arrow-up-long-outline | arrow-up-right-outline | at-sign-outline | award-outline | bar-chart2outline | bar-chart-outline | battery-charging-outline | battery-outline | bell-off-outline | bell-outline | bluetooth-outline | bnpl-outline | bold-outline | book-open-outline | book-outline | bookmark-outline | box-outline | briefcase-outline | calendar-outline | camera-off-outline | camera-outline | cash-loan-money-rp-outline | cast-outline | cat-outline | chat-outline | check-circle | check-circle-outline | check-outline | check-square-outline | chevron-down-outline | chevron-left-outline | chevron-right-outline | chevron-up-outline | chevrons-down-outline | chevrons-left-outline | chevrons-right-outline | chevrons-up-outline | chrome-outline | circle-outline | clipboard-outline | clock-outline | close-outline | cloud-drizzle-outline | cloud-lightning-outline | cloud-off-outline | cloud-outline | cloud-rain-outline | cloud-snow-outline | code-outline | codepen-outline | codesandbox-outline | coffee-outline | columns-outline | command-outline | community-outline | compass-outline | copy-outline | corner-down-left-outline | corner-down-right-outline | corner-left-down-outline | corner-left-up-outline | corner-right-down-outline | corner-right-up-outline | corner-up-left-outline | corner-up-right-outline | cpu-outline | credit-card-outline | crop-outline | database-outline | delete-outline | disc-outline | distributor-outline | divide-circle-outline | divide-outline | divide-square-outline | dollar-sign-outline | dot | download-cloud-outline | download-outline | dribbble-outline | droplet-outline | edc-outline | edit2-outline | edit3-outline | edit-outline | external-link-outline | eye-off-outline | eye-outline | facebook-outline | fast-forward-outline | feather-outline | figma-outline | file-minus-outline | file-outline | file-plus-outline | file-text-outline | film-outline | filter-outline | flag-outline | folder-minus-outline | folder-outline | folder-plus-outline | framer-outline | frown-outline | gift-outline | git-branch-outline | git-commit-outline | git-merge-outline | git-pull-request-outline | gitlab-outline | grid-outline | hand-card-outline | hard-drive-outline | hash-outline | headphones-outline | heart-outline | help-circle-outline | hexagon-outline | home-outline | image-outline | inbox-outline | info-circle | info-outline | info-triangle | instagram-outline | incomplete-loan-outline | italic-outline | key-outline | layers-outline | layout-outline | life-buoy-outline | link2-outline | link-outline | linkedin-outline | list-outline | loader-outline | location-outline | lock-outline | log-in-outline | log-out-outline | mail-outline | map-outline | map-pin-outline | maximize2-outline | maximize-outline | meh-outline | menu-outline | merchant-outline | message-circle-outline | message-square-outline | mic-off-outline | mic-outline | minimize2-outline | minimize-outline | minus-circle-outline | minus-outline | minus-square-outline | money-in-outline | monitor-outline | moon-outline | more-horizontal-outline | more-vertical-outline | mouse-pointer-outline | move-outline | music-outline | navigation2-outline | navigation-outline | octagon-outline | package-outline | paper-scroll | paperclip-outline | partnership-outline | pause-circle-outline | pause-outline | pen-tool-outline | percent-outline | phone-call-outline | phone-forwarded-outline | phone-incoming-outline | phone-missed-outline | phone-off-outline | phone-outgoing-outline | phone-outline | pie-chart-outline | play-circle-outline | play-outline | plus-circle-outline | plus-outline | plus-square-outline | pocket-outline | power-outline | printer-outline | radio-outline | receipt-outline | refresh-ccw-outline | refresh-cw-outline | refund-money-rp-outline | repeat-outline | rewind-outline | rotate-ccw-outline | rotate-cw-outline | save-outline | scanner-outline | scissors-outline | search-outline | send-outline | send-money-rp | server-outline | settings-outline | share2-outline | share-outline | shield-off-outline | shield-outline | shopping-bag-outline | shopping-cart-outline | shuffle-outline | sidebar-outline | skip-back-outline | skip-forward-outline | slack-outline | slash-outline | sliders-outline | smartphone-outline | smile-outline | speaker-outline | square-outline | star-outline | stop-circle-outline | sun-outline | sunrise-outline | sunset-outline | supplier-outline | tablet-outline | tag-outline | target1-outline | target-outline | terminal-outline | thermometer-outline | thumbs-down-outline | thumbs-up-outline | toggle-left-outline | toggle-right-outline | tool-outline | trash2-outline | trash-outline | trello-outline | trending-down-outline | trending-up-outline | triangle-outline | truck-outline | tv-outline | twitch-outline | twitter-outline | type-outline | umbrella-outline | underline-outline | unlock-outline | upload-cloud-outline | upload-outline | user-check-outline | user-minus-outline | user-outline | user-plus-outline | user-xoutline | users-outline | video-of-outline | video-outline | voicemail-outline | volume1-outline | volume2-outline | volume-outline | volume-xoutline | watch-outline | web-outline | wifi1-outline | wifi-off-outline | wifi-outline | wind-outline | xcircle-outline | xoctagon-outline | xsquare-outline | youtube-outline | zap-off-outline | zap-outline | zoom-in-outline | zoom-out-outline",
                  "props": [
                    {
                      "key": "",
                      "type": "string"
                    },
                    {
                      "key": "wallet-add",
                      "type": "string"
                    },
                    {
                      "key": "wallet",
                      "type": "string"
                    },
                    {
                      "key": "activity-outline",
                      "type": "string"
                    },
                    {
                      "key": "airplaine-outline",
                      "type": "string"
                    },
                    {
                      "key": "alert-circle-outline",
                      "type": "string"
                    },
                    {
                      "key": "alert-octagon-outline",
                      "type": "string"
                    },
                    {
                      "key": "alert-triangle-outline",
                      "type": "string"
                    },
                    {
                      "key": "align-center-outline",
                      "type": "string"
                    },
                    {
                      "key": "align-justify-outline",
                      "type": "string"
                    },
                    {
                      "key": "align-left-outline",
                      "type": "string"
                    },
                    {
                      "key": "align-right-outline",
                      "type": "string"
                    },
                    {
                      "key": "anchor-outline",
                      "type": "string"
                    },
                    {
                      "key": "aperture-outline",
                      "type": "string"
                    },
                    {
                      "key": "arrow-down-outline",
                      "type": "string"
                    },
                    {
                      "key": "arrow-down-long-outline",
                      "type": "string"
                    },
                    {
                      "key": "arrow-down-circle-outline",
                      "type": "string"
                    },
                    {
                      "key": "arrow-down-left-outline",
                      "type": "string"
                    },
                    {
                      "key": "arrow-down-right-outline",
                      "type": "string"
                    },
                    {
                      "key": "arrow-left-circle-outline",
                      "type": "string"
                    },
                    {
                      "key": "arrow-left-outline",
                      "type": "string"
                    },
                    {
                      "key": "arrow-right-circle-outline",
                      "type": "string"
                    },
                    {
                      "key": "arrow-right-outline",
                      "type": "string"
                    },
                    {
                      "key": "arrow-up-circle-outline",
                      "type": "string"
                    },
                    {
                      "key": "arrow-up-left-outline",
                      "type": "string"
                    },
                    {
                      "key": "arrow-up-outline",
                      "type": "string"
                    },
                    {
                      "key": "arrow-up-long-outline",
                      "type": "string"
                    },
                    {
                      "key": "arrow-up-right-outline",
                      "type": "string"
                    },
                    {
                      "key": "at-sign-outline",
                      "type": "string"
                    },
                    {
                      "key": "award-outline",
                      "type": "string"
                    },
                    {
                      "key": "bar-chart2outline",
                      "type": "string"
                    },
                    {
                      "key": "bar-chart-outline",
                      "type": "string"
                    },
                    {
                      "key": "battery-charging-outline",
                      "type": "string"
                    },
                    {
                      "key": "battery-outline",
                      "type": "string"
                    },
                    {
                      "key": "bell-off-outline",
                      "type": "string"
                    },
                    {
                      "key": "bell-outline",
                      "type": "string"
                    },
                    {
                      "key": "bluetooth-outline",
                      "type": "string"
                    },
                    {
                      "key": "bnpl-outline",
                      "type": "string"
                    },
                    {
                      "key": "bold-outline",
                      "type": "string"
                    },
                    {
                      "key": "book-open-outline",
                      "type": "string"
                    },
                    {
                      "key": "book-outline",
                      "type": "string"
                    },
                    {
                      "key": "bookmark-outline",
                      "type": "string"
                    },
                    {
                      "key": "box-outline",
                      "type": "string"
                    },
                    {
                      "key": "briefcase-outline",
                      "type": "string"
                    },
                    {
                      "key": "calendar-outline",
                      "type": "string"
                    },
                    {
                      "key": "camera-off-outline",
                      "type": "string"
                    },
                    {
                      "key": "camera-outline",
                      "type": "string"
                    },
                    {
                      "key": "cash-loan-money-rp-outline",
                      "type": "string"
                    },
                    {
                      "key": "cast-outline",
                      "type": "string"
                    },
                    {
                      "key": "cat-outline",
                      "type": "string"
                    },
                    {
                      "key": "chat-outline",
                      "type": "string"
                    },
                    {
                      "key": "check-circle",
                      "type": "string"
                    },
                    {
                      "key": "check-circle-outline",
                      "type": "string"
                    },
                    {
                      "key": "check-outline",
                      "type": "string"
                    },
                    {
                      "key": "check-square-outline",
                      "type": "string"
                    },
                    {
                      "key": "chevron-down-outline",
                      "type": "string"
                    },
                    {
                      "key": "chevron-left-outline",
                      "type": "string"
                    },
                    {
                      "key": "chevron-right-outline",
                      "type": "string"
                    },
                    {
                      "key": "chevron-up-outline",
                      "type": "string"
                    },
                    {
                      "key": "chevrons-down-outline",
                      "type": "string"
                    },
                    {
                      "key": "chevrons-left-outline",
                      "type": "string"
                    },
                    {
                      "key": "chevrons-right-outline",
                      "type": "string"
                    },
                    {
                      "key": "chevrons-up-outline",
                      "type": "string"
                    },
                    {
                      "key": "chrome-outline",
                      "type": "string"
                    },
                    {
                      "key": "circle-outline",
                      "type": "string"
                    },
                    {
                      "key": "clipboard-outline",
                      "type": "string"
                    },
                    {
                      "key": "clock-outline",
                      "type": "string"
                    },
                    {
                      "key": "close-outline",
                      "type": "string"
                    },
                    {
                      "key": "cloud-drizzle-outline",
                      "type": "string"
                    },
                    {
                      "key": "cloud-lightning-outline",
                      "type": "string"
                    },
                    {
                      "key": "cloud-off-outline",
                      "type": "string"
                    },
                    {
                      "key": "cloud-outline",
                      "type": "string"
                    },
                    {
                      "key": "cloud-rain-outline",
                      "type": "string"
                    },
                    {
                      "key": "cloud-snow-outline",
                      "type": "string"
                    },
                    {
                      "key": "code-outline",
                      "type": "string"
                    },
                    {
                      "key": "codepen-outline",
                      "type": "string"
                    },
                    {
                      "key": "codesandbox-outline",
                      "type": "string"
                    },
                    {
                      "key": "coffee-outline",
                      "type": "string"
                    },
                    {
                      "key": "columns-outline",
                      "type": "string"
                    },
                    {
                      "key": "command-outline",
                      "type": "string"
                    },
                    {
                      "key": "community-outline",
                      "type": "string"
                    },
                    {
                      "key": "compass-outline",
                      "type": "string"
                    },
                    {
                      "key": "copy-outline",
                      "type": "string"
                    },
                    {
                      "key": "corner-down-left-outline",
                      "type": "string"
                    },
                    {
                      "key": "corner-down-right-outline",
                      "type": "string"
                    },
                    {
                      "key": "corner-left-down-outline",
                      "type": "string"
                    },
                    {
                      "key": "corner-left-up-outline",
                      "type": "string"
                    },
                    {
                      "key": "corner-right-down-outline",
                      "type": "string"
                    },
                    {
                      "key": "corner-right-up-outline",
                      "type": "string"
                    },
                    {
                      "key": "corner-up-left-outline",
                      "type": "string"
                    },
                    {
                      "key": "corner-up-right-outline",
                      "type": "string"
                    },
                    {
                      "key": "cpu-outline",
                      "type": "string"
                    },
                    {
                      "key": "credit-card-outline",
                      "type": "string"
                    },
                    {
                      "key": "crop-outline",
                      "type": "string"
                    },
                    {
                      "key": "database-outline",
                      "type": "string"
                    },
                    {
                      "key": "delete-outline",
                      "type": "string"
                    },
                    {
                      "key": "disc-outline",
                      "type": "string"
                    },
                    {
                      "key": "distributor-outline",
                      "type": "string"
                    },
                    {
                      "key": "divide-circle-outline",
                      "type": "string"
                    },
                    {
                      "key": "divide-outline",
                      "type": "string"
                    },
                    {
                      "key": "divide-square-outline",
                      "type": "string"
                    },
                    {
                      "key": "dollar-sign-outline",
                      "type": "string"
                    },
                    {
                      "key": "dot",
                      "type": "string"
                    },
                    {
                      "key": "download-cloud-outline",
                      "type": "string"
                    },
                    {
                      "key": "download-outline",
                      "type": "string"
                    },
                    {
                      "key": "dribbble-outline",
                      "type": "string"
                    },
                    {
                      "key": "droplet-outline",
                      "type": "string"
                    },
                    {
                      "key": "edc-outline",
                      "type": "string"
                    },
                    {
                      "key": "edit2-outline",
                      "type": "string"
                    },
                    {
                      "key": "edit3-outline",
                      "type": "string"
                    },
                    {
                      "key": "edit-outline",
                      "type": "string"
                    },
                    {
                      "key": "external-link-outline",
                      "type": "string"
                    },
                    {
                      "key": "eye-off-outline",
                      "type": "string"
                    },
                    {
                      "key": "eye-outline",
                      "type": "string"
                    },
                    {
                      "key": "facebook-outline",
                      "type": "string"
                    },
                    {
                      "key": "fast-forward-outline",
                      "type": "string"
                    },
                    {
                      "key": "feather-outline",
                      "type": "string"
                    },
                    {
                      "key": "figma-outline",
                      "type": "string"
                    },
                    {
                      "key": "file-minus-outline",
                      "type": "string"
                    },
                    {
                      "key": "file-outline",
                      "type": "string"
                    },
                    {
                      "key": "file-plus-outline",
                      "type": "string"
                    },
                    {
                      "key": "file-text-outline",
                      "type": "string"
                    },
                    {
                      "key": "film-outline",
                      "type": "string"
                    },
                    {
                      "key": "filter-outline",
                      "type": "string"
                    },
                    {
                      "key": "flag-outline",
                      "type": "string"
                    },
                    {
                      "key": "folder-minus-outline",
                      "type": "string"
                    },
                    {
                      "key": "folder-outline",
                      "type": "string"
                    },
                    {
                      "key": "folder-plus-outline",
                      "type": "string"
                    },
                    {
                      "key": "framer-outline",
                      "type": "string"
                    },
                    {
                      "key": "frown-outline",
                      "type": "string"
                    },
                    {
                      "key": "gift-outline",
                      "type": "string"
                    },
                    {
                      "key": "git-branch-outline",
                      "type": "string"
                    },
                    {
                      "key": "git-commit-outline",
                      "type": "string"
                    },
                    {
                      "key": "git-merge-outline",
                      "type": "string"
                    },
                    {
                      "key": "git-pull-request-outline",
                      "type": "string"
                    },
                    {
                      "key": "gitlab-outline",
                      "type": "string"
                    },
                    {
                      "key": "grid-outline",
                      "type": "string"
                    },
                    {
                      "key": "hand-card-outline",
                      "type": "string"
                    },
                    {
                      "key": "hard-drive-outline",
                      "type": "string"
                    },
                    {
                      "key": "hash-outline",
                      "type": "string"
                    },
                    {
                      "key": "headphones-outline",
                      "type": "string"
                    },
                    {
                      "key": "heart-outline",
                      "type": "string"
                    },
                    {
                      "key": "help-circle-outline",
                      "type": "string"
                    },
                    {
                      "key": "hexagon-outline",
                      "type": "string"
                    },
                    {
                      "key": "home-outline",
                      "type": "string"
                    },
                    {
                      "key": "image-outline",
                      "type": "string"
                    },
                    {
                      "key": "inbox-outline",
                      "type": "string"
                    },
                    {
                      "key": "info-circle",
                      "type": "string"
                    },
                    {
                      "key": "info-outline",
                      "type": "string"
                    },
                    {
                      "key": "info-triangle",
                      "type": "string"
                    },
                    {
                      "key": "instagram-outline",
                      "type": "string"
                    },
                    {
                      "key": "incomplete-loan-outline",
                      "type": "string"
                    },
                    {
                      "key": "italic-outline",
                      "type": "string"
                    },
                    {
                      "key": "key-outline",
                      "type": "string"
                    },
                    {
                      "key": "layers-outline",
                      "type": "string"
                    },
                    {
                      "key": "layout-outline",
                      "type": "string"
                    },
                    {
                      "key": "life-buoy-outline",
                      "type": "string"
                    },
                    {
                      "key": "link2-outline",
                      "type": "string"
                    },
                    {
                      "key": "link-outline",
                      "type": "string"
                    },
                    {
                      "key": "linkedin-outline",
                      "type": "string"
                    },
                    {
                      "key": "list-outline",
                      "type": "string"
                    },
                    {
                      "key": "loader-outline",
                      "type": "string"
                    },
                    {
                      "key": "location-outline",
                      "type": "string"
                    },
                    {
                      "key": "lock-outline",
                      "type": "string"
                    },
                    {
                      "key": "log-in-outline",
                      "type": "string"
                    },
                    {
                      "key": "log-out-outline",
                      "type": "string"
                    },
                    {
                      "key": "mail-outline",
                      "type": "string"
                    },
                    {
                      "key": "map-outline",
                      "type": "string"
                    },
                    {
                      "key": "map-pin-outline",
                      "type": "string"
                    },
                    {
                      "key": "maximize2-outline",
                      "type": "string"
                    },
                    {
                      "key": "maximize-outline",
                      "type": "string"
                    },
                    {
                      "key": "meh-outline",
                      "type": "string"
                    },
                    {
                      "key": "menu-outline",
                      "type": "string"
                    },
                    {
                      "key": "merchant-outline",
                      "type": "string"
                    },
                    {
                      "key": "message-circle-outline",
                      "type": "string"
                    },
                    {
                      "key": "message-square-outline",
                      "type": "string"
                    },
                    {
                      "key": "mic-off-outline",
                      "type": "string"
                    },
                    {
                      "key": "mic-outline",
                      "type": "string"
                    },
                    {
                      "key": "minimize2-outline",
                      "type": "string"
                    },
                    {
                      "key": "minimize-outline",
                      "type": "string"
                    },
                    {
                      "key": "minus-circle-outline",
                      "type": "string"
                    },
                    {
                      "key": "minus-outline",
                      "type": "string"
                    },
                    {
                      "key": "minus-square-outline",
                      "type": "string"
                    },
                    {
                      "key": "money-in-outline",
                      "type": "string"
                    },
                    {
                      "key": "monitor-outline",
                      "type": "string"
                    },
                    {
                      "key": "moon-outline",
                      "type": "string"
                    },
                    {
                      "key": "more-horizontal-outline",
                      "type": "string"
                    },
                    {
                      "key": "more-vertical-outline",
                      "type": "string"
                    },
                    {
                      "key": "mouse-pointer-outline",
                      "type": "string"
                    },
                    {
                      "key": "move-outline",
                      "type": "string"
                    },
                    {
                      "key": "music-outline",
                      "type": "string"
                    },
                    {
                      "key": "navigation2-outline",
                      "type": "string"
                    },
                    {
                      "key": "navigation-outline",
                      "type": "string"
                    },
                    {
                      "key": "octagon-outline",
                      "type": "string"
                    },
                    {
                      "key": "package-outline",
                      "type": "string"
                    },
                    {
                      "key": "paper-scroll",
                      "type": "string"
                    },
                    {
                      "key": "paperclip-outline",
                      "type": "string"
                    },
                    {
                      "key": "partnership-outline",
                      "type": "string"
                    },
                    {
                      "key": "pause-circle-outline",
                      "type": "string"
                    },
                    {
                      "key": "pause-outline",
                      "type": "string"
                    },
                    {
                      "key": "pen-tool-outline",
                      "type": "string"
                    },
                    {
                      "key": "percent-outline",
                      "type": "string"
                    },
                    {
                      "key": "phone-call-outline",
                      "type": "string"
                    },
                    {
                      "key": "phone-forwarded-outline",
                      "type": "string"
                    },
                    {
                      "key": "phone-incoming-outline",
                      "type": "string"
                    },
                    {
                      "key": "phone-missed-outline",
                      "type": "string"
                    },
                    {
                      "key": "phone-off-outline",
                      "type": "string"
                    },
                    {
                      "key": "phone-outgoing-outline",
                      "type": "string"
                    },
                    {
                      "key": "phone-outline",
                      "type": "string"
                    },
                    {
                      "key": "pie-chart-outline",
                      "type": "string"
                    },
                    {
                      "key": "play-circle-outline",
                      "type": "string"
                    },
                    {
                      "key": "play-outline",
                      "type": "string"
                    },
                    {
                      "key": "plus-circle-outline",
                      "type": "string"
                    },
                    {
                      "key": "plus-outline",
                      "type": "string"
                    },
                    {
                      "key": "plus-square-outline",
                      "type": "string"
                    },
                    {
                      "key": "pocket-outline",
                      "type": "string"
                    },
                    {
                      "key": "power-outline",
                      "type": "string"
                    },
                    {
                      "key": "printer-outline",
                      "type": "string"
                    },
                    {
                      "key": "radio-outline",
                      "type": "string"
                    },
                    {
                      "key": "receipt-outline",
                      "type": "string"
                    },
                    {
                      "key": "refresh-ccw-outline",
                      "type": "string"
                    },
                    {
                      "key": "refresh-cw-outline",
                      "type": "string"
                    },
                    {
                      "key": "refund-money-rp-outline",
                      "type": "string"
                    },
                    {
                      "key": "repeat-outline",
                      "type": "string"
                    },
                    {
                      "key": "rewind-outline",
                      "type": "string"
                    },
                    {
                      "key": "rotate-ccw-outline",
                      "type": "string"
                    },
                    {
                      "key": "rotate-cw-outline",
                      "type": "string"
                    },
                    {
                      "key": "save-outline",
                      "type": "string"
                    },
                    {
                      "key": "scanner-outline",
                      "type": "string"
                    },
                    {
                      "key": "scissors-outline",
                      "type": "string"
                    },
                    {
                      "key": "search-outline",
                      "type": "string"
                    },
                    {
                      "key": "send-outline",
                      "type": "string"
                    },
                    {
                      "key": "send-money-rp",
                      "type": "string"
                    },
                    {
                      "key": "server-outline",
                      "type": "string"
                    },
                    {
                      "key": "settings-outline",
                      "type": "string"
                    },
                    {
                      "key": "share2-outline",
                      "type": "string"
                    },
                    {
                      "key": "share-outline",
                      "type": "string"
                    },
                    {
                      "key": "shield-off-outline",
                      "type": "string"
                    },
                    {
                      "key": "shield-outline",
                      "type": "string"
                    },
                    {
                      "key": "shopping-bag-outline",
                      "type": "string"
                    },
                    {
                      "key": "shopping-cart-outline",
                      "type": "string"
                    },
                    {
                      "key": "shuffle-outline",
                      "type": "string"
                    },
                    {
                      "key": "sidebar-outline",
                      "type": "string"
                    },
                    {
                      "key": "skip-back-outline",
                      "type": "string"
                    },
                    {
                      "key": "skip-forward-outline",
                      "type": "string"
                    },
                    {
                      "key": "slack-outline",
                      "type": "string"
                    },
                    {
                      "key": "slash-outline",
                      "type": "string"
                    },
                    {
                      "key": "sliders-outline",
                      "type": "string"
                    },
                    {
                      "key": "smartphone-outline",
                      "type": "string"
                    },
                    {
                      "key": "smile-outline",
                      "type": "string"
                    },
                    {
                      "key": "speaker-outline",
                      "type": "string"
                    },
                    {
                      "key": "square-outline",
                      "type": "string"
                    },
                    {
                      "key": "star-outline",
                      "type": "string"
                    },
                    {
                      "key": "stop-circle-outline",
                      "type": "string"
                    },
                    {
                      "key": "sun-outline",
                      "type": "string"
                    },
                    {
                      "key": "sunrise-outline",
                      "type": "string"
                    },
                    {
                      "key": "sunset-outline",
                      "type": "string"
                    },
                    {
                      "key": "supplier-outline",
                      "type": "string"
                    },
                    {
                      "key": "tablet-outline",
                      "type": "string"
                    },
                    {
                      "key": "tag-outline",
                      "type": "string"
                    },
                    {
                      "key": "target1-outline",
                      "type": "string"
                    },
                    {
                      "key": "target-outline",
                      "type": "string"
                    },
                    {
                      "key": "terminal-outline",
                      "type": "string"
                    },
                    {
                      "key": "thermometer-outline",
                      "type": "string"
                    },
                    {
                      "key": "thumbs-down-outline",
                      "type": "string"
                    },
                    {
                      "key": "thumbs-up-outline",
                      "type": "string"
                    },
                    {
                      "key": "toggle-left-outline",
                      "type": "string"
                    },
                    {
                      "key": "toggle-right-outline",
                      "type": "string"
                    },
                    {
                      "key": "tool-outline",
                      "type": "string"
                    },
                    {
                      "key": "trash2-outline",
                      "type": "string"
                    },
                    {
                      "key": "trash-outline",
                      "type": "string"
                    },
                    {
                      "key": "trello-outline",
                      "type": "string"
                    },
                    {
                      "key": "trending-down-outline",
                      "type": "string"
                    },
                    {
                      "key": "trending-up-outline",
                      "type": "string"
                    },
                    {
                      "key": "triangle-outline",
                      "type": "string"
                    },
                    {
                      "key": "truck-outline",
                      "type": "string"
                    },
                    {
                      "key": "tv-outline",
                      "type": "string"
                    },
                    {
                      "key": "twitch-outline",
                      "type": "string"
                    },
                    {
                      "key": "twitter-outline",
                      "type": "string"
                    },
                    {
                      "key": "type-outline",
                      "type": "string"
                    },
                    {
                      "key": "umbrella-outline",
                      "type": "string"
                    },
                    {
                      "key": "underline-outline",
                      "type": "string"
                    },
                    {
                      "key": "unlock-outline",
                      "type": "string"
                    },
                    {
                      "key": "upload-cloud-outline",
                      "type": "string"
                    },
                    {
                      "key": "upload-outline",
                      "type": "string"
                    },
                    {
                      "key": "user-check-outline",
                      "type": "string"
                    },
                    {
                      "key": "user-minus-outline",
                      "type": "string"
                    },
                    {
                      "key": "user-outline",
                      "type": "string"
                    },
                    {
                      "key": "user-plus-outline",
                      "type": "string"
                    },
                    {
                      "key": "user-xoutline",
                      "type": "string"
                    },
                    {
                      "key": "users-outline",
                      "type": "string"
                    },
                    {
                      "key": "video-of-outline",
                      "type": "string"
                    },
                    {
                      "key": "video-outline",
                      "type": "string"
                    },
                    {
                      "key": "voicemail-outline",
                      "type": "string"
                    },
                    {
                      "key": "volume1-outline",
                      "type": "string"
                    },
                    {
                      "key": "volume2-outline",
                      "type": "string"
                    },
                    {
                      "key": "volume-outline",
                      "type": "string"
                    },
                    {
                      "key": "volume-xoutline",
                      "type": "string"
                    },
                    {
                      "key": "watch-outline",
                      "type": "string"
                    },
                    {
                      "key": "web-outline",
                      "type": "string"
                    },
                    {
                      "key": "wifi1-outline",
                      "type": "string"
                    },
                    {
                      "key": "wifi-off-outline",
                      "type": "string"
                    },
                    {
                      "key": "wifi-outline",
                      "type": "string"
                    },
                    {
                      "key": "wind-outline",
                      "type": "string"
                    },
                    {
                      "key": "xcircle-outline",
                      "type": "string"
                    },
                    {
                      "key": "xoctagon-outline",
                      "type": "string"
                    },
                    {
                      "key": "xsquare-outline",
                      "type": "string"
                    },
                    {
                      "key": "youtube-outline",
                      "type": "string"
                    },
                    {
                      "key": "zap-off-outline",
                      "type": "string"
                    },
                    {
                      "key": "zap-outline",
                      "type": "string"
                    },
                    {
                      "key": "zoom-in-outline",
                      "type": "string"
                    },
                    {
                      "key": "zoom-out-outline",
                      "type": "string"
                    }
                  ]
                }
              },
              {
                "key": "onClick",
                "type": "() => void",
                "optional": true,
                "typeDefinition": {
                  "typeString": "() => void",
                  "isFunction": true,
                  "props": [
                    {
                      "key": "void",
                      "type": "intrinsic",
                      "isReturn": true
                    }
                  ]
                }
              },
              {
                "key": "size",
                "type": "'xs' | 'sm' | 'md' | 'lg' | 'xl'",
                "optional": true,
                "typeDefinition": {
                  "typeString": "xs | sm | md | lg | xl",
                  "props": [
                    {
                      "key": "xs",
                      "type": "string"
                    },
                    {
                      "key": "sm",
                      "type": "string"
                    },
                    {
                      "key": "md",
                      "type": "string"
                    },
                    {
                      "key": "lg",
                      "type": "string"
                    },
                    {
                      "key": "xl",
                      "type": "string"
                    }
                  ]
                }
              },
              {
                "key": "useCurrentColor",
                "type": "boolean",
                "optional": true
              },
              {
                "key": "width",
                "type": "number",
                "optional": true
              }
            ]
          }
        },
        "loading": {
          "type": "boolean",
          "description": "Shows a loading spinner and disables button interaction",
          "optional": true
        },
        "onClick": {
          "type": "MouseEventHandler",
          "optional": true,
          "description": "Function called when button is clicked",
          "typeDefinition": {
            "typeString": "MouseEventHandler"
          }
        },
        "size": {
          "type": "SizeType",
          "optional": true,
          "description": "Controls button dimensions - 'small', 'middle', or 'large'",
          "typeDefinition": {
            "typeString": "SizeType"
          }
        },
        "target": {
          "type": "HTMLAttributeAnchorTarget",
          "optional": true,
          "description": "HTML target attribute for link buttons, e.g. '_blank' for new tab",
          "typeDefinition": {
            "typeString": "HTMLAttributeAnchorTarget"
          }
        },
        "theme": {
          "type": "union",
          "optional": true,
          "description": "Visual theme variant - affects colors and styling",
          "typeDefinition": {
            "typeString": "desktop | mobile",
            "props": [
              {
                "key": "desktop",
                "type": "string"
              },
              {
                "key": "mobile",
                "type": "string"
              }
            ]
          }
        },
        "type": {
          "type": "union",
          "optional": true,
          "description": "Button style variant like 'filled', 'outlined', 'text', etc",
          "typeDefinition": {
            "typeString": "link | text | dashed | filled | outlined-primary | outlined-secondary",
            "props": [
              {
                "key": "link",
                "type": "string"
              },
              {
                "key": "text",
                "type": "string"
              },
              {
                "key": "dashed",
                "type": "string"
              },
              {
                "key": "filled",
                "type": "string"
              },
              {
                "key": "outlined-primary",
                "type": "string"
              },
              {
                "key": "outlined-secondary",
                "type": "string"
              }
            ]
          }
        }
      },
      "componentTypeName": "ButtonProps"
    },
    {
      "name": "Badge",
      "description": "The Badge component is a versatile UI element that displays a small, informative label, often used to convey status, notifications, or counts. It enhances user experience by providing quick visual cues, making it ideal for alerts, messages, or highlighting important information in applications.",
      "props": {
        "children": {
          "type": "Element",
          "optional": true,
          "description": "Content to be wrapped by the badge, usually an icon or other element that needs a notification indicator",
          "typeDefinition": {
            "typeString": "Element"
          }
        },
        "className": {
          "type": "string",
          "description": "Additional CSS class names to apply for custom styling",
          "optional": true
        },
        "color": {
          "type": "union",
          "optional": true,
          "description": "Sets the badge's color theme from predefined options like red, blue, green, amber, or gray",
          "typeDefinition": {
            "typeString": "blue | green | red | gray | amber",
            "props": [
              {
                "key": "blue",
                "type": "string"
              },
              {
                "key": "green",
                "type": "string"
              },
              {
                "key": "red",
                "type": "string"
              },
              {
                "key": "gray",
                "type": "string"
              },
              {
                "key": "amber",
                "type": "string"
              }
            ]
          }
        },
        "tonal": {
          "type": "boolean",
          "description": "When true, applies a lighter tonal variant of the badge color for a more subtle appearance",
          "optional": true
        },
        "value": {
          "type": "number",
          "description": "Numeric value displayed inside the badge, typically used to show counts or notifications",
          "optional": true
        }
      },
      "componentTypeName": "BadgeProps"
    },
    {
      "name": "Avatar",
      "description": "The Avatar component displays a user's profile picture or initials, serving as a visual representation in user interfaces. It enhances personalization and identity recognition, often used in social media, messaging apps, and online platforms to foster engagement and connection among users.",
      "props": {
        "alt": {
          "type": "union",
          "description": "Alternative text for avatar image",
          "typeDefinition": {
            "typeString": "undefined | string",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "string",
                "type": "intrinsic"
              }
            ]
          }
        },
        "crossOrigin": {
          "type": "union",
          "optional": true,
          "description": "CORS setting for loading avatar image",
          "typeDefinition": {
            "typeString": " | anonymous | use-credentials",
            "props": [
              {
                "key": "",
                "type": "string"
              },
              {
                "key": "anonymous",
                "type": "string"
              },
              {
                "key": "use-credentials",
                "type": "string"
              }
            ]
          }
        },
        "draggable": {
          "type": "union",
          "optional": true,
          "description": "Whether the avatar image is draggable",
          "typeDefinition": {
            "typeString": "boolean | true | false",
            "props": [
              {
                "key": "boolean",
                "type": "intrinsic"
              },
              {
                "key": "true",
                "type": "string"
              },
              {
                "key": "false",
                "type": "string"
              }
            ]
          }
        },
        "gap": {
          "type": "number",
          "description": "Space between left/right edge and letters in avatar",
          "optional": true
        },
        "icon": {
          "type": "ReactNode",
          "optional": true,
          "description": "Custom icon component to display in avatar",
          "typeDefinition": {
            "typeString": "ReactNode"
          }
        },
        "onError": {
          "type": "object",
          "optional": true,
          "description": "Handler for when avatar image fails to load",
          "typeDefinition": {
            "typeString": "() => boolean",
            "isFunction": true,
            "props": [
              {
                "key": "boolean",
                "type": "intrinsic",
                "isReturn": true
              }
            ]
          }
        },
        "shape": {
          "type": "union",
          "optional": true,
          "description": "Shape of avatar - circle or square",
          "typeDefinition": {
            "typeString": "circle | square",
            "props": [
              {
                "key": "circle",
                "type": "string"
              },
              {
                "key": "square",
                "type": "string"
              }
            ]
          }
        },
        "size": {
          "type": "AvatarSize",
          "optional": true,
          "description": "Size of avatar in pixels or preset",
          "typeDefinition": {
            "typeString": "AvatarSize"
          }
        },
        "src": {
          "type": "ReactNode",
          "optional": true,
          "description": "Image source URL for avatar",
          "typeDefinition": {
            "typeString": "ReactNode"
          }
        },
        "srcSet": {
          "type": "string",
          "description": "Responsive image sources for different screen sizes",
          "optional": true
        }
      },
      "componentTypeName": "AvatarProps"
    },
    {
      "name": "Alert",
      "description": "The Alert component is a notification tool that conveys important messages to users. It features customizable styles, icons, and actions, allowing for clear communication of success, error, warning, or informational alerts. Ideal for enhancing user experience by providing timely feedback and guidance.",
      "props": {
        "buttonElement": {
          "type": "ReactElement",
          "optional": true,
          "description": "Custom React element to override the default action button implementation",
          "typeDefinition": {
            "typeString": "ReactElement"
          }
        },
        "buttonLabel": {
          "type": "string",
          "description": "Text displayed in the default action button when buttonElement is not provided",
          "optional": true
        },
        "buttonType": {
          "type": "union",
          "optional": true,
          "description": "Sets the action button's appearance as either an inline text link or full-width block",
          "typeDefinition": {
            "typeString": "text | block",
            "props": [
              {
                "key": "text",
                "type": "string"
              },
              {
                "key": "block",
                "type": "string"
              }
            ]
          }
        },
        "closable": {
          "type": "boolean",
          "description": "Enables a close button that allows users to dismiss the alert",
          "optional": true
        },
        "message": {
          "type": "union",
          "description": "The main content to display in the alert, either as text or React element",
          "typeDefinition": {
            "typeString": "string | ReactElement",
            "props": [
              {
                "key": "string",
                "type": "intrinsic"
              },
              {
                "key": "ReactElement",
                "type": "reference",
                "typeDefinition": {
                  "typeString": "ReactElement"
                }
              }
            ]
          }
        },
        "onClickButton": {
          "type": "object",
          "optional": true,
          "description": "Callback function executed when the action button is clicked",
          "typeDefinition": {
            "typeString": "() => void",
            "isFunction": true,
            "props": [
              {
                "key": "void",
                "type": "intrinsic",
                "isReturn": true
              }
            ]
          }
        },
        "onClose": {
          "type": "object",
          "optional": true,
          "description": "Callback function triggered when the alert is dismissed via the close button",
          "typeDefinition": {
            "typeString": "() => void",
            "isFunction": true,
            "props": [
              {
                "key": "void",
                "type": "intrinsic",
                "isReturn": true
              }
            ]
          }
        },
        "showIcon": {
          "type": "boolean",
          "description": "Controls the visibility of the status icon that appears at the start of the alert",
          "optional": true
        },
        "type": {
          "type": "union",
          "optional": true,
          "description": "Determines the alert's visual style and semantic meaning (success, warning, error, or info)",
          "typeDefinition": {
            "typeString": "success | warning | error | info",
            "props": [
              {
                "key": "success",
                "type": "string"
              },
              {
                "key": "warning",
                "type": "string"
              },
              {
                "key": "error",
                "type": "string"
              },
              {
                "key": "info",
                "type": "string"
              }
            ]
          }
        }
      },
      "componentTypeName": "AlertProps"
    },
    {
      "name": "Accordion",
      "description": "The Accordion component is a collapsible UI element that organizes content into expandable sections. Users can click on headers to reveal or hide associated content, enhancing navigation and saving space. Ideal for FAQs, menus, or any content requiring a structured, interactive display.",
      "props": {
        "accordion": {
          "type": "boolean",
          "description": "Enables single-panel-only expansion mode when true",
          "optional": true
        },
        "activeKey": {
          "type": "union",
          "optional": true,
          "description": "Specifies which panel(s) are currently expanded",
          "typeDefinition": {
            "typeString": "string | number | string | number[]",
            "props": [
              {
                "key": "string",
                "type": "intrinsic"
              },
              {
                "key": "number",
                "type": "intrinsic"
              },
              {
                "key": "string | number[]",
                "type": "array",
                "typeDefinition": {
                  "typeString": "string | number[]",
                  "isArray": true,
                  "props": [
                    {
                      "key": "string | number",
                      "type": "union",
                      "typeDefinition": {
                        "typeString": "string | number",
                        "props": [
                          {
                            "key": "string",
                            "type": "intrinsic"
                          },
                          {
                            "key": "number",
                            "type": "intrinsic"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        "defaultActiveKey": {
          "type": "union",
          "optional": true,
          "description": "Sets which panel(s) start expanded on initial render",
          "typeDefinition": {
            "typeString": "string | number | string | number[]",
            "props": [
              {
                "key": "string",
                "type": "intrinsic"
              },
              {
                "key": "number",
                "type": "intrinsic"
              },
              {
                "key": "string | number[]",
                "type": "array",
                "typeDefinition": {
                  "typeString": "string | number[]",
                  "isArray": true,
                  "props": [
                    {
                      "key": "string | number",
                      "type": "union",
                      "typeDefinition": {
                        "typeString": "string | number",
                        "props": [
                          {
                            "key": "string",
                            "type": "intrinsic"
                          },
                          {
                            "key": "number",
                            "type": "intrinsic"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        "ghost": {
          "type": "boolean",
          "description": "Removes borders/background and moves expand icons right for a minimal look",
          "optional": true
        },
        "items": {
          "type": "union",
          "description": "Array of panel configurations containing key, label, children and optional disabled flag",
          "typeDefinition": {
            "typeString": "undefined | ItemType[]",
            "props": [
              {
                "key": "undefined",
                "type": "intrinsic"
              },
              {
                "key": "ItemType[]",
                "type": "array",
                "typeDefinition": {
                  "typeString": "ItemType[]",
                  "isArray": true,
                  "props": [
                    {
                      "key": "ItemType",
                      "type": "reference",
                      "typeDefinition": {
                        "typeString": "ItemType"
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        "onChange": {
          "type": "object",
          "optional": true,
          "description": "Fires when panels are toggled, receiving the active panel key(s)",
          "typeDefinition": {
            "typeString": "(key: string | string[]) => void",
            "isFunction": true,
            "props": [
              {
                "key": "key",
                "type": "string | string[]",
                "isParam": true,
                "optional": false,
                "typeDefinition": {
                  "typeString": "string | string[]",
                  "props": [
                    {
                      "key": "string",
                      "type": "intrinsic"
                    },
                    {
                      "key": "string[]",
                      "type": "array",
                      "typeDefinition": {
                        "typeString": "string[]",
                        "isArray": true,
                        "props": [
                          {
                            "key": "string",
                            "type": "intrinsic"
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "key": "void",
                "type": "intrinsic",
                "isReturn": true
              }
            ]
          }
        }
      },
      "componentTypeName": "AccordionProps"
    }
  ]
}